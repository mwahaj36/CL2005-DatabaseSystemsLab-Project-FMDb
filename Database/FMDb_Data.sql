
 use master
-- Use the FMDb database
USE FMDb;
GO


-- Genres

INSERT INTO Genres (GenreName) VALUES
('Action'),
('Adventure'),
('Animation'),
('Biography'),
('Comedy'),
('Crime'),
('Drama'),
('Family'),
('Fantasy'),
('History'),
('Horror'),
('Music'),
('Musical'),
('Mystery'),
('Romance'),
('Sci-Fi'),
('Sport'),
('Thriller'),
('War'),
('Western');


GO 

 -- Keywords

 -- Insert distinct individual keywords (extracted from all comma-separated values)
INSERT INTO Keywords (KeywordName) VALUES
('surgeon'),
('romcom'),
('stalker'),
('dream girl'),
('taboo'),
('screwball comedy'),
('frisbee'),
('troubadour'),
('intellectual disability'),
('new york city'),
('police brutality'),
('hip-hop'),
('italian american'),
('culture clash'),
('chaos'),
('heat'),
('street war'),
('restaurant critic'),
('radio transmission'),
('punk rock'),
('pizzeria'),
('police operation'),
('pizza'),
('love'),
('money'),
('racism'),
('brooklyn'),
('heatwave'),
('dreams'),
('street gang'),
('society'),
('psychopath'),
('clown'),
('villain'),
('based on comic'),
('murder'),
('psychological thriller'),
('criminal mastermind'),
('mental illness'),
('anarchy'),
('character study'),
('clown makeup'),
('subway train'),
('social realism'),
('supervillain'),
('tv host'),
('1980s'),
('mother son relationship'),
('origin story'),
('falling into madness'),
('frightened'),
('pretentious'),
('rescue'),
('future'),
('australia'),
('chase'),
('dystopia'),
('post-apocalyptic future'),
('survival'),
('on the run'),
('on the road'),
('desert'),
('convoy'),
('peak oil'),
('dark future'),
('post-apocalyptic'),
('car'),
('suspenseful'),
('intense'),
('awestruck'),
('commanding'),
('hopeful'),
('stuntman'),
('missing person'),
('duringcreditsstinger'),
('movie industry'),
('action comedy'),
('playful'),
('based on tv series'),
('grand'),
('romantic'),
('amused'),
('farcical'),
('indian'),
('revenge thriller'),
('action thriller'),
('night club'),
('transgender'),
('lgbt'),
('fan'),
('musical'),
('partner'),
('film in film'),
('hollywood'),
('broadway'),
('dancing in the street'),
('burlesque'),
('audience'),
('chorus girl'),
('diction coach'),
('pearl necklace'),
('flapper'),
('silent film star'),
('squeaky voice'),
('christmas'),
('old hollywood'),
('provocative'),
('sentimental'),
('exuberant'),
('epic'),
('based on novel or book'),
('fight'),
('politics'),
('sandstorm'),
('sand'),
('spice'),
('chosen one'),
('cult'),
('sequel'),
('tragedy'),
('distant future'),
('tragic hero'),
('creature'),
('planet'),
('destiny'),
('giant worm'),
('space opera'),
('sand dune'),
('allegorical'),
('messiah'),
('fall from grace'),
('shocking'),
('domineering'),
('vengeance'),
('vindictive'),
('cautionary'),
('religious allegory'),
('giant creature'),
('power'),
('violence'),
('ambiguous'),
('antagonistic'),
('audacious'),
('bold'),
('foreboding'),
('melodramatic'),
('writer''s block'),
('bollywood'),
('family relationships'),
('relationship'),
('chocolate'),
('prequel'),
('nostalgic'),
('cartel'),
('grandparent grandchild relationship'),
('wedding'),
('east asian lead'),
('family reunion'),
('grandmother'),
('chinese american'),
('family gathering'),
('ethical dilemma'),
('woman director'),
('lung cancer'),
('deadly disease'),
('personal relationships'),
('grandmother granddaughter relationship'),
('asian american'),
('superhero'),
('alien planet'),
('female villain'),
('norse mythology'),
('aftercreditsstinger'),
('marvel cinematic universe (mcu)'),
('norse god'),
('loki'),
('adolescence'),
('fake boyfriend'),
('based on young adult novel'),
('friendship'),
('parent child relationship'),
('prophecy'),
('part live action'),
('based on toy'),
('falling in love'),
('anti villain'),
('super power'),
('good cop bad cop'),
('live action and animation'),
('lego'),
('father son relationship'),
('loving'),
('mischievous'),
('irreverent'),
('evil tyrant'),
('witty'),
('hilarious'),
('whimsical'),
('celebratory'),
('euphoric'),
('exhilarated'),
('ridiculous'),
('infidelity'),
('wife'),
('marriage crisis'),
('investigation'),
('disappearance'),
('whodunit'),
('blunt'),
('psychotic'),
('search party'),
('criminal lawyer'),
('mysterious'),
('detached'),
('murder suspect'),
('missing wife'),
('satirical'),
('perspective'),
('manipulative woman'),
('killed during sex'),
('time travel'),
('halloween party'),
('unrequited love'),
('time loop'),
('do over'),
('baseball bat'),
('exam'),
('car crash'),
('dyslexia'),
('teacher'),
('prom'),
('learning disability'),
('night school'),
('high school drop out'),
('boxing ring'),
('artificial intelligence (a.i.)'),
('the white house'),
('asteroid'),
('climate change'),
('satire'),
('global warming'),
('comet'),
('end of the world'),
('social commentary'),
('social satire'),
('meteorite'),
('astronomer'),
('disaster'),
('teacher student relationship'),
('denial'),
('mass hysteria'),
('london'),
('england'),
('dark comedy'),
('surrey'),
('parody'),
('slacker'),
('friends'),
('zombie'),
('cynical'),
('survival horror'),
('british pub'),
('boyfriend girlfriend relationship'),
('taunting'),
('zombie apocalypse'),
('frantic'),
('desperate'),
('anxious'),
('dramatic'),
('defiant'),
('countryside'),
('police'),
('village'),
('arrest'),
('rural area'),
('conspiracy'),
('serial killer'),
('gunfight'),
('police force'),
('buddy cop'),
('accident'),
('addiction'),
('alcoholism'),
('apocalypse'),
('homage'),
('pub'),
('pub crawl'),
('swing'),
('writer'),
('india'),
('calcutta'),
('newspaper editor'),
('based on short story'),
('19th century'),
('preserved film'),
('pianist'),
('witness to a crime'),
('blind man'),
('piano'),
('san francisco'),
('california'),
('restaurant owner'),
('widower'),
('childhood friends'),
('reconnect'),
('rekindled romance'),
('childhood sweethearts'),
('emigration'),
('class'),
('alzheimer''s disease'),
('teheran (tehran)'),
('iran'),
('maid'),
('divorce'),
('caregiver'),
('marital separation'),
('family argument'),
('rape'),
('trauma'),
('assault'),
('theater play'),
('attack'),
('rape and revenge'),
('death of a salesman'),
('chicago'),
('illinois'),
('post-traumatic stress disorder (ptsd)'),
('airplane'),
('cataclysm'),
('guitar'),
('alcohol'),
('stewardess'),
('taxi driver'),
('passenger'),
('fear of flying'),
('pilot'),
('medicine'),
('air controller'),
('landing'),
('saxophone'),
('autopilot'),
('spoof'),
('food poisoning'),
('los angeles'),
('alcohol abuse'),
('inflatable life raft'),
('anarchic comedy'),
('dying and death'),
('child abuse'),
('philadelphia'),
('pennsylvania'),
('sense of guilt'),
('afterlife'),
('loss of loved one'),
('confidence'),
('psychology'),
('paranormal phenomena'),
('single'),
('cowardliness'),
('single mother'),
('school play'),
('ghost'),
('child'),
('spiritism'),
('ghost child'),
('supernatural thriller'),
('literature'),
('professor'),
('fate'),
('author'),
('death'),
('dying'),
('novelist'),
('publisher'),
('what if'),
('book'),
('narrator'),
('death of father'),
('revenge'),
('kashmir conflict'),
('hamlet'),
('avenge'),
('rage and hate'),
('s.w.a.t.'),
('sadism'),
('self-fulfilling prophecy'),
('detective'),
('insomnia'),
('religion'),
('shootout'),
('corpse'),
('macabre'),
('seven deadly sins'),
('depravity'),
('neo-noir'),
('sinister'),
('ominous'),
('seven: los siete pecados capitales'),
('escape'),
('paranoia'),
('suspicion'),
('video surveillance'),
('deception'),
('hidden camera'),
('simulated reality'),
('television producer'),
('tv show in film'),
('questioning'),
('make believe'),
('reflective'),
('actor'),
('tv show'),
('dignified'),
('allegory of the cave'),
('adultery'),
('circus'),
('biography'),
('rags to riches'),
('based on true story'),
('outcast'),
('singing'),
('dreamer'),
('freak show'),
('absurd'),
('clich√©'),
('complicated'),
('coming out'),
('loneliness'),
('usa'),
('kidnapping'),
('hostage'),
('maze'),
('symbolism'),
('georgia'),
('beating'),
('god'),
('vigilante'),
('crime scene'),
('brutality'),
('candlelight vigil'),
('animal cruelty'),
('sex offender'),
('child abduction'),
('beach'),
('hope'),
('toronto'),
('canada'),
('cousin'),
('dublin'),
('ireland'),
('travel'),
('best friend'),
('job promotion'),
('multiple perspectives'),
('medical school'),
('living with sibling'),
('papercut animation'),
('long term relationship'),
('brother sister relationship'),
('sister sister relationship'),
('college dropout'),
('casual'),
('animator'),
('crush on friend'),
('friend zone'),
('comforting'),
('husband wife relationship'),
('war veteran'),
('fbi'),
('greed'),
('oklahoma'),
('manipulation'),
('native american'),
('series of murders'),
('genocide'),
('period drama'),
('courtroom'),
('guilt'),
('true crime'),
('oil industry'),
('death of sister'),
('catholicism'),
('uncle nephew relationship'),
('catholic guilt'),
('1920s'),
('candid'),
('grim'),
('osage indian'),
('gullibility'),
('poisoning'),
('diabetes'),
('revisionist western'),
('meta'),
('western'),
('depressing'),
('empathetic'),
('harsh'),
('tragic'),
('depression'),
('winter'),
('cat'),
('subway'),
('pregnancy'),
('overdose'),
('melancholy'),
('folk music'),
('aspiring singer'),
('grief'),
('hitchhiker'),
('cafe'),
('recording'),
('self expression'),
('greenwich village'),
('merchant marine'),
('1960s'),
('couchsurfing'),
('bleak'),
('struggling musician'),
('death of friend'),
('autism'),
('mumbai (bombay)'),
('prejudice'),
('disability'),
('asperger''s syndrome'),
('classic bollywood'),
('1970s'),
('reincarnation'),
('sociopath'),
('betrayal'),
('disco'),
('predator turns victim'),
('unlikely lovers'),
('desire for fame'),
('2000s'),
('crossover'),
('high school'),
('affectation'),
('fake identity'),
('bullying'),
('high school sports'),
('adult as a child'),
('age change'),
('lighthearted'),
('enchant'),
('assassin'),
('espionage'),
('spy'),
('arms dealer'),
('terrorism'),
('terrorist attack'),
('nuclear weapons'),
('terrorist plot'),
('backwards'),
('alternate timeline'),
('oslo'),
('norway'),
('time paradox'),
('kyiv (kiev)'),
('ukraine'),
('dead body'),
('deserted island'),
('buddy comedy'),
('fart'),
('con man'),
('con artist'),
('attempted jailbreak'),
('engagement party'),
('mislaid trust'),
('bank fraud'),
('conman'),
('fraudster'),
('mask'),
('social worker'),
('transvestite'),
('nanny'),
('restaurant'),
('custody battle'),
('responsibility'),
('voice acting'),
('divorced couple'),
('gore'),
('stalking'),
('teenage girl'),
('split personality'),
('multiple personality'),
('traumatic childhood'),
('dissociative identity disorder'),
('farm'),
('faith'),
('miracle'),
('alien'),
('alien invasion'),
('crop circle'),
('alien attack'),
('death of wife'),
('loss of faith'),
('alien encounter'),
('wheelchair'),
('road trip'),
('muscular dystrophy'),
('approving'),
('runaway'),
('wrestling'),
('down syndrome'),
('wrestling coach'),
('raft'),
('nursing home'),
('dream come true'),
('escape plan'),
('southern gothic'),
('temple'),
('grandfather'),
('romantic rivalry'),
('ashes'),
('journey'),
('burglar'),
('secret identity'),
('crime fighter'),
('villainess'),
('time bomb'),
('cover-up'),
('destruction'),
('fighting'),
('criminal underworld'),
('cat burglar'),
('flood'),
('martial arts'),
('two man army'),
('chinese mafia'),
('cop'),
('consul'),
('crime lord'),
('art treasures'),
('child kidnapping'),
('action hero'),
('usa president'),
('nuclear war'),
('mass murder'),
('narration'),
('soviet union'),
('retirement'),
('animated scene'),
('doomsday'),
('masked vigilante'),
('doomsday clock'),
('red square'),
('admiring'),
('assertive'),
('samurai'),
('asylum'),
('brothel'),
('sword fight'),
('dragon'),
('robot'),
('inmate'),
('lobotomy'),
('war zone'),
('abusive stepfather'),
('rape culture'),
('alternate reality'),
('physicist'),
('based on memoir or autobiography'),
('fictional biography'),
('motor neuron disease'),
('als'),
('cambridge university'),
('inspirational'),
('japan'),
('hero'),
('world war ii'),
('abusive father'),
('pacifism'),
('bible'),
('vegetarian'),
('okinawa'),
('conscientious objector'),
('soldier'),
('alcoholic'),
('war hero'),
('pacifist'),
('medic'),
('us military'),
('battle of okinawa'),
('congressional medal of honor'),
('combat medic'),
('weaponless'),
('seventh-day adventists'),
('transporter'),
('boxer'),
('angry'),
('boxing'),
('adoring'),
('ambivalent'),
('ku klux klan'),
('black panther party'),
('undercover cop'),
('white supremacy'),
('thoughtful'),
('kkk'),
('kkk rally'),
('right and justice'),
('political activism'),
('black activist'),
('counter-culture'),
('historical fiction'),
('activist'),
('courtroom drama'),
('cave'),
('earthquake'),
('swimming pool'),
('drug use'),
('palm springs'),
('nemesis'),
('maid of honor'),
('carefree'),
('older sister'),
('groundhog day'),
('stuck'),
('sister''s wedding'),
('chance encounter'),
('workaholic'),
('birthday'),
('truth'),
('lie'),
('wish'),
('legal drama'),
('movie business'),
('dc comics'),
('slapstick comedy'),
('car race'),
('sports'),
('car mechanic'),
('le mans'),
('racing'),
('race car driver'),
('powerful'),
('female friendship'),
('female protagonist'),
('campy'),
('teen comedy'),
('lgbt teen'),
('teenage romance'),
('teen drama'),
('generation z'),
('gay theme'),
('lesbian'),
('sapphic'),
('suicide'),
('indiana'),
('new love'),
('lovesickness'),
('moon'),
('moses'),
('prayer'),
('christianity'),
('journalism'),
('news reporter'),
('female journalist'),
('religious conflict'),
('praying'),
('almighty'),
('central intelligence agency (cia)'),
('secret agent'),
('high school reunion'),
('accountant'),
('radical transformation'),
('high school classmates'),
('glory days'),
('sarcastic'),
('sardonic'),
('washington dc'),
('sibling relationship'),
('amusement park'),
('twinkie'),
('body count'),
('zombification'),
('disposing of a dead body'),
('loner'),
('fear of clowns'),
('enthusiastic'),
('saving the world'),
('flying'),
('superhuman'),
('mysterious force'),
('reboot'),
('save the day'),
('dc extended universe (dceu)'),
('save the planet'),
('alien spaceship'),
('resurrection'),
('superhero team'),
('planet invasion'),
('superhero teamup'),
('bounty hunter'),
('extreme sports'),
('cyberpunk'),
('based on manga'),
('female cyborg'),
('live action remake'),
('floating city'),
('gunnm'),
('enraged'),
('straightforward'),
('spacecraft'),
('planet mars'),
('nasa'),
('isolation'),
('botanist'),
('alone'),
('space'),
('engineering'),
('stranded'),
('astronaut'),
('struggle for survival'),
('deep space'),
('potatoes'),
('2030s'),
('mars'),
('life and death'),
('broken engagement'),
('love at first sight'),
('fireworks'),
('religion and supernatural'),
('based on play or musical'),
('teenage crush'),
('grim reaper'),
('doctor'),
('millionaire'),
('death personified'),
('death incarnate'),
('angel of death'),
('encontro marcado'),
('appreciative'),
('compassionate'),
('new year''s eve'),
('vietnam war'),
('vietnam veteran'),
('mentally disabled'),
('waitress'),
('hippie'),
('single parent'),
('optimism'),
('drug addiction'),
('alabama'),
('bus stop'),
('chameleon'),
('military'),
('anti war protest'),
('college american football'),
('america'),
('feel-good'),
('terminal illness'),
('rebellious youth'),
('heartbreak'),
('rock musical'),
('rockstar'),
('slum'),
('cheating'),
('game show'),
('quiz'),
('orphan'),
('taj mahal'),
('soulmates'),
('midlife crisis'),
('babysitter'),
('womanizer'),
('law school'),
('middle school'),
('love affair'),
('divorcee'),
('teenage love'),
('dancing'),
('widow'),
('letter'),
('neighbor'),
('ex-wife'),
('institutionalization'),
('bipolar'),
('restraining order'),
('male mental health'),
('businessman'),
('shyness'),
('hawaii'),
('dysfunctional family'),
('psychological abuse'),
('scam artist'),
('telephone sex'),
('pudding'),
('sweepstakes'),
('harmonium'),
('absurdist'),
('social anxiety'),
('emotional abuse'),
('provo utah'),
('scam call center'),
('overbearing sister'),
('daughter'),
('bookshop'),
('shore'),
('advice columnist'),
('single father'),
('theatre group'),
('north carolina'),
('coming of age'),
('cancer'),
('tragic love'),
('valentine''s day'),
('star crossed lovers'),
('distressing'),
('feminism'),
('patriarchy'),
('doll'),
('fantasy world'),
('motherhood'),
('existentialism'),
('mother daughter relationship'),
('gender discrimination'),
('secret world'),
('matel'),
('deaf-mute'),
('handicapped'),
('rebellion'),
('army'),
('robbery'),
('france'),
('love triangle'),
('mayor'),
('french revolution'),
('barricade');

GO
INSERT INTO Keywords (KeywordName) VALUES
('convict'),
('forced prostitution'),
('police inspector'),
('girl disguised as boy'),
('historical drama'),
('out of wedlock child'),
('historical romance'),
('death of a child'),
('abusive family'),
('corrupt businessman'),
('indifferent'),
('drug dealer'),
('nerd'),
('male friendship'),
('crude humor'),
('high school student'),
('police academy'),
('high school rivalry'),
('bicycle cop'),
('cops'),
('party drugs'),
('one night'),
('fake id'),
('serene'),
('small town'),
('loss of virginity'),
('teen movie'),
('rumor'),
('pretend relationship'),
('gay friend'),
('teenager'),
('bet'),
('gambling'),
('auction'),
('ethiopia'),
('art house'),
('debt'),
('apartment building'),
('opal'),
('pawnshop'),
('city life'),
('independent film'),
('black opal'),
('music recording'),
('singer-songwriter'),
('street musician'),
('recording session'),
('street singer'),
('newspaper'),
('journalist'),
('killing'),
('victim'),
('code'),
('young man'),
('fourth of july'),
('newspaper article'),
('curious'),
('cartoonist'),
('zodiac killer'),
('clinical'),
('bar'),
('video game'),
('virtual reality'),
('gun'),
('gamer'),
('bank robbery'),
('bank teller'),
('programmer'),
('mmorpg'),
('heroic'),
('vrmmo'),
('mad scientist'),
('raccoon'),
('hopeless'),
('cosmic'),
('outer space'),
('chosen family'),
('cheerful'),
('disheartening'),
('sympathetic'),
('taxi'),
('corruption'),
('new jersey'),
('expensive restaurant'),
('blackmail'),
('mistaken identity'),
('stripper'),
('mafia boss'),
('muscleman'),
('district attorney'),
('manhattan'),
('outtakes'),
('detectives'),
('breaking in'),
('thieves'),
('married couple with children'),
('reservation'),
('game'),
('group of friends'),
('classmates'),
('pornography'),
('private investigator'),
('private eye'),
('earnest'),
('vibrant'),
('immigrant'),
('muslim'),
('roommates'),
('sadness'),
('sarcasm'),
('comedian'),
('one-man show'),
('pakistan'),
('matchmaking'),
('cultural difference'),
('hospital'),
('illness'),
('intercultural relationship'),
('college student'),
('uber'),
('traditional family'),
('comedy club'),
('stand-up comedian'),
('grad school'),
('atomic bomb'),
('patriotism'),
('new mexico'),
('atomic bomb test'),
('physics'),
('historical event'),
('communism'),
('red scare'),
('mccarthyism'),
('top secret project'),
('moral dilemma'),
('usa politics'),
('1940s'),
('antisemitism'),
('20th century'),
('manhattan project'),
('los alamos'),
('concert'),
('nazi'),
('resistance'),
('warsaw ghetto'),
('polish resistance'),
('homeland'),
('holocaust (shoah)'),
('hunger'),
('prisoner of war'),
('ghetto'),
('deportation'),
('jew persecution'),
('liberation'),
('poland'),
('theater director'),
('lawyer'),
('divorce lawyer'),
('sincere'),
('elephant'),
('gambling debt'),
('orgy'),
('cocaine'),
('champagne'),
('filmmaking'),
('movie star'),
('fading star'),
('sex'),
('funeral'),
('boston'),
('massachusetts'),
('brother'),
('boat'),
('house fire'),
('nephew'),
('ex-husband ex-wife relationship'),
('legal guardian'),
('dysfunctional life'),
('times square'),
('marijuana'),
('magic realism'),
('meditative'),
('jealousy'),
('gallery'),
('date'),
('architect'),
('interview'),
('sister'),
('summer'),
('year'),
('heartache'),
('magic'),
('competition'),
('obsession'),
('hostility'),
('diary'),
('twist'),
('tricks'),
('illusion'),
('rivalry'),
('steampunk'),
('cruelty'),
('hanging'),
('jail cell'),
('nikola tesla'),
('magician'),
('tesla coil'),
('bittersweet'),
('mind-blowing'),
('imaginary friend'),
('hitler youth'),
('nazism'),
('child protagonist'),
('adolf hitler'),
('children in wartime'),
('externally controlled action'),
('hypnosis'),
('parents-in-law'),
('racist'),
('interracial relationship'),
('biting'),
('neurosurgeon'),
('stereotype'),
('brain surgery'),
('race-conscious'),
('atlanta'),
('crime boss'),
('heist'),
('getaway car'),
('getaway driver'),
('sign languages'),
('armed robbery'),
('hearing impaired'),
('joyful'),
('urgent'),
('hacker'),
('ex-girlfriend'),
('harvard university'),
('narcissism'),
('hacking'),
('twins'),
('double cross'),
('creator'),
('frat party'),
('social network'),
('deposition'),
('intellectual property'),
('entrepreneur'),
('arrogance'),
('social media'),
('young entrepreneur'),
('facebook'),
('callous'),
('guerrilla warfare'),
('swastika'),
('paris'),
('self sacrifice'),
('dynamite'),
('mexican standoff'),
('german occupation of france'),
('british politics'),
('teen angst'),
('high school graduation'),
('loss of job'),
('catholic school'),
('first love'),
('semi autobiographical'),
('sacramento'),
('college applications'),
('shrew'),
('shakespeare in modern dress'),
('opposites attract'),
('overprotective father'),
('skateboarding'),
('ex-boyfriend'),
('dating'),
('guitar player'),
('break-up'),
('based on graphic novel'),
('whipping'),
('hipster'),
('underage girlfriend'),
('unconsciousness'),
('girl fight'),
('vegan'),
('garage band'),
('band competition'),
('mission'),
('philosophy'),
('memory'),
('architecture'),
('dream world'),
('subconscious'),
('hotel'),
('painting'),
('wartime'),
('eastern europe'),
('theft'),
('bellboy'),
('mentor prot√©g√© relationship'),
('european'),
('hotel lobby'),
('renaissance painting'),
('1930s'),
('ironic'),
('joyous'),
('joker'),
('scarecrow'),
('organized crime'),
('regret'),
('deja vu'),
('amnesia'),
('operation'),
('relationship problems'),
('brainwashing'),
('memory manipulation'),
('race against time'),
('time warp'),
('expedition'),
('space travel'),
('wormhole'),
('famine'),
('hibernation'),
('black hole'),
('quantum mechanics'),
('scientist'),
('farmer'),
('space station'),
('space adventure'),
('cryonics'),
('cornfield'),
('time manipulation'),
('composer'),
('artist'),
('hiv/aids epidemic'),
('portrait of an artist'),
('dance'),
('jazz'),
('ambition'),
('casting'),
('coffee shop'),
('jazz club'),
('traffic jam'),
('pier'),
('audition'),
('planetarium'),
('aspiring actor'),
('movie set'),
('sunset'),
('one woman show'),
('pool party'),
('griffith observatory'),
('horse'),
('exploitation'),
('ufo'),
('child star'),
('chimpanzee'),
('horse farm'),
('african american man'),
('racial issues'),
('luck'),
('deadly snake'),
('shinkansen'),
('kung fu'),
('generations conflict'),
('chinese woman'),
('surrealism'),
('laundromat'),
('chinese'),
('hot dog'),
('asian woman'),
('chinese immigrant'),
('imaginative'),
('intergenerational trauma'),
('internal revenue service'),
('interdimensional travel'),
('island'),
('donkey'),
('irish civil war (1922-23)'),
('church'),
('drinking'),
('former best friend'),
('self mutilation'),
('fiddle'),
('big family'),
('mansion'),
('family home'),
('murder mystery'),
('privilege'),
('drug smuggling'),
('girlfriend'),
('snack bar'),
('hong kong'),
('expiration date'),
('flight attendant'),
('cleaning'),
('worker'),
('homeless person'),
('bus'),
('homelessness'),
('church service'),
('bad luck'),
('salesman'),
('stockbroker'),
('inspiring story'),
('poor'),
('working life'),
('happiness'),
('capitalism'),
('black market'),
('identity'),
('beauty'),
('aging'),
('celebrity'),
('has been'),
('aerobics'),
('disfigurement'),
('beauty standards'),
('insecure woman'),
('toxic masculinity'),
('body horror'),
('female rage'),
('youth'),
('actress'),
('attraction'),
('pakistani culture'),
('social life'),
('social justice'),
('italy'),
('patriarch'),
('europe'),
('mafia'),
('crime family'),
('sicilian mafia'),
('religious hypocrisy'),
('gun violence'),
('rise to power'),
('dead horse'),
('gang violence'),
('massage'),
('stolen money'),
('briefcase'),
('redemption'),
('heirloom'),
('dance competition'),
('empire'),
('emperor'),
('hallucinogen'),
('treason'),
('baron'),
('premonition'),
('water shortage'),
('knife fight'),
('wonder'),
('jewish american'),
('american abroad'),
('irishman'),
('scheme'),
('gangsters'),
('age difference'),
('balloon'),
('dog'),
('pets'),
('exploring'),
('senior');

GO
INSERT INTO Keywords (KeywordName) VALUES
('1830s'),
('1850s'),
('1890s'),
('1900s'),
('1910s'),
('1950s'),
('1990s'),
('2010s'),
('2020s'),
('2040s'),
('3d animation'),
('9/11'),
('abraham lincoln'),
('absurdism'),
('abuse of power'),
('abusive mother'),
('accidental incest'),
('accomplice'),
('action'),
('adopted son'),
('adoptive father'),
('adult animation'),
('adventure'),
('adventurer'),
('advertising expert'),
('afi'),
('africa'),
('african american'),
('aggressive'),
('agreement'),
('aids'),
('airport'),
('alcohol problems'),
('alexandria egypt'),
('alien language'),
('alien life-form'),
('alien monster'),
('alien race'),
('alienation'),
('alligator'),
('alter ego'),
('alternate dimension'),
('alternative reality'),
('ambiguity'),
('american businessman'),
('american dream'),
('ancient evil'),
('android'),
('anger'),
('animal shelter'),
('animasi'),
('animated film'),
('animation'),
('anime'),
('anjing'),
('annulment'),
('anonymity'),
('ant'),
('anthropomorphism'),
('anti hero'),
('anti war'),
('apathetic'),
('apologetic'),
('apparition'),
('apprentice'),
('arcade'),
('archery'),
('arena'),
('arizona'),
('armies'),
('arms deal'),
('army of the dead'),
('art collector'),
('art gallery'),
('artic'),
('artificial intelligence (a.i.'),
('arts'),
('asian origins'),
('aspiring actress'),
('assault rifle'),
('assistant'),
('asthma'),
('atlantic city'),
('attic'),
('austria'),
('authoritarian'),
('autobiography'),
('avant garde'),
('baffled'),
('bakery'),
('banishment'),
('bank'),
('bank job'),
('banker'),
('bankruptcy'),
('baptism'),
('bar mitzvah'),
('barn'),
('barrel'),
('based on magazine'),
('based on real person'),
('based on short'),
('based on video game'),
('basketball'),
('bath house'),
('bathtub'),
('battle'),
('battle assignment'),
('battle of the sexes'),
('battlefield'),
('bear'),
('beard'),
('beaten to death'),
('bed'),
('belonging'),
('bencana'),
('bencana alam'),
('berlin'),
('bhutan'),
('biblical'),
('big city'),
('billionaire'),
('bird'),
('birds'),
('birthday party'),
('bisexual man'),
('bitterness'),
('black and white'),
('black comedy'),
('black humor'),
('black magic'),
('black slave'),
('blackface'),
('blindness'),
('blizzard'),
('bloody'),
('bloody body of child'),
('boarding school'),
('boardwalk'),
('body mutilation'),
('body-swap'),
('bomb'),
('bomb remote detonator'),
('booby trap'),
('bow and arrow'),
('bowling'),
('bowling alley'),
('bowling ball'),
('bowling team'),
('boy next door'),
('boys'' boarding school'),
('boys'' love (bl'),
('brain transplant'),
('bratva (russian mafia'),
('bravery'),
('breaking the fourth wall'),
('bribery'),
('bride'),
('brighton beach'),
('brisk'),
('british secret service'),
('brontosaurus'),
('brother against brother'),
('brother brother relationship'),
('brother sister incest'),
('brother sister sex'),
('brotherhood'),
('brothers'),
('budapest'),
('buddy'),
('building'),
('bullet wound'),
('bunker'),
('burial ground'),
('buried alive'),
('buried treasure'),
('burn injury'),
('burung'),
('button'),
('cabin fever'),
('calamity'),
('calm'),
('calypso'),
('capitalist'),
('captive bolt gun'),
('captivity'),
('captured'),
('capybara'),
('car accident'),
('car chase'),
('car dealership'),
('caretaker'),
('carnival'),
('carpet'),
('cartoon'),
('cartoon cat'),
('cartoon donkey'),
('casablanca'),
('casino'),
('castle'),
('cat and mouse'),
('catholic'),
('cellar'),
('cemetery'),
('central intelligence agency (cia'),
('chainsaw'),
('chancel'),
('charles manson'),
('chattanooga'),
('chef'),
('chicken'),
('child abandonment'),
('child bride'),
('child driving car'),
('child hero'),
('child in peril'),
('child prostitution'),
('children in danger'),
('china'),
('christmas party'),
('christmas present'),
('christmas time'),
('cider'),
('cinderella story'),
('circumstance'),
('city hall'),
('civil war'),
('clairvoyant'),
('class differences'),
('class prejudice'),
('claustrophobic'),
('clerk'),
('cliff'),
('clique'),
('closeted homosexual'),
('coal mine'),
('codependency'),
('coin toss'),
('coincidence'),
('cold'),
('cold blooded killer'),
('collector'),
('college'),
('colorado'),
('columbus'),
('coma'),
('comedy'),
('comedy thriller'),
('comic book shop'),
('commercial'),
('communication'),
('complex'),
('computer animation'),
('computers'),
('conceited'),
('concentration camp'),
('condom'),
('coney island'),
('confession'),
('confused identities'),
('connecticut'),
('consequences'),
('conservatory'),
('conspiracy theory'),
('consumerism'),
('contract'),
('convent'),
('cook'),
('coraline'),
('coraline y la puerta'),
('corrupt politician'),
('corruptibility'),
('costume shop'),
('cotton plantation'),
('countdown'),
('country house'),
('courage'),
('court'),
('court case'),
('coven'),
('covid-19'),
('cowboy'),
('craigslist'),
('creatures'),
('creepy doll'),
('crime epic'),
('crime investigation'),
('crime spree'),
('criminal'),
('criminal as protagonist'),
('criminal organization'),
('criminal plot'),
('critical'),
('crooked lawyer'),
('cross dressing'),
('crucifix'),
('cruel'),
('cuba'),
('cuban refugees'),
('culinary arts'),
('cult figure'),
('curse'),
('dallas texas'),
('dance performance'),
('dark'),
('dark magic'),
('dark romance'),
('darkness'),
('dating history'),
('dating woes'),
('daycare'),
('dead'),
('deaf'),
('deal with the devil'),
('death game'),
('death in childbirth'),
('death in family'),
('death match'),
('death of brother'),
('death of king'),
('death of mother'),
('death penalty'),
('death row'),
('deceived husband'),
('decoy'),
('dedication'),
('defeat'),
('degenerate'),
('delusion'),
('demeanor course'),
('demon'),
('demonic'),
('demonic possession'),
('demonology'),
('dentist'),
('depressed'),
('derisive'),
('desire'),
('destination wedding'),
('determinism'),
('detroit'),
('dialog driven'),
('didactic'),
('dinner'),
('dinosaur'),
('direct'),
('disaster movie'),
('disc'),
('discrimination'),
('disdainful'),
('disfigured face'),
('disguise'),
('disgusted'),
('district'),
('disturbed'),
('disturbing'),
('django'),
('dna'),
('dogs'),
('dollhouse'),
('domestic abuse'),
('domestic violence'),
('door'),
('doppelg√§nger'),
('double identity'),
('dramedy'),
('dread'),
('dream sequence'),
('dreary'),
('dressmaker'),
('drinking blood'),
('driven to suicide'),
('drives'),
('driving school'),
('drowning'),
('drug cartel'),
('drug deal'),
('drug lord'),
('drug trafficking'),
('drug war'),
('drugs'),
('drummer'),
('drums'),
('drunk'),
('dual identity'),
('dual personality'),
('duality'),
('dubious'),
('dwarf'),
('dwarves'),
('dysfunctional marriage'),
('eating disorder'),
('eccentric man'),
('education'),
('ego'),
('election campaign'),
('electric chair'),
('electric fence'),
('elementary school'),
('elves'),
('enchantment'),
('end'),
('enviromental'),
('epic battle'),
('epic quest'),
('eroticism'),
('escapism'),
('europe vacation'),
('evacuation'),
('evil'),
('evil corporation'),
('evil doll'),
('evil mastermind'),
('evil nun'),
('evil spell'),
('evil spirits'),
('ex priest'),
('ex-boyfriend ex-girlfriend relationship'),
('ex-con'),
('excited'),
('exorcism'),
('exoskeleton'),
('exotic dancer'),
('exotic island'),
('expectant mother'),
('experiment'),
('exploitation of friendship'),
('exploration'),
('exploring sexuality'),
('extramarital affair'),
('extrasensory perception'),
('eye'),
('factual'),
('failure'),
('fairy godmother'),
('fairy tale'),
('faithful adaptation'),
('fake dating'),
('false history'),
('fame'),
('familiar'),
('family'),
('family drama'),
('family estate'),
('family vacation'),
('fanatic'),
('fantasy'),
('fantasy creature'),
('farm life'),
('fashion'),
('fashion designer'),
('fashion industry'),
('fashion model'),
('fashion show'),
('fashionista'),
('father'),
('father daughter estrangement'),
('father daughter incest'),
('father daughter relationship'),
('father murder'),
('father-in-law'),
('fear'),
('fear of death'),
('female agent'),
('female assassin'),
('female bully'),
('female coach'),
('female empowerment'),
('female hero'),
('female investigator'),
('female nudity'),
('female sexuality'),
('female spy'),
('female stripping'),
('fictional awards show'),
('field agent'),
('fifth part'),
('fight to the death'),
('fighter pilot'),
('filicide'),
('film bisu'),
('film noir'),
('film production'),
('film within a film'),
('finance trading'),
('finances'),
('financial crisis'),
('financial problem'),
('fine dining'),
('finland'),
('fire'),
('firearm'),
('first contact'),
('first date'),
('fish'),
('fish out of water'),
('fitness'),
('flashback'),
('flea market'),
('flirt'),
('florida'),
('flying car'),
('folklore'),
('follower'),
('food'),
('food critic'),
('foot race'),
('forbidden love'),
('forced to kill'),
('forest'),
('forgiveness'),
('fortune teller'),
('found footage'),
('fox'),
('franchise'),
('frankenstein'),
('fraud'),
('french cuisine'),
('fugitive'),
('fugue state'),
('future war'),
('galaxy'),
('gamestop'),
('gang'),
('gangster'),
('garage sale'),
('gay interest'),
('gender dysphoria'),
('gentle'),
('gentleminions'),
('german'),
('germany'),
('ghost hunter'),
('ghoulish'),
('giant ape'),
('giant monster'),
('giant snake'),
('giant spider'),
('girls'' school'),
('global threat'),
('gloomy'),
('goblin'),
('goblins'),
('godzilla'),
('gold'),
('good becoming evil'),
('good versus evil'),
('gossip'),
('gothic'),
('gothic horror'),
('government agent'),
('graceland'),
('grade'),
('graduation party'),
('graphic'),
('gravity'),
('great depression'),
('great war'),
('greek mythology'),
('guide'),
('guns'),
('gym'),
('halloween'),
('halloween night'),
('hallucination'),
('hammer'),
('hamptons'),
('hand drawn animation'),
('hand to hand combat'),
('handgun'),
('handshake'),
('hangman'),
('harvard business school'),
('hatred'),
('haunted doll'),
('haunted hotel'),
('haunted house'),
('haunting'),
('haute couture'),
('haute cuisine'),
('healing'),
('heart attack'),
('heartfelt'),
('hedonism'),
('held hostage'),
('helicopter'),
('helicopter parenting'),
('hero''s journey'),
('heroism'),
('high fantasy'),
('high society'),
('hiking'),
('hitman'),
('hobbit'),
('hobbits'),
('holiday'),
('hollywood hills'),
('holocaust (shoah'),
('home invasion'),
('homeland security'),
('homesickness'),
('hometown'),
('homicide'),
('homicide investigation'),
('honeymoon'),
('honor'),
('hooker'),
('horrific crime'),
('horrified'),
('horror'),
('horror comedy'),
('horror filmmaking'),
('horror for children'),
('horror western'),
('horseback riding'),
('hostile'),
('hostile takeover'),
('hotel room'),
('house party'),
('human cloning'),
('human nature'),
('human subjugation'),
('human vs alien'),
('human vulnerabilities'),
('humility'),
('hungary'),
('hunted'),
('hurricane'),
('hypnotism'),
('hypothermia'),
('iceberg'),
('identical twins'),
('identity crisis'),
('illegal prostitution'),
('illumination'),
('imagination'),
('immaturity'),
('immortality'),
('impending divorce'),
('impostor'),
('impregnation'),
('imprisonment'),
('inanimate objects come to life'),
('incest'),
('individual'),
('ineptitude'),
('inflammatory'),
('informative'),
('innocence'),
('insane asylum'),
('insider trading'),
('insidious'),
('inspired by novel or book'),
('instructive'),
('intelligence agency'),
('internet personality'),
('internet scam'),
('interracial marriage'),
('intimate'),
('investigator'),
('investing'),
('investment'),
('invisibility'),
('invulnerability'),
('iraq war'),
('irish-american'),
('isolated farmhouse'),
('jacket'),
('jail'),
('jail guard'),
('japan style'),
('japanese high school'),
('japanese junior high schooler'),
('japanese mafia'),
('japanese mythology'),
('jazz band'),
('jazz singer or musician'),
('jet lag'),
('jimmy hoffa'),
('judge'),
('jukebox musical'),
('jump scare'),
('jungle'),
('junk food'),
('jurors'),
('jury duty'),
('kaiju'),
('kapibara'),
('karaoke'),
('kashmir'),
('kazakhstan'),
('kendo'),
('kgb'),
('kids'),
('killer'),
('killer as protagonist'),
('killer doll'),
('killer toys'),
('killing spree'),
('kindness'),
('king'),
('king kong'),
('kingdom'),
('knee injury'),
('komodo dragon'),
('koran'),
('kucing'),
('la llorona'),
('labor union'),
('labrador'),
('labyrinth'),
('lake'),
('land mine'),
('language'),
('langue fran√ßaise'),
('lap dance'),
('las vegas'),
('laser gun'),
('late coming of age'),
('late-night show'),
('laut'),
('lava'),
('leave'),
('legend'),
('lemur'),
('library'),
('life after death'),
('lifeboat'),
('liminal space'),
('linguist'),
('linguistics'),
('lisbon'),
('loan'),
('located in japan'),
('long island'),
('lordship'),
('loss'),
('loss of a friend'),
('loss of sense of reality'),
('loss of son'),
('lost ring'),
('love of one''s life'),
('love problems'),
('love story'),
('lsd'),
('lunatic asylum'),
('lust'),
('lying'),
('macao'),
('machine town'),
('madness'),
('magic spell'),
('magic world'),
('magical creature'),
('magical object'),
('maine'),
('make a match'),
('male egos'),
('male model'),
('male rape'),
('malfeasance'),
('malibu'),
('malicious'),
('man vs machine'),
('man with female alter ego'),
('manic'),
('manipulation of the media'),
('manipulative friend'),
('manipulative relationship'),
('manson family murders'),
('marital crisis'),
('marital rape'),
('marriage'),
('marriage proposal'),
('married couple'),
('marsh'),
('marvel cinematic universe (mcu'),
('masculinity'),
('masked ball'),
('masked superhero'),
('masked supervillain'),
('master thief'),
('masturbation'),
('math genius'),
('math teacher'),
('matriarch'),
('matter of life and death'),
('mayoral election'),
('mean spirited'),
('meaningful'),
('mechanical hand'),
('meddling parents'),
('media tycoon'),
('medication'),
('medium'),
('meet the family'),
('memoirs'),
('mental health'),
('mentor'),
('mermaid'),
('method acting'),
('mexican cartel'),
('mexican folklore'),
('mexico'),
('mi6'),
('miami'),
('miami beach'),
('michigan'),
('middle east'),
('military officer'),
('military operation'),
('mine'),
('miner'),
('miniatures'),
('miniaturization'),
('minister'),
('ministry'),
('minivan'),
('minneapolis'),
('minnesota'),
('misanthrophy'),
('misfit'),
('misogyny'),
('mississippi'),
('mistake'),
('mixed martial arts (mma'),
('mob family'),
('mobster'),
('mockery'),
('mocking'),
('mockumentary'),
('modeling'),
('modern'),
('modern-day western'),
('modest'),
('monkey'),
('monster'),
('montage'),
('montenegro'),
('mormon missionary'),
('morocco'),
('mortgage'),
('moscow'),
('motel'),
('motel room'),
('mother'),
('motorcycle'),
('mountain'),
('mourning'),
('movie theater'),
('moving'),
('moving to a city'),
('muggle'),
('multiple personality disorder'),
('mumbai (bombay'),
('murder investigation'),
('murder trial'),
('murderer'),
('muse'),
('museum'),
('music business'),
('music school'),
('music teacher'),
('musical comedy'),
('musician'),
('mutant'),
('mute'),
('mutilation'),
('mystery'),
('mystical land'),
('naive children'),
('nanobots'),
('nationalism'),
('natural disaster'),
('necrophilia'),
('neighborhood'),
('neil gaiman'),
('neo-western'),
('new england'),
('new german cinema'),
('new girl at school'),
('new hollywood'),
('new home'),
('new neighbor'),
('new rochelle'),
('new toy'),
('new year'),
('new year''s party'),
('new york'),
('new york knicks'),
('new york state'),
('new york subway'),
('newborn baby'),
('newspaper or article'),
('night bus'),
('night stalker'),
('nightclub'),
('nightmares'),
('nihilism'),
('no dialogue'),
('noise'),
('nonbinary director'),
('nonlinear timeline'),
('north dakota'),
('northern norway'),
('nostalgia'),
('notebook'),
('nuclear family'),
('nude swimming'),
('numbers'),
('nun'),
('nurse'),
('occult'),
('ocean'),
('ocean liner'),
('oedipus complex'),
('ogre'),
('ohio'),
('oil'),
('oil field'),
('old flame'),
('old west'),
('older man younger woman relationship'),
('older woman seduces younger guy'),
('one last job'),
('one-night stand'),
('one-person film'),
('online dating'),
('optimistic'),
('orcs'),
('oregon'),
('orphan siblings'),
('osaka'),
('ostracism'),
('other worldly'),
('overbearing father'),
('owl'),
('oxford university'),
('pain'),
('palazzo'),
('paleontology'),
('pandemic'),
('panic'),
('paper mache'),
('parallel universe'),
('parallel world'),
('paranoid'),
('paranormal'),
('paranormal investigation'),
('parapsychology'),
('parenting'),
('parents'),
('part animation'),
('party'),
('past love'),
('past relationship'),
('pastiche'),
('pastor'),
('paternity'),
('pathetic'),
('peasant'),
('pediatrician'),
('peep show'),
('perfection'),
('perfectionist'),
('period piece'),
('persidangan'),
('personal trainer'),
('personality change'),
('personification'),
('pessimistic'),
('petrol'),
('philosophical'),
('photographer'),
('pilot school'),
('pimp'),
('pipeline'),
('pizza boy'),
('plague'),
('plantation'),
('plantation owner'),
('plastic surgery'),
('plutonium'),
('poetry'),
('poison'),
('poker'),
('police chase'),
('police impersonator'),
('police officer'),
('police procedural'),
('political ambition');

GO
INSERT INTO Keywords (KeywordName) VALUES
('political corruption'),
('political intrigue¬†'),
('politician'),
('pop star'),
('porsche'),
('portal'),
('portugal'),
('possessed doll'),
('possession'),
('post civil war'),
('post world war ii'),
('post-traumatic stress disorder (ptsd'),
('postmodern'),
('poverty'),
('power dynamics'),
('power madness'),
('prank'),
('precocious child'),
('preparatory school'),
('president'),
('presidential election'),
('priest'),
('prince'),
('princess'),
('prison'),
('prison escape'),
('prison guard'),
('prisoner abuse'),
('private detective'),
('prodigy'),
('professional assassin'),
('projectionist'),
('propaganda'),
('property'),
('prosecution'),
('prospector'),
('prostitute'),
('prostitution'),
('proto-slasher'),
('psychiatric hospital'),
('psychic power'),
('psychic vision'),
('psycho'),
('psychological disintegration'),
('psychological horror'),
('psychological terror'),
('psychosexual'),
('psychotronic film'),
('public humiliation'),
('puerto rico'),
('queen'),
('quest'),
('quest for identity'),
('quest for knowledge'),
('quiet'),
('quitting a job'),
('radio'),
('rage'),
('rain'),
('ransom'),
('real estate'),
('reanimated corpse'),
('rebel'),
('recreational vehicle'),
('reddit'),
('relationship sabotage'),
('relationships'),
('religious fundamentalism'),
('religious horror'),
('religious trauma'),
('remade'),
('remake'),
('remote island'),
('repetition'),
('reporter'),
('repression'),
('requel'),
('rescue mission'),
('rescue team'),
('research'),
('resourcefulness'),
('restart'),
('retired detective'),
('revenge murderer'),
('revisionist history'),
('revolt'),
('revolution'),
('rhode island'),
('rich snob'),
('rich woman poor man'),
('riddle'),
('ring'),
('rio de janeiro'),
('riot'),
('rise and fall'),
('ritual'),
('ritual murder'),
('road movie'),
('robin hood'),
('rock ''n'' roll'),
('rodeo'),
('rogue agent'),
('romance'),
('romania'),
('romantic dramedy'),
('romantic fantasy'),
('rome'),
('roof'),
('roof-top'),
('rookie'),
('route 66'),
('royal family'),
('royalty'),
('ruins'),
('running away'),
('runway model'),
('rural india'),
('russia'),
('russian oligarch'),
('sacrifice'),
('sad'),
('sadistic psychopath'),
('salesclerk'),
('santa cruz'),
('satanic cult'),
('satanic panic'),
('satanic ritual'),
('satanism'),
('satanist'),
('satellite'),
('scary doll'),
('scathing'),
('scholar'),
('school'),
('school class'),
('school friend'),
('school of witchcraft'),
('school trip'),
('schoolteacher'),
('scorpion'),
('seattle'),
('seclusion'),
('secret door'),
('secret government agency'),
('secret headquarters'),
('secret intelligence service'),
('secret love'),
('secret mission'),
('secret organization'),
('secret past'),
('secret service'),
('secret society'),
('secretary'),
('secrets'),
('securities'),
('seduction'),
('self destructiveness'),
('self-discovery'),
('self-harm'),
('self-referential'),
('senate'),
('serious'),
('sex education'),
('sex party'),
('sex worker'),
('sexual awakening'),
('sexual desire'),
('sexual obsession'),
('sexuality'),
('shackles'),
('shadow'),
('shanghai'),
('shapeshifting'),
('sharon tate'),
('shelter'),
('sheriff'),
('shield'),
('ship'),
('shipwreck'),
('shock treatment'),
('shoujo'),
('showdown'),
('shower'),
('shrine'),
('shrinking'),
('sick mother'),
('sidang'),
('silence'),
('sin'),
('sing sing'),
('singapore'),
('singer'),
('singing in a car'),
('sinking ship'),
('skeleton'),
('skyscraper'),
('slasher'),
('slave trade'),
('slavery'),
('sleepover'),
('sleigh'),
('slice of life'),
('smolensk'),
('smuggling (contraband'),
('sniper'),
('snow'),
('snowed in'),
('snowglobes'),
('snowstorm'),
('social injustice'),
('social media influencer'),
('socially awkward'),
('soho'),
('soldiers'),
('somber'),
('somnambulism'),
('sorcerer'),
('sorcery'),
('south korea'),
('southeast asia'),
('southern usa'),
('space battle'),
('space colony'),
('space sci-fi'),
('spaceport'),
('spaceship'),
('spider web'),
('spin off'),
('spirit'),
('spirits'),
('spirituality'),
('sports drama'),
('spousal abuse'),
('spycraft'),
('stagecoach'),
('stardom'),
('steerage'),
('stock market'),
('stock price'),
('stock swindle'),
('stockholder'),
('stocks and bonds'),
('stop motion'),
('strip club'),
('strip show'),
('strong woman'),
('struggling actor'),
('stuffed animal'),
('stunt double'),
('stunt driver'),
('subliminal message'),
('suburbia'),
('subway station'),
('success'),
('suicide attempt'),
('suicide investigation'),
('suitcase'),
('sunken ship'),
('super hero'),
('super soldier'),
('super villain'),
('supernatural'),
('supernatural creature'),
('supernatural horror'),
('supernatural power'),
('support group'),
('surreal'),
('surveillance specialist'),
('survival competition'),
('survivalist'),
('sushi restaurant'),
('swamp'),
('sword'),
('sword and sorcery'),
('sword making'),
('s√©ance'),
('tale'),
('talking'),
('talking cat'),
('talking dog'),
('tampa'),
('taskmaster'),
('taxes'),
('taxidermy'),
('teamwork'),
('technology'),
('teddy bear'),
('teenage boy'),
('teenage friendship'),
('teenage hero'),
('teenage life'),
('teenage rebellion'),
('teheran (tehran'),
('telepathy'),
('telephone'),
('teleportation'),
('televangelist'),
('tennessee'),
('tennis'),
('tennis court'),
('tennis player'),
('tennis pro'),
('tense'),
('tension'),
('tentacle'),
('texas'),
('the conjuring universe'),
('theatre'),
('theme park'),
('therapist'),
('therapy'),
('thief'),
('thriller'),
('thunderstorm'),
('time'),
('time machine'),
('time magazine'),
('time skip'),
('time-manipulation'),
('titanic'),
('tokyo'),
('told in flashback'),
('toothpick'),
('torture'),
('tourist'),
('tournament'),
('toy'),
('toy car'),
('toy comes to life'),
('tracking device'),
('tragic romance'),
('trailer park'),
('train'),
('train accident'),
('training'),
('training camp'),
('traitor'),
('transformation'),
('tree'),
('trees'),
('trekking'),
('triceratops'),
('troll'),
('trolls'),
('troubled childhood'),
('troubled youth'),
('tunnel'),
('turn of the century'),
('turns into animal'),
('twin brother'),
('twin sisters'),
('tyrannosaurus rex'),
('tyranny'),
('tyrant'),
('u.s. marshal'),
('u.s. navy'),
('ulterior motive dating'),
('undercover'),
('undercover agent'),
('underground lake'),
('underground world'),
('underwater'),
('unemployed'),
('unexpected death'),
('united kingdom'),
('university'),
('unlikely friendship'),
('unprotected sex'),
('unsettling'),
('unsociability'),
('upper class'),
('uprising'),
('urination'),
('usa‚Äìmexico border'),
('uxoricide'),
('uzi'),
('vacation'),
('valak'),
('vampire'),
('vampire hunter (slayer'),
('van'),
('vatican (holy see'),
('vegas wedding'),
('venice'),
('vermont'),
('vhs'),
('viagra'),
('vice president'),
('vichy regime'),
('victorian era'),
('video store'),
('vienna'),
('vienna opera'),
('vietcong'),
('vietnam'),
('vigilante gang'),
('vigilantism'),
('violence mystery'),
('violent death'),
('violin'),
('violin maker'),
('virginia'),
('visa'),
('vision'),
('vlogger'),
('voice imitation'),
('voiceover'),
('volcano'),
('vomit'),
('voyeur'),
('voyeurism'),
('walkie talkie'),
('wall street'),
('war'),
('war on terror'),
('warlord'),
('washington'),
('wasteland'),
('weather'),
('weather manipulation'),
('weeds'),
('weekend getaway'),
('weight loss'),
('werewolf'),
('western filmmaking'),
('western noir'),
('white collar'),
('white russian'),
('window'),
('winged creatures'),
('winter break'),
('wiretapping'),
('witch'),
('wizard'),
('woman in wheelchair'),
('woman on the run'),
('women of faith'),
('women''s liberation'),
('women''s magazine'),
('woodchipper'),
('world cup'),
('world domination'),
('wraith'),
('writers-block'),
('writing'),
('wrongful imprisonment'),
('wry'),
('wwf'),
('wyoming'),
('w√ºrzburg'),
('y2k'),
('youkai'),
('young adult'),
('young daughter'),
('yuppie'),
('zealot'),
('–≥–µ–π-–ø–µ—Ä—Å–æ–Ω–∞–∂'),
('–≥–µ–π-–ø–æ—Ü–µ–ª—É–π'),
('–ª–≥–±—Ç–∫'),
('–ª–µ—Å–±–∏–π—Å–∫–∞—è —Å–≤–∞–¥—å–±–∞'),
('–ª–µ—Å–±–∏—è–Ω–∫–∞'),
('–ø–æ–¥—Ä—É–≥–∞-–ª–µ—Å–±–∏—è–Ω–∫–∞'),
('—Å–µ—Å—Ç—Ä–∞-–ª–µ—Å–±–∏—è–Ω–∫–∞');








GO

-- Directors 

INSERT INTO Directors (DirectorName) VALUES
('Bobby Farrelly'),
('Peter Farrelly'),
('Spike Lee'),
('Todd Phillips'),
('George Miller'),
('David Leitch'),
('Dev Patel'),
('Stanley Donen'),
('Gene Kelly'),
('Denis Villeneuve'),
('Akshay Roy'),
('Vinil Mathew'),
('Paul King'),
('Lulu Wang'),
('Taika Waititi'),
('Chris Nelson'),
('Phil Lord'),
('Christopher Miller'),
('David Fincher'),
('Ari Sandel'),
('Malcolm D. Lee'),
('Adam McKay'),
('Edgar Wright'),
('Satyajit Ray'),
('Sriram Raghavan'),
('Nahnatchka Khan'),
('Asghar Farhadi'),
('Jim Abrahams'),
('David Zucker'),
('Jerry Zucker'),
('M. Night Shyamalan'),
('Marc Forster'),
('Vishal Bhardwaj'),
('Peter Weir'),
('Michael Gracey'),
('Shakun Batra'),
('Sajid Ali'),
('Michael Dowse'),
('Martin Scorsese'),
('Ethan Coen'),
('Joel Coen'),
('Karan Johar'),
('Priyadarshan'),
('Farah Khan'),
('Burr Steers'),
('Christopher Nolan'),
('Daniel Kwan'),
('Daniel Scheinert'),
('Steven Spielberg'),
('Chris Columbus'),
('Rob Burnett'),
('Tyler Nilson'),
('Michael Schwartz'),
('Rohit Shetty'),
('Brett Ratner'),
('Zack Snyder'),
('James Marsh'),
('Mel Gibson'),
('Michael Mann'),
('Aaron Sorkin'),
('Max Barbakow'),
('Tom Shadyac'),
('Aaron Horvath'),
('Peter Rida Michail'),
('James Mangold'),
('Jennifer Kaytin Robinson'),
('Brett Haley'),
('Lorene Scafaria'),
('Rawson Marshall Thurber'),
('Chris McKay'),
('Sekhar Kammula'),
('Ruben Fleischer'),
('Shoojit Sircar'),
('Robert Rodriguez'),
('Ridley Scott'),
('Martin Brest'),
('Robert Zemeckis'),
('Imtiaz Ali'),
('Danny Boyle'),
('Loveleen Tandan'),
('Glenn Ficarra'),
('John Requa'),
('David O. Russell'),
('Paul Thomas Anderson'),
('Peter Hedges'),
('Adam Shankman'),
('Greta Gerwig'),
('Anurag Basu'),
('Tom Hooper'),
('Greg Mottola'),
('Will Gluck'),
('Benny Safdie'),
('Josh Safdie'),
('John Carney'),
('Shawn Levy'),
('James Gunn'),
('Jeff Tomsic'),
('Shane Black'),
('Michael Showalter'),
('Roman Polanski'),
('Noah Baumbach'),
('Damien Chazelle'),
('Kenneth Lonergan'),
('Alejandro G. I√±√°rritu'),
('Marc Webb'),
('Jordan Peele'),
('Quentin Tarantino'),
('Gil Junger'),
('Wes Anderson'),
('Michel Gondry'),
('Bob Persichetti'),
('Peter Ramsey'),
('Rodney Rothman'),
('Lin-Manuel Miranda'),
('Martin McDonagh'),
('Rian Johnson'),
('Wong Kar-Wai'),
('Gabriele Muccino'),
('Coralie Fargeat'),
('Saim Sadiq'),
('Sarmad Sultan Khoosat'),
('Francis Ford Coppola');

GO
INSERT INTO Directors (DirectorName) VALUES
('Jared Hess')
,('Dan Berk, Robert Olsen')
,('Bong Joon Ho')
,('Shoojit Sircar')
,('Boman Irani')
,('Scott Beck, Bryan Woods')
,('James Watkins')
,('Todd Phillips')
,('Tim Burton')
,('Shawn Levy')
,('Osgood Perkins')
,('John Krasinski')
,('Michael Sarnoski')
,('Gints Zilbalodis')
,('Sean Baker')
,('Ali Abbasi')
,('Quentin Tarantino')
,('Craig Gillespie')
,('Adam McKay')
,('Mikael H√•fstr√∂m')
,('Edward Berger')
,('Anurag Kashyap')
,('Steffen Haars')
,('John Crowley')
,('Clint Eastwood')
,('Jesse Eisenberg')
,('Kyle Mooney')
,('Ruben Fleischer')
,('Kelly Marcel')
,('Hayao Miyazaki')
,('Abhinay Deo')
,('Martin Scorsese')
,('Denis Villeneuve')
,('George Miller')
,('Jane Schoenbrun')
,('Alex Garland')
,('Alexander Payne')
,('Luca Guadagnino')
,('Adam Wingard')
,('Kiran Rao')
,('Orson Welles')
,('Cameron Cairnes, Colin Cairnes')
,('David Robert Mitchell')
,('Sidney Lumet')
,('Majid Majidi')
,('Peter Farrelly')
,('Joel Coen, Ethan Coen')
,('Ethan Coen, Joel Coen')
,('Zelda Williams')
,('Yorgos Lanthimos')
,('Keenen Ivory Wayans')
,('Jonathan Glazer')
,('Will Gluck')
,('Sean Durkin')
,('Wim Wenders')
,('Abbas Kiarostami')
,('Ryan Coogler')
,('Gavin O''Connor')
,('Damien Chazelle')
,('David Fincher')
,('Robert Eggers')
,('Jordan Peele')
,('Mary Harron')
,('Matt Reeves')
,('Mark Mylod')
,('Gene Stupnitsky')
,('Brian De Palma')
,('Michael Mann')
,('Steven Spielberg')
,('Ari Aster')
,('Ti West')
,('Stanley Kubrick')
,('Emerald Fennell')
,('Sofia Coppola')
,('Greg Kwedar')
,('Nicolas Winding Refn')
,('Alfred Hitchcock')
,('Paul Thomas Anderson')
,('Isao Takahata')
,('Makoto Shinkai')
,('Peter Weir')
,('Yoshifumi Kond√¥')
,('Jonathan Dayton, Valerie Faris')
,('Mark Waters')
,('Patrick Wilson')
,('Kenneth Branagh')
,('Pete Docter, Kemp Powers')
,('Andy Muschietti')
,('James Wan')
,('John R. Leonetti')
,('James Cameron')
,('Larry Charles')
,('Jason Woliner')
,('Matthew Vaughn')
,('M. Night Shyamalan')
,('Tony Scott')
,('Doug Liman')
,('Ben Stiller')
,('Jay Roach')
,('Paul Weitz')
,('Bobby Farrelly, Peter Farrelly')
,('Judd Apatow')
,('Peter Segal')
,('Bennett Miller')
,('Evan Goldberg, Seth Rogen')
,('Cooper Raiff')
,('Adam Brooks')
,('Kevin Smith')
,('Henry Selick')
,('Wes Anderson')
,('Wong Kar-Wai')
,('Donald Petrie')
,('Park Chan-wook')
,('Francis Ford Coppola')
,('Jon M. Chu')
,('Anthony Russo, Joe Russo')
,('John Lasseter, Joe Ranft')
,('Sam Raimi')
,('Jon Watts')
,('Milos Forman')
,('Michael Curtiz')
,('Frank Darabont')
,('Baz Luhrmann')
,('Jon Favreau')
,('Louis Leterrier')
,('Joe Johnston')
,('Joss Whedon')
,('Shane Black')
,('Alan Taylor')
,('James Gunn')
,('Peyton Reed')
,('Scott Derrickson')
,('Anna Boden, Ryan Fleck')
,('Cate Shortland')
,('Destin Daniel Cretton')
,('Chlo√© Zhao')
,('Taika Waititi')
,('Nia DaCosta')
,('Chris Columbus')
,('Alfonso Cuar√≥n')
,('Mike Newell')
,('David Yates')
,('Peter Jackson')
,('J.J. Abrams')
,('Brad Bird')
,('Christopher McQuarrie')
,('John Lasseter')
,('John Lasseter, Ash Brannon, Lee Unkrich')
,('Lee Unkrich')
,('Josh Cooley')
,('David F. Sandberg')
,('Gary Dauberman')
,('Michael Chaves')
,('Corin Hardy')
,('Lana Wachowski, Lilly Wachowski')
,('Lana Wachowski')
,('Chad Stahelski')
,('Gary Ross')
,('Francis Lawrence')
,('Irvin Kershner')
,('Richard Marquand')
,('George Lucas')
,('Rian Johnson')
,('Ron Howard')
,('Chris Renaud, Patrick Delage')
,('Pierre Coffin, Chris Renaud')
,('Kyle Balda, Pierre Coffin')
,('Kyle Balda, Pierre Coffin, Eric Guillon')
,('Kyle Balda, Brad Ableson, Jonathan del Val')
,('Andrew Adamson, Vicky Jenson')
,('Andrew Adamson, Kelly Asbury, Conrad Vernon')
,('Mike Mitchell')
,('Joel Crawford, Januel Mercado')
,('Martin Campbell')
,('Marc Forster')
,('Sam Mendes')
,('Cary Joji Fukunaga');


GO 

-- Writers 

INSERT INTO Writers (WriterName) VALUES
('Ed Decter'),
('John J. Strauss'),
('Peter Farrelly'),
('Bobby Farrelly'),
('Spike Lee'),
('Todd Phillips'),
('Scott Silver'),
('Bob Kane'),
('Bill Finger'),
('Jerry Robinson'),
('George Miller'),
('Brendan McCarthy'),
('Nick Lathouris'),
('Glen A. Larson'),
('Drew Pearce'),
('Dev Patel'),
('Paul Angunawela'),
('John Collee'),
('Betty Comden'),
('Adolph Green'),
('Denis Villeneuve'),
('Jon Spaihts'),
('Frank Herbert'),
('Soumik Sen'),
('Suprotim Sengupta'),
('Harshavardhan Kulkarni'),
('Anurag Kashyap'),
('Purva Naresh'),
('Vinil Mathew'),
('Roald Dahl'),
('Paul King'),
('Simon Farnaby'),
('Lulu Wang'),
('Eric Pearson'),
('Craig Kyle'),
('Christopher L. Yost'),
('Stan Lee'),
('Larry Lieber'),
('Jack Kirby'),
('Greg Pak'),
('Walter Simonson'),
('Carlo Pagulayan'),
('Steve Bloom'),
('Randall Green'),
('Phil Lord'),
('Christopher Miller'),
('Dan Hageman'),
('Kevin Hageman'),
('Ole Kirk Christiansen'),
('Godtfred Kirk Christiansen'),
('Jens Nygaard Knudsen'),
('Gillian Flynn'),
('John Whittington'),
('Kevin Hart'),
('Harry Ratchford'),
('Joey Wells'),
('Matthew Kellard'),
('Nicholas Stoller'),
('John Hamburg'),
('Adam McKay'),
('David Sirota'),
('Lee Sung Jin'),
('Jean Kyoung Frazier'),
('Simon Pegg'),
('Edgar Wright'),
('Rabindranath Tagore'),
('Satyajit Ray'),
('Arijit Biswas'),
('Yogesh Chandekar'),
('Sriram Raghavan'),
('Hemanth M. Rao'),
('Pooja Ladha Surti'),
('Olivier Treiner'),
('Ali Wong'),
('Randall Park'),
('Michael Golamco'),
('Asghar Farhadi'),
('Jim Abrahams'),
('David Zucker'),
('Jerry Zucker'),
('Hall Bartlett'),
('John C. Champion'),
('Arthur Hailey'),
('M. Night Shyamalan'),
('Zach Helm'),
('William Shakespeare'),
('Basharat Peer'),
('Vishal Bhardwaj'),
('Andrew Kevin Walker'),
('Andrew Niccol'),
('Jenny Bicks'),
('Bill Condon'),
('Shakun Batra'),
('Ayesha DeVitre'),
('Spandan Mishra'),
('Imtiaz Ali'),
('Sajid Ali'),
('Aaron Guzikowski'),
('Elan Mastai'),
('T.J. Dawe'),
('Michael Rinaldi'),
('Jody Hill'),
('Danny McBride'),
('Eric Roth'),
('Martin Scorsese'),
('David Grann'),
('Joel Coen'),
('Ethan Coen'),
('Shibani Bathija'),
('Niranjan Iyengar'),
('Siddique'),
('Lal'),
('Neeraj Vora'),
('Anand S. Vardhan'),
('Farah Khan'),
('Mushtaq Shiekh'),
('Mayur Puri'),
('Jason Filardi'),
('Christopher Nolan'),
('Daniel Scheinert'),
('Daniel Kwan'),
('Frank Abagnale Jr.'),
('Stan Redding'),
('Jeff Nathanson'),
('Anne Fine'),
('Randi Mayem Singer'),
('Leslie Dixon'),
('Guy Ritchie'),
('Matthew Read'),
('Nick Vallelonga'),
('Brian Hayes Currie'),
('Rob Burnett'),
('Jonathan Evison'),
('Tyler Nilson'),
('Michael Schwartz'),
('K. Subhash'),
('Yunus Sajawal'),
('Robin Bhatt'),
('Farhad Samji'),
('Sajid'),
('Madhiyalagan Subbaiah'),
('Jonathan Nolan'),
('David S. Goyer'),
('Ross LaManna'),
('Jim Kouf'),
('Dave Gibbons'),
('David Hayter'),
('Alex Tse'),
('Zack Snyder'),
('Steve Shibuya'),
('Anthony McCarten'),
('Jane Hawking'),
('Robert Schenkkan'),
('Andrew Knight'),
('Gregory Allen Howard'),
('Stephen J. Rivele'),
('Christopher Wilkinson'),
('Charlie Wachtel'),
('David Rabinowitz'),
('Kevin Willmott'),
('Ron Stallworth'),
('Aaron Sorkin'),
('Andy Siara'),
('Max Barbakow'),
('Paul Guay'),
('Stephen Mazur'),
('Chugong'),
('H-Goon'),
('Michael Jelenic'),
('Aaron Horvath'),
('Jerry Siegel'),
('Joe Shuster'),
('Marv Wolfman'),
('George P√©rez'),
('Arnold Drake'),
('William Moulton Marston'),
('Jez Butterworth'),
('John-Henry Butterworth'),
('Jason Keller'),
('Celeste Ballard'),
('Jennifer Kaytin Robinson'),
('Jennifer Niven'),
('Liz Hannah'),
('Lorene Scafaria'),
('Steve Koren'),
('Mark O''Keefe'),
('Steve Oedekerk'),
('Ike Barinholtz'),
('David Stassen'),
('Rawson Marshall Thurber'),
('Seth Grahame-Smith'),
('Chris McKenna'),
('Erik Sommers'),
('Jared Stern'),
('Harry G. Peter'),
('Sekhar Kammula'),
('Rhett Reese'),
('Paul Wernick'),
('Juhi Chaturvedi'),
('James Cameron'),
('Laeta Kalogridis'),
('Yukito Kishiro'),
('Drew Goddard'),
('Andy Weir'),
('Ron Osborn'),
('Jeff Reno'),
('Kevin Wade'),
('Bo Goldman'),
('Alberto Casella'),
('Walter Ferris'),
('Maxwell Anderson'),
('Gladys Lehman'),
('Winston Groom'),
('Muazzam Beg'),
('Simon Beaufoy'),
('Vikas Swarup'),
('Dan Fogelman'),
('David O. Russell'),
('Matthew Quick'),
('Paul Thomas Anderson'),
('Pierce Gardner'),
('Peter Hedges'),
('Nicholas Sparks'),
('Karen Janszen'),
('Greta Gerwig'),
('Noah Baumbach'),
('Anurag Basu'),
('Tani Basu'),
('Sanjeev Dutta'),
('William Nicholson'),
('Alain Boublil'),
('Claude-Michel Sch√∂nberg'),
('Herbert Kretzmer'),
('Victor Hugo'),
('Michael Bacall'),
('Jonah Hill'),
('Patrick Hasburgh'),
('Stephen J. Cannell'),
('Seth Rogen'),
('Evan Goldberg'),
('Bert V. Royal'),
('Ronald Bronstein'),
('Josh Safdie'),
('Benny Safdie'),
('John Carney'),
('James Vanderbilt'),
('Robert Graysmith'),
('Matt Lieberman'),
('Zak Penn'),
('James Gunn'),
('Jim Starlin'),
('Steve Englehart'),
('Don Heck'),
('Roger Stern'),
('John Buscema'),
('Sal Buscema'),
('Keith Giffen'),
('Josh Klausner'),
('Rob McKittrick'),
('Mark Steilen'),
('Russell Adams'),
('Shane Black'),
('Anthony Bagarozzi'),
('Emily V. Gordon'),
('Kumail Nanjiani'),
('Kai Bird'),
('Martin Sherwin'),
('Ronald Harwood'),
('Wladyslaw Szpilman'),
('Damien Chazelle'),
('Kenneth Lonergan'),
('Alejandro G. I√±√°rritu'),
('Nicol√°s Giacobone'),
('Alexander Dinelaris'),
('Armando Bo'),
('Raymond Carver'),
('Scott Neustadter'),
('Michael H. Weber'),
('Christine Leunens'),
('Taika Waititi'),
('Jordan Peele'),
('Ben Mezrich'),
('Quentin Tarantino'),
('Karen McCullah'),
('Kirsten Smith'),
('Bryan Lee O''Malley'),
('Stefan Zweig'),
('Wes Anderson'),
('Hugo Guinness'),
('Charlie Kaufman'),
('Michel Gondry'),
('Pierre Bismuth'),
('Steven Levenson'),
('Jonathan Larson'),
('Zak Olkewicz'),
('K√¥tar√¥ Isaka'),
('Martin McDonagh'),
('Rian Johnson'),
('Wong Kar-Wai'),
('Steve Conrad'),
('Coralie Fargeat'),
('Saim Sadiq'),
('Maggie Briggs'),
('Nirmal Bano'),
('Mario Puzo'),
('Francis Ford Coppola'),
('Roger Avary'),
('Wajid Shaikh'),
('Ivan Atkinson'),
('Marn Davies'),
('Lauren Bond'),
('Pete Docter'),
('Bob Peterson'),
('Tom McCarthy'),
('Y√ªko Kakihara'),
('Akira Toriyama'),
('Atsushi Maekawa'),
('K√¥hei Horikoshi'),
('Hajime Isayama'),
('Yasuko Kobayashi'),
('Masashi Kishimoto'),
('Eiichir√¥ Oda'),
('Tite Kubo'),
('Masashi Sogo'),
('Vince Gilligan'),
('Peter Gould'),
('Ricky Gervais'),
('Brendan Hunt'),
('√Ålex Pina'),
('Hwang Dong-hyuk'),
('Greg Daniels'),
('David Crane'),
('Matt Duffer'),
('David Benioff'),
('Ryan J. Condal'),
('Steven Knight'),
('Charlie Brooker'),
('Peter Morgan'),
('Mark Gatiss'),
('Michael Crichton'),
('Lisa Joy'),
('Nic Pizzolatto'),
('Garth Ennis'),
('Noah Hawley'),
('Lee Edward Colston'),
('Baran bo Odar'),
('Jantje Friese'),
('Bill Dubuque'),
('Jesse Armstrong'),
('Jamie Carragher'),
('Carlo Bernard'),
('John Douglas'),
('Mark Olshaker'),
('Joe Penhall'),
('Lauren Schmidt Hissrich'),
('Matthew Weiner'),
('Jonathan Igla'),
('J.J. Abrams'),
('Paul T. Scheuring'),
('Jon Favreau'),
('George Lucas'),
('Jeff Lindsay'),
('James Manos Jr.'),
('Carter Bays'),
('Craig Thomas'),
('Dan Goor'),
('Michael Schur'),
('Chuck Lorre'),
('Greg Berlanti'),
('Marc Guggenheim'),
('Geoff Johns'),
('Alfred Gough'),
('Tim Kring'),
('Yule Caise'),
('Matt Corman'),
('Chris Ord'),
('Brian Michael Bendis'),
('Michael Gaydos'),
('Melissa Rosenberg'),
('Cheo Hodari Coker'),
('Archie Goodwin'),
('Scott Buck'),
('Gil Kane'),
('Akiva Goldsman'),
('Bruno Heller'),
('Eric Kripke'),
('Mike Dringenberg'),
('Brad Falchuk'),
('Ryan Murphy'),
('Lauren LeFranc'),
('David Chase');

GO


INSERT INTO Writers (WriterName) VALUES


('Abbas Kiarostami'),
('Abhay Deol'),
('Adam Brooks'),
('Adam Wingard'),
('Adi Granov'),
('Agatha Christie'),
('Akela Cooper'),
('Akiyuki Nosaka'),
('Alasdair Gray'),
('Alec Sokolow'),
('Alejandro Bien-Willner'),
('Aleksandar Hemon'),
('Alex Freed'),
('Alex Garland'),
('Alex Kurtzman'),
('Aline Brosh McKenna'),
('Allan Scott'),
('Allison Schroeder'),
('Alvin Sargent'),
('Andrew Adamson'),
('Andrew Lanham'),
('Andrew McElfresh'),
('Andrew Stanton'),
('Andr√© Nemec'),
('Andy Lanning'),
('Anna Boden'),
('Anna Ouyang Moench'),
('Anthony Hines'),
('Aoi Hiiragi'),
('Ari Aster'),
('Armitage Trail'),
('Art Marcum'),
('Arthur Schnitzler'),
('Ash Brannon'),
('Ashley E. Miller'),
('Baz Luhrmann'),
('Ben Hecht'),
('Ben Stiller'),
('Bill Lawrence'),
('Bill Mantlo'),
('Billy Ray'),
('Biplab Goswami'),
('Blake Crouch'),
('Boman Irani'),
('Bong Joon Ho'),
('Bram Stoker'),
('Brent Buell'),
('Bret Easton Ellis'),
('Brett Goldstein'),
('Brian Jarvis'),
('Brian Lynch'),
('Brian Regan'),
('Bruce Geller'),
('Bruce Jay Friedman'),
('Bruce Timm'),
('Bryan Woods'),
('Buck Henry'),
('Burr Steers'),
('C. Robert Cargill'),
('Cameron Cairnes'),
('Carey W. Hayes'),
('Cary Joji Fukunaga'),
('Casey Robinson'),
('Chad Hayes'),
('Charles Brandt'),
('Charles Randolph'),
('Chaz Hawkins'),
('Chlo√© Zhao'),
('Chris Bowman'),
('Chris Collins'),
('Chris Galletta'),
('Chris Miller'),
('Chris Terrio'),
('Chris Webb'),
('Christian Tafdrup'),
('Christopher Ford'),
('Christopher Markus'),
('Christopher McQuarrie'),
('Christopher Storer'),
('Chuck Palahniuk'),
('Cinco Paul'),
('Clarence Maclin'),
('Clint Bentley'),
('Cody Cameron'),
('Colin Cairnes'),
('Colin Trevorrow'),
('Conrad Vernon'),
('Cooper Raiff'),
('Cormac McCarthy'),
('Craig Pearce'),
('Dale Wasserman'),
('Dan Abnett'),
('Dan Erickson'),
('Dan Futterman'),
('Dan Mazer'),
('Dan Swimer'),
('Dana Fox'),
('Danny Strong'),
('Darren Lemke'),
('Dave Callaham'),
('David Hemingson'),
('David Koepp'),
('David Leslie Johnson-McGoldrick'),
('David Michelinie'),
('David Mitchell'),
('David N. Weiss'),
('David Occhino'),
('David P. Smith'),
('David Reynolds'),
('David Robert Mitchell'),
('Dennis Lehane'),
('Derek Connolly'),
('Derek Kolstad'),
('Destin Daniel Cretton'),
('Diablo Cody'),
('Diane Johnson'),
('Divy Nidhi Sharma'),
('Dodie Smith'),
('Don Payne'),
('Doug Chamberlin'),
('Drake Sather'),
('E. Max Frye'),
('Ed Brubaker'),
('Edward Ashton'),
('Ehud Yonay'),
('Elissa Karasik'),
('Elmore Leonard'),
('Emerald Fennell'),
('Eric Heisserer'),
('Erica Rivinoja'),
('Erik Jendresen'),
('Ernest Cline'),
('Ernest Hart'),
('Etan Cohen'),
('Evan Winter'),
('F. Scott Fitzgerald'),
('Fabian Nicieza'),
('Fran Walsh'),
('Frank Darabont'),
('Frank Miller'),
('Frederic Raphael'),
('Gabriel Sherman'),
('Garon Tsuchiya'),
('Gary Dauberman'),
('Gary Ross'),
('Gavin James'),
('Gene Stupnitsky'),
('Geneva Robertson-Dworet'),
('Gints Zilbalodis'),
('Greg Glienna'),
('Greg Kwedar'),
('Gregory Maguire'),
('Guillermo del Toro'),
('Guinevere Turner'),
('Hampton Fancher'),
('Hawk Ostby'),
('Hayao Miyazaki'),
('Henrik Galeen'),
('Henry Selick'),
('Herb Trimpe'),
('Herman J. Mankiewicz'),
('Hiroshi Sakurazaka'),
('Hossein Amini'),
('Howard Hawks'),
('Howard Koch'),
('Hubbel Palmer'),
('Hugh Howey'),
('Ian Fleming'),
('Ian Goldberg'),
('Ilana Wolpert'),
('Imogen Browder'),
('Isao Takahata'),
('J. David Stem'),
('J. Michael Straczynski'),
('J.K. Rowling'),
('J.R.R. Tolkien'),
('Jac Schaeffer'),
('Jack Epps Jr.'),
('James Clavell'),
('James Lee Freeman'),
('James Sallis'),
('James Wan'),
('James Watkins'),
('Jane Schoenbrun'),
('Jason Decker'),
('Jason Fuchs'),
('Jason Stone'),
('Jeannie Long'),
('Jeff Loveness'),
('Jeffery Wang'),
('Jeffrey Bushell'),
('Jena Friedman'),
('Jeremy Doner'),
('Jeremy Slater'),
('Jesse Eisenberg'),
('Jim Cash'),
('Jim Herzfeld'),
('Jim Uhls'),
('Jo-yun Hwang'),
('Joan Alison'),
('Joe Cornish'),
('Joe Ranft'),
('Joe Robert Cole'),
('Joe Simon'),
('Joe Stillman'),
('Joel Cohen'),
('John Divine G Whitfield'),
('John Francis Daley'),
('John H. Richardson'),
('John Houseman'),
('John Krasinski'),
('John Lasseter'),
('John Logan'),
('John Milius'),
('John Phillips'),
('John Romita Sr.'),
('Jon Watts'),
('Jonathan A. Abrams'),
('Jonathan Glazer'),
('Jonathan Goldstein'),
('Jonathan Hales'),
('Jonathan Kasdan'),
('Joon-hyung Lim'),
('Jorgen Klubien'),
('Joseph Conrad'),
('Joseph Minion'),
('Joseph Stefano'),
('Josh Appelbaum'),
('Josh Cooley'),
('Joss Whedon'),
('Joya McCrory'),
('Judd Apatow'),
('Julius J. Epstein'),
('Justin Kuritzkes'),
('Justin Theroux'),
('Justin Wright'),
('Justina Ireland'),
('Kaz Firpo'),
('Keenen Ivory Wayans'),
('Kelly Marcel'),
('Kemp Powers'),
('Ken Daurio'),
('Ken Kesey'),
('Kevin Barnett'),
('Kevin Smith'),
('Kiel Murray'),
('Kristen Buckley'),
('Kyle Mooney'),
('L. Frank Baum'),
('L.M. Kit Carson'),
('Lana Wachowski'),
('Larry Karaszewski'),
('Larry Stuckey'),
('Larry Wilson'),
('Lars Jacobson'),
('Lauren Schuker Blum'),
('Lawrence Hauben'),
('Lawrence Kasdan'),
('Lee Eisenberg'),
('Lee Kern'),
('Lee Unkrich'),
('Leigh Brackett'),
('Leigh Whannell'),
('Len Wein'),
('Lilly Wachowski'),
('Mads Tafdrup'),
('Maegan Houang'),
('Majid Majidi'),
('Makoto Shinkai'),
('Marc Abrams'),
('Marc Hyman'),
('Marcos Gonzalez'),
('Mark Andrews'),
('Mark Fergus'),
('Mark Protosevich'),
('Marlon Wayans'),
('Martin Amis'),
('Martin Hynes'),
('Mary Harron'),
('Mary Ruth Clarke'),
('Matiss Kaza'),
('Matt Ember'),
('Matt Greenberg'),
('Matt Holloway'),
('Matt Hubbard'),
('Matt Reeves'),
('Matthew Fogel'),
('Matthew Shire'),
('Meg LeFauve'),
('Megan McDonnell'),
('Mel Brooks'),
('Mia Goth'),
('Michael Anthony Snowden'),
('Michael Arndt'),
('Michael Chabon'),
('Michael Finch'),
('Michael Goldenberg'),
('Michael Green'),
('Michael Herr'),
('Michael Lark'),
('Michael Lesslie'),
('Michael Lewis'),
('Michael Mann'),
('Michael McDowell'),
('Michael Sarnoski'),
('Michael Waldron'),
('Michele Alexander'),
('Mike Cerrone'),
('Mike Flanagan'),
('Mike Jones'),
('Mike White'),
('Mikki Daughtry'),
('Miles Millar'),
('Mollie Kent'),
('Murray Burnett'),
('Neal Purvis'),
('Ned Benson'),
('Neil Gaiman'),
('Neil Simon'),
('Neil Widener'),
('Nia DaCosta'),
('Nicholas Pileggi'),
('Nick Frost'),
('Nick Lehmann'),
('Nick Payne'),
('Nicole Perlman'),
('Nina Pedrad'),
('Nobuaki Minegishi'),
('Oliver Stone'),
('Orson Welles'),
('Osgood Perkins'),
('Park Chan-wook'),
('Parveez Shaikh'),
('Patricia Highsmith'),
('Patrick Burleigh'),
('Paul Dini'),
('Paul Fisher'),
('Paul Haggis'),
('Paul Rudd'),
('Paul Schrader'),
('Pete Jones'),
('Peter Baynham'),
('Peter Craig'),
('Peter Jackson'),
('Peter Straughan'),
('Phil Lorin'),
('Philip G. Epstein'),
('Philip K. Dick'),
('Philippa Boyens'),
('Phoebe Waller-Bridge'),
('Pradhuman Singh'),
('Quinta Brunson'),
('Rashida Jones'),
('Rebecca Angelo'),
('Reginald Rose'),
('Richard Gadd'),
('Richard Naing'),
('Rita Hsiao'),
('Ritesh Shah'),
('Rob Liefeld'),
('Robert Bloch'),
('Robert Eggers'),
('Robert Harris'),
('Robert Rodat'),
('Robert Wade'),
('Roberto Orci'),
('Roger Q. Denny'),
('Roger S.H. Schulman'),
('Ron Dyens'),
('Rosalind Wiseman'),
('Roy Thomas'),
('Ryan Coogler'),
('Ryan Firpo'),
('Ryan Fleck'),
('Ryan Reynolds'),
('Sacha Baron Cohen'),
('Sam Bromell'),
('Sam Shepard'),
('Sarat Chandra Chattopadhyay'),
('Scot Armstrong'),
('Scott Alexander'),
('Scott Beck'),
('Scott Derrickson'),
('Scott Frank'),
('Scott Teems'),
('Sean Baker'),
('Sean Durkin'),
('Seth Reiss'),
('Shawn Levy'),
('Shawn Wayans'),
('Shay Hatten'),
('Simon Barrett'),
('Simon Kinberg'),
('Sneha Desai'),
('Sofia Coppola'),
('Stanley Kubrick'),
('Stephany Folsom'),
('Stephen King'),
('Stephen McFeely'),
('Stephen Sinclair'),
('Steve Ditko'),
('Steve Epting'),
('Steve Gan'),
('Steve Gerber'),
('Steve Kloves'),
('Steve Zissis'),
('Steven Zaillian'),
('Suzanne Collins'),
('Ted Chiang'),
('Ted Elliott'),
('Terry Rossio'),
('Ti West'),
('Tina Fey'),
('Tobias Iaconis'),
('Todd McFarlane'),
('Tom Hardy'),
('Tom J. Astle'),
('Tom Schulman'),
('Tom Wheeler'),
('Tommy Swerdlow'),
('Tony McNamara'),
('Upton Sinclair'),
('Val Mayerik'),
('Valerie LaPointe'),
('Vikramaditya Motwane'),
('Walt Dohrn'),
('Walter Donohue'),
('Warren Ellis'),
('Warren Skaaren'),
('Will Gluck'),
('Will McCormack'),
('Will Tracy'),
('William Steig'),
('Winnie Holzman'),
('WriterName'),
('Xavier Cook'),
('Zack Stentz'),
('Zeb Wells'),
('Zoe Kazan');

GO 

-- Actors 

INSERT INTO Actors (ActorName) VALUES
('Johny Lever'),
('Aakriti Dobhal'),
('Aamir Bashir'),
('Aariyan Gupta'),
('Aarnaa Sharma'),
('Aaron Abrams'),
('Aaron Dismuke'),
('Aaron Eckhart'),
('Aaron Marshall'),
('Aaron Paul'),
('Aaron Staton'),
('Aaron Taylor-Johnson'),
('Aaron Tveit'),
('Aaron W Reed'),
('Abbey Lee'),
('Abbie Cornish'),
('Abigail Breslin'),
('Abrar Qazi'),
('Adah Sharma'),
('Adam Brody'),
('Adam Devine'),
('Adam Driver'),
('Adam Dunn'),
('Adam Gregory'),
('Adam Sandler'),
('Adam Scott'),
('Adeel Afzal'),
('Adeel Akhtar'),
('Adithi Kalkunte'),
('Aditi Rao Hydari'),
('Adrian Pasdar'),
('Adrien Brody'),
('Agha Haider'),
('Ai Fairouz'),
('Aida Turturro'),
('Aidan Gallagher'),
('Aidy Bryant'),
('Aimee Garcia'),
('Akemi Okamura'),
('Aksel Hennie'),
('Akshay Kumar'),
('Al Lettieri'),
('Al Madrigal'),
('Al Pacino'),
('Al Thompson'),
('Alan Boell'),
('Alan Ritchson'),
('Alan Ruck'),
('Albert Jones'),
('Alberto Ammann'),
('Alden Ehrenreich'),
('Alec Baldwin'),
('Alecia Svensen'),
('Alex Huff'),
('Alex Sharp'),
('Alexander Biglane'),
('Alexander Calvert'),
('Alexandra Daddario'),
('Alexandra Shipp'),
('Alfie Allen'),
('Alfre Woodard'),
('Ali Hasnain'),
('Ali Junejo'),
('Ali Kureshi'),
('Ali Larter'),
('Ali Wong'),
('Ali-Asghar Shahbazi'),
('Alia Bhatt'),
('Alice Eve'),
('Alice Orr-Ewing'),
('Alina Khan'),
('Alisha Boe'),
('Alison Brie'),
('Alison Pill'),
('Allison Mack'),
('Allison Miller'),
('Allison Tolman'),
('Allison Williams'),
('Alon Aboutboul'),
('Aly Michalka'),
('Alyson Hannigan'),
('Amanda Abbington'),
('Amanda Bynes'),
('Amanda Donohoe'),
('Amanda Farinos'),
('Amanda Plummer'),
('Amanda Seyfried'),
('Amar Gupta'),
('Amaury Nolasco'),
('Amber Heard'),
('Amiee Conn'),
('Amita Udgata'),
('Amitabh Bachchan'),
('Amrita Bagchi'),
('Amy Adams'),
('Amy Poehler'),
('Amy Ryan'),
('Ana Cruz Kayne'),
('Ana de Armas'),
('Anahita Oberoi'),
('Andre Braugher'),
('Andrea Riseborough'),
('Andreas Pietschmann'),
('Andrew Bachelor'),
('Andrew Chandler'),
('Andrew Garfield'),
('Andrew Howard'),
('Andrew Keegan'),
('Andrew Kevin Walker'),
('Andrew Koji'),
('Andrew Scott'),
('Andrew Sellon'),
('Andy Hull'),
('Andy Samberg'),
('Andy Serkis'),
('Angela Kinsey'),
('Angela Sarafyan'),
('Angourie Rice'),
('Anil Dhawan'),
('Anil Kapoor'),
('Ann Pierce'),
('Anna Diop'),
('Anna Gunn'),
('Anna Kendrick'),
('Anna Shaffer'),
('Anna Torv'),
('Annabelle Wallis'),
('Anne Haney'),
('Anne Hathaway'),
('Anne Winters'),
('Annette O''Toole'),
('Ansel Elgort'),
('Anshikaa Shrivastava'),
('Anthony Daniels'),
('Anthony Edwards'),
('Anthony Hopkins'),
('Anti'),
('Antje Traue'),
('Antonia Ribero'),
('Antony Starr'),
('Anuj Gurwara'),
('Anupam Kher'),
('Anuradha Chandan'),
('Anya Chalotra'),
('Anya Taylor-Joy'),
('Aparajita Adhya'),
('Archie Yates'),
('Arif Hassan'),
('Arjun Mathur'),
('Arjun Rampal'),
('Arthur J. Nascarella'),
('Arty Froushan'),
('Ashish Ghosh'),
('Ashish Vidyarthi'),
('Ashley Jensen'),
('Ashley Park'),
('Ashley Rae Spillers'),
('Ashley White'),
('Ashwini Kalsekar'),
('Aubrey Plaza'),
('Austin Abrams'),
('Austin Butler'),
('Austin Freeman'),
('Austyn Johnson'),
('Ava Capri'),
('Avinash Tiwary'),
('Aviva Baumann'),
('Awkwafina'),
('Ayane Sakura'),
('Ayelet Zurer'),
('Ayush Mahesh Khedekar'),
('Ayushmann Khurrana'),
('Azharuddin Mohammed Ismail'),
('Azhy Robertson'),
('Aziz Ansari'),
('BD Wong'),
('Babak Karimi'),
('Baby Bakita'),
('Bad Bunny'),
('Balendar Singh'),
('Banita Sandhu'),
('Banj√¥ Ginga'),
('Bankim Ghosh'),
('Barbie Ferreira'),
('Barry Keoghan'),
('Beanie Feldstein'),
('Beau Knapp'),
('Becca Khalil'),
('Bella Ramsey'),
('Ben Affleck'),
('Ben Hanson'),
('Ben Knight'),
('Ben Levi Ross'),
('Ben McKenzie'),
('Ben Shenkman'),
('Ben Stiller'),
('Benedict Cumberbatch'),
('Benjamin Gilani'),
('Benjamin Walker'),
('Benny Nieves'),
('Bertie Caplan'),
('Beth Littleford'),
('Betsy Brandt'),
('Betty Buckley'),
('Betty Gabriel'),
('Bholanath Koyal'),
('Bholaraj Sapkota'),
('Biff Wiff'),
('Bill Camp'),
('Bill Hader'),
('Bill Irwin'),
('Bill Murray'),
('Bill Nighy'),
('Bill Nunn'),
('Billie Lourd'),
('Billie Whitelaw'),
('Billy Bob Thornton'),
('Billy Crudup'),
('Billy Magnussen'),
('Bindu Desai'),
('Blaine Kern III'),
('Blair Slater'),
('Bo Burnham'),
('Bob Barna'),
('Bob Mack'),
('Bob Odenkirk'),
('Bob Penny'),
('Bob Peterson'),
('Bob Stephenson'),
('Bokeem Woodbine'),
('Boyd Holbrook'),
('Brad Mann'),
('Brad Pitt'),
('Brad William Henke'),
('Bradley Cooper'),
('Bradley Whitford'),
('Brandon McKnight'),
('Brandon Perea'),
('Brendan Fraser'),
('Brendan Gleeson'),
('Brendan Hunt'),
('Brendan Rozario'),
('Brendan Wayne'),
('Brenton Thwaites'),
('Brett Cullen'),
('Brett Goldstein'),
('Brian Baumgartner'),
('Brian Cox'),
('Brian Delate'),
('Brian Howe'),
('Brian Tarantina'),
('Brian Tyree Henry'),
('Brie Larson'),
('Brigitte Lin'),
('Britne Oldford'),
('Britt Robertson'),
('Bruce Dern'),
('Bruce Norris'),
('Bruce Willis'),
('Bryan Barter'),
('Bryan Cranston'),
('Bryce Papenbrook'),
('Burr Steers'),
('Busy Philipps'),
('C.S. Lee'),
('CJ Jones'),
('Caitlynne Medrek'),
('Caitr√≠ona Balfe'),
('Caleb Landry Jones'),
('Caleb McLaughlin'),
('Callie Hernandez'),
('Cam Gigandet'),
('Cameron Diaz'),
('Cameron Seely'),
('Camila Mendes'),
('Camille Kostek'),
('Camren Bicondova'),
('Candice Patton'),
('Cara Jade Myers'),
('Carey Mulligan'),
('Carl Weathers'),
('Carla Gugino'),
('Carlos Valdes'),
('Carly Chaikin'),
('Carmen Ejogo'),
('Carol Ann Susi'),
('Caroline Dhavernas'),
('Carrie Coon'),
('Carrie Lazar'),
('Carrie-Anne Moss'),
('Carson Holmes'),
('Cary Elwes'),
('Casey Affleck'),
('Cate Blanchett'),
('Catherine Bell'),
('Catherine Keener'),
('Catherine O''Hara'),
('Cesar Aguirre'),
('Chace Crawford'),
('Chanel Cresswell'),
('Chang Chen'),
('Channing Tatum'),
('Charles Edwards'),
('Charles Walker'),
('Charlie Cox'),
('Charlie Day'),
('Charlie Heaton'),
('Charlie Hunnam'),
('Charlie Tahan'),
('Charlize Theron'),
('Charlyne Yi'),
('Chelsea Peretti'),
('Cherry Jones'),
('Chevy Chase'),
('Chhaya Kadam'),
('Chidi Ajufo'),
('Chie Nakamura'),
('Chiwetel Ejiofor'),
('Chlo√´ Grace Moretz'),
('Chlo√´ Sevigny'),
('Chris Bartlett'),
('Chris Chalk'),
('Chris Elliott'),
('Chris Evans'),
('Chris Hemsworth'),
('Chris Pang'),
('Chris Parnell'),
('Chris Penn'),
('Chris Pratt'),
('Chris Tucker'),
('Chris Waitt'),
('Chris Wylde'),
('Christian Bale'),
('Christian Brunetti'),
('Christian Erickson'),
('Christian Slater'),
('Christian Stolte'),
('Christina Hendricks'),
('Christina Pickles'),
('Christina Robinson'),
('Christine Toy Johnson'),
('Christoph Waltz'),
('Christopher B. Duncan'),
('Christopher Meloni'),
('Christopher Mintz-Plasse'),
('Christopher Plummer'),
('Christopher Walken'),
('Chukwudi Iwuji'),
('Cillian Murphy'),
('Cinda Adams'),
('Claire Forlani'),
('Claire Foy'),
('Clancy Brown'),
('Clark Gregg'),
('Clayne Crawford'),
('Clifford Chapin'),
('Cobie Smulders'),
('Colin Farrell'),
('Colin Hanks'),
('Colleen Clinkenbeard'),
('Colleen O''Shaughnessey'),
('Collette Wolfe'),
('Colm Feore'),
('Colton Haynes'),
('Common'),
('Conan O''Brien'),
('Connie Britton'),
('Conor Leslie'),
('Cory Michael Smith'),
('Cotter Smith'),
('Courteney Cox'),
('Craig Berry'),
('Craig Roberts'),
('Creed Bratton'),
('Cristin Milioti'),
('Curran Walters'),
('Cyd Charisse'),
('D.B. Woodside'),
('Daiki Yamashita'),
('Daisuke Hirakawa'),
('Dakota Johnson'),
('Damian Young'),
('Dami√°n Alc√°zar'),
('Dan Byrd'),
('Dan Castellaneta'),
('Dane Cook'),
('Daniel Br√ºhl'),
('Daniel Craig'),
('Daniel Dae Kim'),
('Daniel Davis'),
('Daniel Huttlestone'),
('Daniel Ings'),
('Daniel J. Watts'),
('Daniel Kaluuya'),
('Daniel Lapaine'),
('Daniel Radcliffe'),
('Daniel Zacapa'),
('Danielle Nicolet'),
('Danielle Panabaker'),
('Danny Aiello'),
('Danny McBride'),
('Danny Pudi'),
('Darcy Bryce'),
('Darko Peric'),
('Daryl Hannah'),
('Daryl Mitchell'),
('Daryn Kahn'),
('Dave Bautista'),
('Dave Franco'),
('Dave Wittenberg'),
('David Bowie'),
('David Burrows'),
('David Casta√±eda'),
('David Choe'),
('David Clennon'),
('David Cross'),
('David H. Holmes'),
('David Harbour'),
('David Henrie'),
('David Kaye'),
('David Krumholtz'),
('David Mazouz'),
('David Oyelowo'),
('David Ramsey'),
('David S. Howard'),
('David Schrempf'),
('David Schwimmer'),
('David Tennant'),
('David Thewlis'),
('David Turner'),
('David Wenham'),
('David Zayas'),
('Dawn Addams'),
('Dax Flame'),
('DeRay Davis'),
('Dean Feldman'),
('Dean J. West'),
('Dean Norris'),
('Debbie Reynolds'),
('Deborah Ann Woll'),
('Deepika Padukone'),
('Deirdre O''Connell'),
('Delfeayo Marsalis'),
('Delroy Lindo'),
('Demi Moore'),
('Deneke Muhugeta'),
('Denis O''Hare'),
('Denise Hughes'),
('Dennis Quaid'),
('Derek Graf'),
('Desmond Harrington'),
('Dev Patel'),
('Devon Graye'),
('Diana Lin'),
('Diane Keaton'),
('Diane Kruger'),
('Diane Lane'),
('Diane Morgan'),
('Dianne Wiest'),
('Diego Calva'),
('Dileep Rao'),
('Dilip Bose'),
('Dimiter D. Marinov'),
('Dirk Blocker'),
('Dominic Chianese'),
('Dominic Purcell'),
('Dominic West'),
('Don Johnson'),
('Don McManus'),
('Donal Logue'),
('Donald Glover'),
('Donald O''Connor'),
('Donna Biscoe'),
('Donnie Wahlberg'),
('Doug Benson'),
('Douglas Fowley'),
('Drew Ater'),
('Dua Lipa'),
('Dustin Fitzsimons'),
('Dwayne Johnson'),
('Dylan Minnette'),
('Dylan Moran'),
('Eamon Farren'),
('Echo Kellum'),
('Ed Harris'),
('Ed Helms'),
('Ed Renninger'),
('Ed Skrein'),
('Ed Stoppard'),
('Eddie Jemison'),
('Eddie Redmayne'),
('Edi Patterson'),
('Edie Falco'),
('Edward Asner'),
('Edward Hamilton-Clark'),
('Edward Norton'),
('Ehteram Boroumand'),
('Eiza Gonz√°lez'),
('Eka Darville'),
('Eli Roth'),
('Elie Docter'),
('Elijah Wood'),
('Elisabeth Moss'),
('Elise Baughman'),
('Elizabeth Banks'),
('Elle Fanning'),
('Ellen Burstyn'),
('Ellen Wong'),
('Ellie Kemper'),
('Elliot Page'),
('Elliott Gould'),
('Elodie Yung'),
('Eman Suleman'),
('Emilia Clarke'),
('Emilia Fox'),
('Emilie de Ravin'),
('Emily Bett Rickards'),
('Emily Blunt'),
('Emily Browning'),
('Emily Swallow'),
('Emily Watson'),
('Emma D''Arcy'),
('Emma Mackey'),
('Emma Roberts'),
('Emma Stone'),
('Emmy Raver-Lampman'),
('Enrique Arce'),
('Eric Bauza'),
('Eric Berryman'),
('Eric Mason'),
('Eric Vale'),
('Erica Durance'),
('Erin Gerasimovich'),
('Erin Moriarty'),
('Erin Richards'),
('Esther Acebo'),
('Ethan Phillips'),
('Evan Peters'),
('Evan Rachel Wood'),
('Evangeline Lilly'),
('Ewan McGregor'),
('Ezra Miller'),
('F. Murray Abraham'),
('Fabien Frankel'),
('Farhana Bhat'),
('Farid Sajjadi Hosseini'),
('Fawad Khan'),
('Faye Wong'),
('Felicity Jones'),
('Felix Mallard'),
('Finlay Wright-Stephens'),
('Finn Cole'),
('Finn Jones'),
('Finn Wolfhard'),
('Flora Slorach'),
('Florence Pugh'),
('Frances Conroy'),
('Francis X. McCarthy'),
('Francisco Denis'),
('Frank Finlay'),
('Frank John Hughes'),
('Frank Whaley'),
('Frankie Faison'),
('Frederick Weller'),
('Freida Pinto'),
('Freya Allan'),
('Gabriel Luna'),
('Gabrielle Union'),
('Gal Gadot'),
('Gary Lydon'),
('Gary Oldman'),
('Gaten Matarazzo'),
('Gavin Ferguson'),
('Gedeon Burkhard'),
('Gene Kelly'),
('Genneya Walton'),
('Genta Nakamura'),
('Geoff Pierson'),
('Geoffrey Arend'),
('George Cheung'),
('George Kelly'),
('Georgia King'),
('Gerry Robert Byrne'),
('Giancarlo Esposito'),
('Gideon Glick'),
('Gillian Anderson'),
('Gillian Jacobs'),
('Gitali Roy'),
('Gitanjali Rao'),
('Giullian Yao Gioiello'),
('Glenn Fitzgerald'),
('Glenn Fleshler'),
('Gopichand Lagadapati'),
('Gore Abrams'),
('Govardhan Asrani'),
('Grace Gummer'),
('Grant Gustin'),
('Greg Chun'),
('Greg Cipes'),
('Greg Grunberg'),
('Gulshan Grover'),
('Gururaj Manepalli'),
('Gustave Die'),
('Guy Massey'),
('Gwyneth Paltrow'),
('Habtunu Africho'),
('Hailee Steinfeld'),
('Haley Joel Osment'),
('Haley Lu Richardson'),
('Hammad Haider Butt'),
('Hannah Gross'),
('Hannah John-Kamen'),
('Hannah Waddingham'),
('Hannibal Buress'),
('Hansford Prince'),
('Haradhan Bannerjee'),
('Hari Nef'),
('Harold G. Herthum'),
('Harry Goodwins'),
('Harry Kirton'),
('Harry Lennix'),
('Harry Lloyd'),
('Harry Shum Jr.'),
('Hartley Sawyer'),
('Haruna Mikawa'),
('Harvey Fierstein'),
('Harvey Keitel'),
('Hayden Panettiere'),
('Hazel Mailloux'),
('Heath Ledger'),
('Heidi Schanz'),
('Helen McCrory'),
('Helena Bonham Carter'),
('Henry Cavill'),
('Henry Golding'),
('Hettienne Park'),
('Hiro Shimono'),
('Hiroaki Hirata'),
('Hiroyuki Sanada'),
('Holland Taylor'),
('Holly Hunter'),
('Holt McCallany'),
('Honey Albela'),
('Hong Lin'),
('Hong Lu'),
('Hoyeon'),
('Hugh Dancy'),
('Hugh Grant'),
('Hugh Jackman'),
('Hugh Keays-Byrne'),
('Hugo Diego Garcia'),
('Hugo Weaving'),
('Hunter Aldridge'),
('Hunter Parrish'),
('Hynden Walch'),
('Iain Glen'),
('Ian Peck'),
('Ice Cube'),
('Idara Victor'),
('Idris Elba'),
('Ikue √îtani'),
('Ikuto Kanemasa'),
('Ileana D''Cruz'),
('Imelda Staunton'),
('Irrfan Khan'),
('Isabelle Almoyan'),
('Isha Chaturvedi'),
('Isiah Whitlock Jr.'),
('Isla Fisher'),
('Issa Rae'),
('Isy Suttie'),
('Iteeva Pande'),
('Itziar Itu√±o'),
('Ivo Uukkivi'),
('Ivy O''Brien'),
('Izzie Coffey'),
('J. Smith-Cameron'),
('J.B. Smoove'),
('J.C. Currais'),
('J.C. MacKenzie'),
('J.D.'),
('J.K. Simmons'),
('J.R. Ramirez'),
('JJ Feild'),
('Jack Coleman'),
('Jack Quaid'),
('Jacki Weaver'),
('Jackie Chan'),
('Jackie Earle Haley'),
('Jacky Ido'),
('Jacob G. Akins'),
('Jacob Warner'),
('Jacqueline Obradors'),
('Jada Pinkett Smith'),
('Jaden Smith'),
('Jahnni St. John'),
('Jaideep Ahlawat'),
('Jaime Lorente'),
('Jake Gyllenhaal'),
('Jake Johnson'),
('Jake Weber'),
('Jamahl Garrison-Lowe'),
('James Brolin'),
('James Caan'),
('James Corden'),
('James Gandolfini'),
('James Hong'),
('James Karen'),
('James Kyson'),
('James Lugton'),
('James M. Connor'),
('James Marsden'),
('James McAvoy'),
('James Michael Tyler'),
('James Remar'),
('James Saito'),
('James Tarpey'),
('Jami Owen'),
('Jamie Chung'),
('Jamie Foxx'),
('Jamie Lee Curtis'),
('Jamie-Lynn Sigler'),
('Jamieson Price'),
('Janae Collins'),
('Jane Adams'),
('Janet McTeer'),
('January Jones'),
('Jared Padalecki'),
('Jason Andrews'),
('Jason Bateman'),
('Jason Bernard'),
('Jason Clarke'),
('Jason Mantzoukas'),
('Jason Momoa'),
('Jason Schwartzman'),
('Jason Segel'),
('Jason Sudeikis'),
('Jasper Levine'),
('Jatin Malik'),
('Javier Bardem'),
('Jawed Sheikh'),
('Jay Lycurgo'),
('Jean Hagen'),
('Jeanine Serralles'),
('Jeff Daniels'),
('Jeff Goldblum'),
('Jefferson Hall'),
('Jeffrey Dean Morgan'),
('Jeffrey Tambor'),
('Jeffrey Wright'),
('Jeffrey Zubernis'),
('Jemima Rooper'),
('Jena Malone'),
('Jeneva Talwar'),
('Jenna Fischer'),
('Jennifer Aniston'),
('Jennifer Carpenter'),
('Jennifer Connelly'),
('Jennifer Ehle'),
('Jennifer Finley'),
('Jennifer Lawrence'),
('Jennifer Tilly'),
('Jenny Slate'),
('Jensen Ackles'),
('Jeon Young-soo'),
('Jeremiah Craft'),
('Jeremiah Yurk'),
('Jeremy Irons'),
('Jeremy Leary'),
('Jeremy Renner'),
('Jeremy Shamos'),
('Jeremy Strong'),
('Jeremy Swift'),
('Jerome Ranft'),
('Jerry Grayson'),
('Jesse Eisenberg'),
('Jesse L. Martin'),
('Jesse Plemons'),
('Jessica Chastain'),
('Jessica Frances Dukes'),
('Jessica Henwick'),
('Jessica Kate Meyer'),
('Jessica Lange'),
('Jessica Rothe'),
('Jessica Stroup'),
('Jessica Sula'),
('Jessie James Grelle'),
('Jessie T. Usher'),
('Jillian Dion'),
('Jim Beaver'),
('Jim Carrey'),
('Jim O''Heir'),
('Jim Parsons'),
('Jim Rash'),
('Jimmi Simpson'),
('Jimmy Ortega'),
('Jimmy Shergill'),
('Jimmy Tandel'),
('Jira Banjara'),
('Jisshu Sengupta'),
('Joaquin Phoenix'),
('Jodi Lyn O''Keefe'),
('Jodie Comer'),
('Joe Chrest'),
('Joe Cornish'),
('Joe Cortese'),
('Joe Keery'),
('Joe Lo Truglio'),
('Joe Nieves'),
('Joe Tuttle'),
('Joe Wilkinson'),
('Joel McHale'),
('Joel McKinnon Miller'),
('Joely Richardson'),
('Joey Batey'),
('Joey King'),
('John Albright'),
('John Barrowman'),
('John Bradley'),
('John Carroll Lynch'),
('John Carty'),
('John Cassini'),
('John Clarence Stewart'),
('John David Washington'),
('John Glover'),
('John Gowans'),
('John Hawkes'),
('John Krasinski'),
('John Lacy'),
('John Lithgow'),
('John Mahoney'),
('John Marley'),
('John Mulaney'),
('John Ortiz'),
('John Randall'),
('John Ratzenberger'),
('John Ross Bowie'),
('John Schneider'),
('John Slattery'),
('John Travolta'),
('John Turturro'),
('John Ventimiglia'),
('Johnny Galecki'),
('Johnny Simmons'),
('Johnny Yong Bosch'),
('Jomon Thomas'),
('Jon Bernthal'),
('Jon Hamm'),
('Jon Kenny'),
('Jon Voight'),
('Jonah Bobo'),
('Jonah Hill'),
('Jonathan Aris'),
('Jonathan Banks'),
('Jonathan Camp'),
('Jonathan Groff'),
('Jonathan Marc Sherman'),
('Jonathan Parks Jordan'),
('Jonathan Pryce'),
('Jordan Claire Robbins'),
('Jordan Nagai'),
('Jordan Rodrigues'),
('Jordana Spiro'),
('Jorge Garcia'),
('Jorge Lendeborg Jr.'),
('Jorge Monterrosa'),
('Joseph Gordon-Levitt'),
('Joseph Lee'),
('Joseph Mazzello'),
('Josh Brolin'),
('Josh Helman'),
('Josh Holloway'),
('Josh Lucas'),
('Josh Pais'),
('Josh Radnor'),
('Joshua Henry'),
('Joshua Orpin'),
('Jovan Adepo'),
('Juan Murcia'),
('Jude Law'),
('Judith Light'),
('Juhan Ulfsak'),
('Julia Clarke'),
('Julia Denton'),
('Julia Garner'),
('Julia Greer'),
('Julia Hsu'),
('Julia Rayner'),
('Julia Stiles'),
('Julianne Moore'),
('Julie Benz'),
('Julie Hagerty'),
('Juliette Binoche'),
('Jun''ichi Suwabe'),
('June Malia'),
('June Squibb'),
('Junko Takeuchi'),
('Juno Temple'),
('Justice Smith'),
('Justin Briner'),
('Justin Cooper'),
('Justin H. Min'),
('Justin Hartley'),
('Justin Swain'),
('Justin Timberlake'),
('J√¥ji Yanami'),
('J√∂rdis Triebel'),
('Kabir Sajid Shaikh'),
('Kacey Rohl'),
('Kai Lennox'),
('Kaitlyn Dever'),
('Kaito Ishikawa'),
('Kajol'),
('Kal-El Cage'),
('Kaley Cuoco'),
('Kamalinee Mukherjee'),
('Kamini Kaushal'),
('Kamu Mukherjee'),
('Kappei Yamaguchi'),
('Karamveer Kanwar'),
('Karan Soni'),
('Kareem Abdul-Jabbar'),
('Karen Fukuhara'),
('Karen Gillan'),
('Karen Kilgariff'),
('Karen Pittman'),
('Karl Urban'),
('Karoline Eichhorn'),
('Kasia Stelmach'),
('Kate Ashfield'),
('Kate Flannery'),
('Kate Higgins'),
('Kate Mara'),
('Kate McKinnon'),
('Kate Winslet'),
('Katee Sackhoff'),
('Katherine Langford'),
('Katherine O''Sullivan'),
('Kathy Bates'),
('Katie Amanda Keane'),
('Katie Cassidy'),
('Kay Kay Menon'),
('Kaya Scodelario'),
('Kayla Compton'),
('Kazuya Nakai'),
('Ke Huy Quan'),
('Keala Settle'),
('Keanu Reeves'),
('Keean Johnson'),
('Keegan-Michael Key'),
('Keir Mills'),
('Keira Knightley'),
('Keith David'),
('Keith Ferguson'),
('Keith William Richards'),
('Keke Palmer'),
('Kelli O''Hara'),
('Ken Garito'),
('Ken Jeong'),
('Ken Leung'),
('Ken Watanabe'),
('Kenny Chin'),
('Kenton Duty'),
('Kerry Condon'),
('Kerry Godliman'),
('Kevin Alejandro'),
('Kevin Corrigan'),
('Kevin Costner'),
('Kevin Hart'),
('Kevin Spacey'),
('Kevin Sussman'),
('Kevin West'),
('Kharaj Mukherjee'),
('Khary Payton'),
('Kieran Culkin'),
('Kiernan Shipka'),
('Kim Byung-cheol'),
('Kim Dickens'),
('Kimia Hosseini');
GO
INSERT INTO Actors (ActorName) VALUES

('Kimiko Glenn'),
('Kirk Thornton'),
('Kirron Kher'),
('Kirsten Dunst'),
('Kish√¥ Taniyama'),
('Kit Harington'),
('Kobna Holdbrook-Smith'),
('Kola Bokinni'),
('Kristen Bell'),
('Kristen Wiig'),
('Kristin Kreuk'),
('Krysten Ritter'),
('Kulbhushan Kharbanda'),
('Kumail Nanjiani'),
('Kumud Mishra'),
('Kunal Nayyar'),
('Kurt Braunohler'),
('Kurt Egyiawan'),
('Kurt Fuller'),
('Kurt Koehler'),
('Kyle Chandler'),
('K√¥ki Uchiyama'),
('LaKeith Stanfield'),
('Lalit Parimoo'),
('Lamar Johnson'),
('Lana Condor'),
('Lane Erwin'),
('Lanny Flaherty'),
('Lara Jean Chorostecki'),
('Larisa Oleynik'),
('Larry Miller'),
('Lateef Crowder'),
('Laura Linney'),
('Laura Lovelace'),
('Laura Marano'),
('Laura Mennell'),
('Lauren German'),
('Laurence Fishburne'),
('Laurent Vernin'),
('Laurie Metcalf'),
('Laz Alonso'),
('Lee Byung-hun'),
('Lee Evans'),
('Lee Jung-jae'),
('Lee-Na Kwan'),
('Leigh Gill'),
('Leighton Meester'),
('Leila Hatami'),
('Leilani Shiu'),
('Lekh Tandon'),
('Lena Headey'),
('Leonardo DiCaprio'),
('Lesley-Ann Brandt'),
('Leslie David Baker'),
('Leslie Grossman'),
('Leslie Mann'),
('Leslie Nielsen'),
('Liang Wei-Hui-Duncan'),
('Liang Zhen'),
('Lil Rel Howery'),
('Lily Gladstone'),
('Lily James'),
('Lily Rabe'),
('Lily Tomlin'),
('Lin Shaye'),
('Linda Cardellini'),
('Lio Tipton'),
('Lisa Ann Walter'),
('Lisa Banes'),
('Lisa Emery'),
('Lisa Jakub'),
('Lisa Kudrow'),
('Lisa Vicari'),
('Lloyd Bridges'),
('Logan Dean'),
('Logan Lerman'),
('Lois Kelly-Miller'),
('Lois Smith'),
('Lorna Patterson'),
('Lorraine Bracco'),
('Louis Hofmann'),
('Louise Brealey'),
('Lucas Hedges'),
('Luci Christian'),
('Lucius Hoyos'),
('Lucy Davis'),
('Luis Guzm√°n'),
('Luke Brandon Field'),
('Luke Bromley'),
('Luke Hemsworth'),
('Luke Wilson'),
('Luna Lauren Velez'),
('Lyndsy Fonseca'),
('Lyne Ren√©e'),
('L√©a Seydoux'),
('M. Night Shyamalan'),
('Mackenzie Davis'),
('Mackenzie Foy'),
('Macon Blair'),
('Madhavi Mukherjee'),
('Mads Mikkelsen'),
('Maggie Gyllenhaal'),
('Maggie Wheeler'),
('Mahershala Ali'),
('Maia Reficco'),
('Maile Flanagan'),
('Maisie Williams'),
('Maja Sch√∂ne'),
('Makoto Furukawa'),
('Makrand Deshpande'),
('Malcolm McDowell'),
('Malin Akerman'),
('Manav Vij'),
('Mandy Moore'),
('Manoj Joshi'),
('Manu Malik'),
('Mara Wilson'),
('Maral Baniadam'),
('Marc Evan Jackson'),
('Marcia Gay Harden'),
('Marcos A. Ferraez'),
('Marcus Henderson'),
('Margaret Qualley'),
('Margarita Levieva'),
('Margo Moorer'),
('Margot Robbie'),
('Maria Bakalova'),
('Maria Bello'),
('Marika Casteel'),
('Marina Inoue'),
('Mario Van Peebles'),
('Marion Bailey'),
('Marion Cotillard'),
('Marisa Tomei'),
('Mark Gatiss'),
('Mark Margolis'),
('Mark Moses'),
('Mark Pellegrino'),
('Mark Ruffalo'),
('Mark Rylance'),
('Mark Sheppard'),
('Mark Wahlberg'),
('Mark Webber'),
('Markie Post'),
('Marlene Lawston'),
('Marlon Brando'),
('Marshall Manesh'),
('Martha Espinoza'),
('Martha MacIsaac'),
('Martin Donovan'),
('Martin Freeman'),
('Martin Sheen'),
('Martin Wallstr√∂m'),
('Mary Agnes Nixon'),
('Mary Elizabeth Winstead'),
('Mary Lynn Rajskub'),
('Mary Mallen'),
('Masakazu Morita'),
('Masako Nozawa'),
('Masi Oka'),
('Master Abhijit'),
('Mathieu Amalric'),
('Matilda Tucker'),
('Matt Bomer'),
('Matt Damon'),
('Matt Dillon'),
('Matt Frewer'),
('Matt Jaynes'),
('Matt LeBlanc'),
('Matt Lutz'),
('Matt Smith'),
('Matt Walsh'),
('Matthew Erickson'),
('Matthew Fox'),
('Matthew Goode'),
('Matthew Gray Gubler'),
('Matthew Lawrence'),
('Matthew Macfadyen'),
('Matthew Maher'),
('Matthew McConaughey'),
('Matthew Modine'),
('Matthew Needham'),
('Matthew Perry'),
('Matthew Pruitt'),
('Matuse'),
('Maura Tierney'),
('Maureen Lipman'),
('Max Casella'),
('Maya G. Love'),
('Maya Hawke'),
('Mayim Bialik'),
('Mayumi Tanaka'),
('Megalyn Echikunwoke'),
('Megan Park'),
('Meghan Heffern'),
('Mehar Bano'),
('Mehdi Koushki'),
('Mel Gibson'),
('Melanie Lynskey'),
('Melissa Fumero'),
('Melissa Leo'),
('Melissa Rauch'),
('Melkote'),
('Meredith Hagner'),
('Merila Zare''i'),
('Merritt Wever'),
('Meryl Streep'),
('Mesfin Lamengo'),
('Micah Howard'),
('Michael Bolton'),
('Michael Buscemi'),
('Michael C. Hall'),
('Michael Caine'),
('Michael Cera'),
('Michael Chow'),
('Michael Conner Humphreys'),
('Michael Cristofer'),
('Michael Emerson'),
('Michael Fassbender'),
('Michael Imperioli'),
('Michael Keaton'),
('Michael Kelly'),
('Michael Mando'),
('Michael Marcus'),
('Michael McKean'),
('Michael Michele'),
('Michael Pe√±a'),
('Michael Potts'),
('Michael Rosenbaum'),
('Michael Shannon'),
('Michael Vu'),
('Michael Wincott'),
('Michaela Coel'),
('Michaela Ja√©  Rodriguez'),
('Michal Zebrowski'),
('Michelle Buteau'),
('Michelle Dockery'),
('Michelle Greenidge'),
('Michelle Monaghan'),
('Michelle Ruff'),
('Michelle Trachtenberg'),
('Michelle Williams'),
('Michelle Yeoh'),
('Mickey Sumner'),
('Miguel Herr√°n'),
('Mike Colter'),
('Mike Hatton'),
('Mike Manning'),
('Mike McFarland'),
('Milanka Brooks'),
('Millard Mitchell'),
('Millie Bobby Brown'),
('Milo Gibson'),
('Milo Ventimiglia'),
('Mim√Æ M Khayisa'),
('Mina Sadati'),
('Minka Kelly'),
('Mir Sarwar'),
('Misha Collins'),
('Missi Pyle'),
('Missy Yager'),
('Misty Rosas'),
('Mitchell Ryan'),
('Mojtaba Pirzadeh'),
('Monica Dolan'),
('Monique Gabriela Curnen'),
('Morena Baccarin'),
('Morgan Brown'),
('Morgan Freeman'),
('Moritz Jahn'),
('Morse Diggs'),
('Moushumi Chatterjee'),
('Mukesh Khanna'),
('Mukesh Tiwari'),
('Murielle Telio'),
('Murray McArthur'),
('MyAnna Buring'),
('Mykelti Williamson'),
('M√©lanie Laurent'),
('Nadia Afgan'),
('Nancy Carell'),
('Naomi Watts'),
('Narendra Jha'),
('Nargis Fakhri'),
('Natalia Dyer'),
('Natascha McElhone'),
('Natasha O''Keeffe'),
('Nathalie Baye'),
('Nathan Jones'),
('Nathan Mitchell'),
('Naveen Andrews'),
('Neal Huff'),
('Ned Dennehy'),
('Neena Kulkarni'),
('Neil Patrick Harris'),
('Nia Celeste'),
('Nicholas Braun'),
('Nicholas Hoult'),
('Nick Frost'),
('Nick Mohammed'),
('Nick Offerman'),
('Nico Parker'),
('Nicola Cunningham'),
('Nicole Britton'),
('Nikitin Dheer'),
('Nikki M. James'),
('Nikolaj Coster-Waldau'),
('Nilotpal Dey'),
('Nishant Dahiya'),
('Noah Centineo'),
('Noah Emmerich'),
('Noah Jupe'),
('Noah Schnapp'),
('Nobuhiko Okamoto'),
('Nona Gaye'),
('Nora Dunn'),
('Norbert Leo Butz'),
('Noriaki Sugiyama'),
('Odeya Rush'),
('Odiseas Georgiadis'),
('Oliver Farrelly'),
('Oliver Masucci'),
('Olivia Colman'),
('Olivia Cooke'),
('Olivia Williams'),
('Om Puri'),
('Oscar Isaac'),
('Oscar Lesage'),
('Oscar Nu√±ez'),
('Ossie Davis'),
('Osy Ikhile'),
('Otto'),
('P.J. Byrne'),
('Packy Lee'),
('Paresh Rawal'),
('Parineeti Chopra'),
('Paris Berelc'),
('Park Hae-soo'),
('Parmeet Sethi'),
('Parvin Dabas'),
('Pat Shortt'),
('Patricia Belcher'),
('Patricia Clarkson'),
('Patricia Kalember'),
('Patrick Fabian'),
('Patrick Fugit'),
('Patrick Mapel'),
('Patrick Wilson'),
('Patti Yasutake'),
('Paul Adelstein'),
('Paul Anderson'),
('Paul Benjamin'),
('Paul Blackthorne'),
('Paul Dano'),
('Paul G. Raymond'),
('Paul Herman'),
('Paul Lux'),
('Paul Romero'),
('Paul Rudd'),
('Paul Satterfield'),
('Paulina Gaitan'),
('Pawan Singh'),
('Payman Maadi'),
('Paz de la Huerta'),
('Pedro Alonso'),
('Pedro Pascal'),
('Peggy Roeder'),
('Penelope Wilton'),
('Penn Badgley'),
('Pete Postlethwaite'),
('Peter Anthony Tambakis'),
('Peter Coyote'),
('Peter Crombie'),
('Peter Dinklage'),
('Peter Friedman'),
('Peter Gallagher'),
('Peter Graves'),
('Peter Grosz'),
('Peter Krause'),
('Peter Serafinowicz'),
('Peter Wight'),
('Phil Dunster'),
('Phil LaMarr'),
('Philip Baker Hall'),
('Phoebe Tonkin'),
('Phyllis Smith'),
('Pierce Brosnan'),
('Piggy Chan'),
('Piper Perabo'),
('Pitobash'),
('Piyush Mishra'),
('Polly Holliday'),
('Pom Klementieff'),
('Portia Doubleday'),
('Prakash Belawadi'),
('Prateek Kapoor'),
('Priya Usman Khan'),
('Priyanka Chopra Jonas'),
('Puvisha Manoharan'),
('Quincy Tyler Bernstine'),
('R. Lee Ermey'),
('RJ Mitte'),
('Rachael Harris'),
('Rachael Taylor'),
('Rachel Boston'),
('Rachel Griffiths'),
('Rachel McAdams'),
('Rachica Oswal'),
('Radhika Apte'),
('Rafe Spall'),
('Raghubir Yadav'),
('Rainn Wilson'),
('Raj Zutshi'),
('Raja'),
('Rajat Kapoor'),
('Rajatabha Dutta'),
('Rakesh Kukreti'),
('Ralph Fiennes'),
('Rami Malek'),
('Ramiz Law'),
('Ranbir Kapoor'),
('Randall Park'),
('Rashida Jones'),
('Rasti Farooq'),
('Ratna Pathak Shah'),
('Ray Fisher'),
('Ray McKinnon'),
('Ray Romano'),
('Razak Khan'),
('Ra√∫l M√©ndez'),
('Rebecca De Mornay'),
('Rebecca Ferguson'),
('Rebecca Hall'),
('Rebecca Williams'),
('Rebel Wilson'),
('Reg E. Cathey'),
('Reina Ueda'),
('Remo Girone'),
('Remy Holt'),
('Retta'),
('Rhea Seehorn'),
('Rhenzy Feliz'),
('Rhys Ifans'),
('Rich Ceraulo Ko'),
('Rich Sommer'),
('Richard Cetrone'),
('Richard Clarke'),
('Richard Conte'),
('Richard Donelly'),
('Richard Edson'),
('Richard Erdman'),
('Richard Gross'),
('Richard Hadfield'),
('Richard Pyros'),
('Richard Ridings'),
('Richard S. Castellano'),
('Richard Schiff'),
('Richmond Arquette'),
('Rick Gonzalez'),
('Ricky Adams'),
('Ricky Gervais'),
('Rico Bueno'),
('Riley Keough'),
('Rish Shah'),
('Rishi Kapoor'),
('Rita Moreno'),
('Ritu Arya'),
('Rob Benedict'),
('Rob Huebel'),
('Rob Lowe'),
('Rob Morgan'),
('Rob Riggle'),
('Rob Thomas'),
('Robbie Amell'),
('Robert De Niro'),
('Robert Downey Jr.'),
('Robert Duvall'),
('Robert Hays'),
('Robert Iler'),
('Robert John Burke'),
('Robert Knepper'),
('Robert Littman'),
('Robert Morse'),
('Robert Popper'),
('Robert Prosky'),
('Robert Sheehan'),
('Robert Stack'),
('Robin Bartlett'),
('Robin Greer'),
('Robin Lord Taylor'),
('Robin Williams'),
('Robin de Jesus'),
('Rockmond Dunbar'),
('Roger Aaron Brown'),
('Roman Griffin Davis'),
('Roman Guerriero'),
('Romany Malco'),
('Ron Cephas Jones'),
('Ron Dean'),
('Ron Perlman'),
('Ron Silver'),
('Ron Taylor'),
('Rooney Mara'),
('Roopa Ganguly'),
('Rory Culkin'),
('Rosa Salazar'),
('Rosamund Pike'),
('Rosario Dawson'),
('Rose Reynolds'),
('Rosemarie DeWitt'),
('Rosie Huntington-Whiteley'),
('Royce Pierreson'),
('Ruby Dee'),
('Rupert Graves'),
('Rupsa Banerjee'),
('Russell Crowe'),
('Russell Harvard'),
('Ruth Connell'),
('Ryan Gosling'),
('Ryan Hansen'),
('Ryan Potter'),
('Ryan Reynolds'),
('Ryosuke Higa'),
('Sacha Baron Cohen'),
('Sacha Dhawan'),
('Sahiba Bali'),
('Sahil Vedoliyaa'),
('Sahra Asadollahi'),
('Sajal Bhattacharya'),
('Sally Field'),
('Salmaan Peerzada'),
('Sam Anderson'),
('Sam Humphrey'),
('Sam Jones III'),
('Sam Rockwell'),
('Samantha Barks'),
('Samantha Mahurin'),
('Samantha Smith'),
('Samantha White'),
('Sameer Sharma'),
('Samiya Mumtaz'),
('Samuel L. Jackson'),
('Sander Rebane'),
('Sandra Bullock'),
('Sania Saeed'),
('Sanjana Sanghi'),
('Saoirse Ronan'),
('Sarah Paulson'),
('Sarah Snook'),
('Sarah Wayne Callies'),
('Sareh Bayat'),
('Sarina Farhadi'),
('Sarwat Gilani'),
('Sathyaraj'),
('Satish Shah'),
('Satya Krishnan'),
('Saurabh Shukla'),
('Scarlett Estevez'),
('Scarlett Johansson'),
('Scoot McNairy'),
('Scott Glenn'),
('Scott Grimes'),
('Scott Menville'),
('Scott Nicholson'),
('Scott Thompson'),
('Sean Bean'),
('Sean Pertwee'),
('Sean Ringgold'),
('Seann Conway'),
('Sebastian Arcelus'),
('Sebastian Maniscalco'),
('Sebastian Stan'),
('Selena Gomez'),
('Sendhil Ramamurthy'),
('Seth Rogen'),
('Shagufta Ali'),
('Shah Rukh Khan'),
('Shahab Hosseini'),
('Shahid Kapoor'),
('Shailen Mukherjee'),
('Shameik Moore'),
('Shammi Kapoor'),
('Shane Carruth'),
('Shane Powers'),
('Shane West'),
('Sharat Saxena'),
('Sharon Duncan-Brewster'),
('Sharon Rooney'),
('Shawar Ali'),
('Shea Whigham'),
('Sheaun McKinney'),
('Sheila Flitton'),
('Shelley Hennig'),
('Shernaz Patel'),
('Shia LaBeouf'),
('Shikha Jain'),
('Shirin Yazdanbakhsh'),
('Shraddha Kapoor'),
('Shreyas Talpade'),
('Shuzhen Zhao'),
('Shyamal Ghoshal'),
('Sh√¥tar√¥ Morikubo'),
('Sidharth Malhotra'),
('Sigourney Weaver'),
('Sikandar Kher'),
('Simon Helberg'),
('Simon Pegg'),
('Simone Missick'),
('Sione Kelepi'),
('Siri'),
('Skylar Gaertner'),
('Sobhita Dhulipala'),
('Sofia Hasmik'),
('Sofia Hublitz'),
('Sohail Sameer'),
('Songshen Zuo'),
('Sonny Valicenti'),
('Sonoya Mizuno'),
('Sonya Jehan'),
('Sophie Evans'),
('Sophie Perry'),
('Sophie Rundle'),
('Sophie Turner'),
('Soumitra Chatterjee'),
('Spike Lee'),
('Srikanth Polisetti'),
('Stacey Roca'),
('Stark Sands'),
('Stellan Skarsg√•rd'),
('Stephan Kampwirth'),
('Stephane Fichet'),
('Stephanie Beatriz'),
('Stephanie Corneliussen'),
('Stephanie Hsu'),
('Stephanie Nadolny'),
('Stephanie Sheh'),
('Stephen Amell'),
('Stephen Blackehart'),
('Stephen Dorff'),
('Stephen McHattie'),
('Stephen McKinley Henderson'),
('Stephen Merchant'),
('Stephen Root'),
('Stephen Stucker'),
('Sterling Hayden'),
('Sterling Knight'),
('Steve Berg'),
('Steve Carell'),
('Steve Eastin'),
('Steve Prince'),
('Steve Staley'),
('Steve Toussaint'),
('Steven Michael Quezada'),
('Steven Van Zandt'),
('Steven Yeun'),
('Sumit Kaul'),
('Sun Zhi Hua-Hilton'),
('Suniel Shetty'),
('Sunita Mani'),
('Sunny Wu Jin Zahao'),
('Susan May Pratt'),
('Susan Park'),
('Swaroopa Ghosh'),
('Swoosie Kurtz'),
('T.J. Jagodowski'),
('Tabu'),
('Taika Waititi'),
('Taito Ban'),
('Takayo Fischer'),
('Takeshi Kaneshiro'),
('Talia Ryder'),
('Tallie Medel'),
('Tantoo Cardinal'),
('Tara Strong'),
('Taraji P. Henson'),
('Taran Killam'),
('Taraneh Alidoosti'),
('Taylor Kitsch'),
('Teagan Croft'),
('Ted Sutton'),
('Telvin Griffin'),
('Terence Rosemore'),
('Teresa Palmer'),
('Terrence Howard'),
('Terry Crews'),
('Terry Notary'),
('Terry O''Quinn'),
('Terry Walters'),
('Tessa Thompson'),
('Thandiwe Newton'),
('Theo James'),
('Theo Rossi'),
('Thom Shelton'),
('Thomas Haden Church'),
('Thomas Jay Ryan'),
('Thomas Law'),
('Thomas Lennon'),
('Thomas Morrison'),
('Thomasin McKenzie'),
('Tiffany Haddish'),
('Til Schweiger'),
('Tim Griffin'),
('Tim Roth'),
('Tim Zajaros'),
('Timothy Eulich'),
('Timothy John Smith'),
('Timoth√©e Chalamet'),
('Tina Fey'),
('Tobias Menzies'),
('Toby Meuli'),
('Toheeb Jimoh'),
('Tom Basden'),
('Tom Berenger'),
('Tom Cavanagh'),
('Tom Choi'),
('Tom Davis'),
('Tom Ellis'),
('Tom Hanks'),
('Tom Hardy'),
('Tom Hiddleston'),
('Tom Hopper'),
('Tom Laflin'),
('Tom Morton'),
('Tom Pelphrey'),
('Tom Prior'),
('Tom Welling'),
('Tom Wilkinson'),
('Tom Wu'),
('Tomer Capone'),
('Tommie-Amber Pirie'),
('Tommy Kominik'),
('Toni Collette'),
('Tonita Castro'),
('Tony Beck'),
('Tony Cavalero'),
('Tony Dalton'),
('Tony Goldwyn'),
('Tony Leung Chiu-wai'),
('Tony Sirico'),
('Tony Way'),
('Toshiki Masuda'),
('Tracy Letts'),
('Trevor Morgan'),
('Tricia Helfer'),
('Trina Nishimura'),
('Triptii Dimri'),
('Trisha Gorman'),
('Troy Metcalf'),
('Tyler Hoechlin'),
('Tyler Perry'),
('Tyler Steelman'),
('Tzi Ma'),
('Ukee Washington'),
('Una Stubbs'),
('Utkarsh Ambudkar'),
('Vaishnavi Sharma'),
('Valerie Chow'),
('Vanessa Hudgens'),
('Vanessa Kirby'),
('Varun Dhawan'),
('Veronica Laux'),
('Viggo Mortensen'),
('Vikram Kapadia'),
('Vin Diesel'),
('Vincent D''Onofrio'),
('Vincent Gurzo'),
('Vincent Kartheiser'),
('Vinette Robinson'),
('Ving Rhames'),
('Vinnie Jones'),
('Viola Davis'),
('Vipin Sharma'),
('Virginia Gardner'),
('Virginia Loring Cooke'),
('Vivian Bang'),
('Von Lewis'),
('W. Earl Brown'),
('Wade Williams'),
('Wagner Moura'),
('Wai Ching Ho'),
('Wallace Shawn'),
('Wally Wingert'),
('Walton Goggins'),
('Wanja Mues'),
('Warren Finkelstein'),
('Wendee Lee'),
('Wentworth Miller'),
('Wes Chatham'),
('Wi Ha-joon'),
('Will Arnett'),
('Will Ferrell'),
('Will Smith'),
('Willa Holland'),
('Willem Dafoe'),
('William Dick'),
('William Fichtner'),
('Wilson Bethel'),
('Wilson Mbomio'),
('Winona Ryder'),
('Winston Duke'),
('Woody Harrelson'),
('Wrenn Schmidt'),
('Wunmi Mosaku'),
('X Mayo'),
('Yahya Abdul-Mateen II'),
('Yang Xuejian'),
('Yasiin Bey'),
('Yasushi Iwaki'),
('Yaya DaCosta'),
('Yongbo Jiang'),
('Young Mazino'),
('Yui Ishikawa'),
('Yumiko Kobayashi'),
('Yunjin Kim'),
('Yuri Lowenthal'),
('Yuriko Yamaguchi'),
('Yuvika Chaudhary'),
('Yvette Nicole Brown'),
('Y√ªki Kaji'),
('Y√ªko Minaguchi'),
('Zac Efron'),
('Zach Galifianakis'),
('Zachary Bailess'),
('Zachary Quinto'),
('Zachary Scott Ross'),
('Zack Gottsagen'),
('Zak Steiner'),
('Zakir Hussain'),
('Zazie Beetz'),
('Zendaya'),
('Zenobia Shroff'),
('Zhiming Huang'),
('Zoe Kazan'),
('Zooey Deschanel'),
('Zo√´ Kravitz'),
('Zo√´ Soul'),
('√Ålvaro Morte'),
('√örsula Corber√≥');

GO
INSERT INTO Actors (ActorName) VALUES
('Aadyn Encalarde'),
('Aankha Neal'),
('Aaron Moten'),
('Aasif Mandvi'),
('Abby Elliott'),
('Abby Ryder Fortson'),
('Abdolhosein Bagheri'),
('Abeer Sandeep Jain'),
('Abhay Deol'),
('Abhishek Bachchan'),
('Abigail Pniowsky'),
('Adam David Thompson'),
('Adam Goldberg'),
('Adam James'),
('Adelaide Clemens'),
('Adrian Rawlins'),
('Adrianne Palicki'),
('Adrienne C. Moore'),
('Ad√©la Hesov√°'),
('Afshin Khorshid Bakhtiari'),
('Agnes Moorehead'),
('Ahilya Bamroo'),
('Ahmad Ansari'),
('Ahmed Best'),
('Aidan Turner'),
('Aimee Carrero'),
('Aimyon'),
('Aim√©e Kwan'),
('Aisling Bea'),
('Aisling Franciosi'),
('Akari Miura'),
('Akemi Yamaguchi'),
('Akiko Kobayashi'),
('Akiko Takeshita'),
('Akiko Yano'),
('Akira Yamaguchi'),
('Alan Arkin'),
('Alan Barinholtz'),
('Alan Howard'),
('Alan Rickman'),
('Alanna Ubach'),
('Albert Brooks'),
('Albert Finney'),
('Albert Hall'),
('Aleah Aberdeen'),
('Alec Guinness'),
('Alex Ferns'),
('Alex Wolff'),
('Alfie Todd'),
('Alfred Molina'),
('Alfredo Tavares'),
('Ali Astin'),
('Alice Braga'),
('Alicia Witt'),
('Alima Ashton-Sheibu'),
('Alin Popa'),
('Alison Sudol'),
('Alison Wright'),
('Alistair Sewell'),
('Alix West Lefler'),
('Allan Henry'),
('Allelon Ruggiero'),
('Allison Janney'),
('Ally Maki'),
('Alonzo Brown'),
('Alyla Browne'),
('Amanda Brugel'),
('Amanda Root'),
('Amara Pedroso'),
('Amber Midthunder'),
('Amelia Reid'),
('America Ferrera'),
('Amir El-Masry'),
('Amir Farrokh Hashemian'),
('Amy Brenneman'),
('Amy Morgan'),
('Amy Stiller'),
('Am√©lie Hoeferle'),
('An Nguyen'),
('Ana Gasteyer'),
('Ana Rey'),
('Anastazja Drobniak'),
('Anatole Taubman'),
('Anders Olof Grundberg'),
('Andrene Ward-Hammond'),
('Andrew Astor'),
('Andrew Barth Feldman'),
('Andrew Garman'),
('Andy Arness'),
('Andy Bean'),
('Andy Le'),
('Andy Nyman'),
('Andy Umberger'),
('Anesha Bailey'),
('Angela Bassett'),
('Angelina Jolie'),
('Angus Sampson'),
('Anitta Suikkari'),
('Anjelica Huston'),
('Ann Yamane'),
('Anna Paquin'),
('Anna Popplewell'),
('Anna Sawai'),
('Annabel O''Hagan'),
('Anne Jackson'),
('Annette Bening'),
('Annie McEnroe'),
('Annie Mumolo'),
('Annie Parisse'),
('Annie Potts'),
('Anouk Darwin Homewood'),
('Anthony LaPaglia'),
('Anthony Mackie'),
('Anthony Michael Hall'),
('Anthony Perkins'),
('Anthony Ramos'),
('Anthony Ruivivar'),
('Antonio Banderas'),
('Anuja Sathe'),
('Aoi Y√ªki'),
('Aoife Hinds'),
('Archie Madekwe'),
('Ariana DeBose'),
('Ariana Grande'),
('Ariana Richards'),
('Arienne Mandi'),
('Aron Warner'),
('Arthur Conti'),
('Arunoday Singh'),
('Ashley Judd'),
('Ashley Liao'),
('Asia Kate Dillon'),
('Athena Strates'),
('Attila Dobai'),
('Attila Kecskem√©thy'),
('Aurore Cl√©ment'),
('Austin Stowell'),
('Avan Jogia'),
('Avi Nash'),
('Avy Berry'),
('Ayano Shiraishi'),
('Ayo Edebiri'),
('Bahare Seddiqi'),
('Banner Eisenberg'),
('Barbra Streisand'),
('Barry Corbin'),
('Barry Del Sherman'),
('Barry Nelson'),
('Barry Pepper'),
('Barry Tubb'),
('Bassam Abdelfattah'),
('Bebe Neuwirth'),
('Behzad Rafiei'),
('Belinda McClory'),
('Ben Kingsley'),
('Ben Mendelsohn'),
('Ben Sullivan'),
('Ben Whishaw'),
('Benedict Wong'),
('Benjamin Bratt'),
('Benjamin Haigh'),
('Benjamin Wong'),
('Bernard Hill'),
('Bernard Hocke'),
('Bernhard Wicki'),
('Berto Colon'),
('Betty Aberlin'),
('Bill Paxton'),
('Bill Sage'),
('Bill Skarsg√•rd'),
('Bill Smitrovich'),
('Billy Boyd'),
('Billy Dee Williams'),
('Billy Postlethwaite'),
('Billy Zane'),
('Blair Underwood'),
('Blake Benitez'),
('Blake DeLong'),
('Blythe Danner'),
('Bob Barr'),
('Bob Peck'),
('Bob Wiltfong'),
('Bobby Block'),
('Bobby Cannavale'),
('Bobby Holland Hanton'),
('Boman Irani'),
('Bonnie Aarons'),
('Bonnie Hunt'),
('Bonnie Wright'),
('Bostin Christopher'),
('Brad Dourif'),
('Brad Garrett'),
('Brad Greenquist'),
('Brad Swanick'),
('Bradley Pickren'),
('Brady Hepner'),
('Bram Scott-Breheny'),
('Brandon T. Jackson'),
('Brent Buell as'),
('Brett Rice'),
('BriAnn Rachele'),
('Brian Jarvis'),
('Bridget Fonda'),
('Bridget Moynahan'),
('Britt Lower'),
('Brittany Daniel'),
('Brittney Rodriguez'),
('Bruce Allpress'),
('Bruce Greenwood'),
('Bruno Novelli'),
('Bryan Doo'),
('Bryce Dallas Howard'),
('Br√≠an F. O''Byrne'),
('B√©r√©nice Marlohe'),
('Cade Woodward'),
('Cailee Spaeny'),
('Cali Sheldon'),
('Callum Turner'),
('Cameron Britton'),
('Camille Cottin'),
('Caprice Ott'),
('Cara Mahoney'),
('Carlos Mencia'),
('Carole De Saram'),
('Carrie Fisher'),
('Carrie Preston'),
('Casey Groves'),
('Cassandra Blair'),
('Caterina Murino'),
('Catherine Lambert'),
('Catherine McNally'),
('Cecylia Pekala'),
('Chadwick Boseman'),
('Chantelle Jamieson'),
('Charlayne Woodard'),
('Charlee Fraser'),
('Charley Rowan McCain'),
('Charlie'),
('Charlie Carrick'),
('Charlie Hiscock'),
('Charlie Talbert'),
('Charlotte Hope'),
('Charlotte Riley'),
('Charlotte Townsend'),
('Chavo Guerrero Jr.'),
('Cheech Marin'),
('Chester'),
('Chien Szu-Ying'),
('Chika Sakamoto'),
('Chinaza Uche'),
('Chloe East'),
('Chloe Farnworth'),
('Chloe Pirrie'),
('Choi Min-sik'),
('Chris Fowler'),
('Chris Gann'),
('Chris Greening'),
('Chris Messina'),
('Chris Miller'),
('Chris Mulkey'),
('Chris Perfetti'),
('Chris Renaud'),
('Chris Weitz'),
('Christa Miller'),
('Christian Fan'),
('Christian Friedel'),
('Christian Patterson'),
('Christina Cabot'),
('Christina Ricci'),
('Christine Anu'),
('Christine Taylor'),
('Christopher Eccleston'),
('Christopher Lee'),
('Christy Summerhays'),
('Chuck Low'),
('Clarence Maclin'),
('Claresie Mobley'),
('Clark Backo'),
('Claude Rains'),
('Claudia Gerini'),
('Clemens Schick'),
('Clive Pearse'),
('Cl√©mence Po√©sy'),
('Colman Domingo'),
('Colton Osorio'),
('Conner O''Malley'),
('Conrad Kemp'),
('Conrad Veidt'),
('Cooper Raiff'),
('Copper Cunningham'),
('Corey Hendrix'),
('Corey Stoll'),
('Cornell John'),
('Cosmo Jarvis'),
('Courtney Mae-Briggs'),
('Craig Jackson'),
('Craig Robinson'),
('Cristo Fern√°ndez'),
('Cynthia Addai-Robinson'),
('Cynthia Erivo'),
('Da''Vine Joy Randolph'),
('Dacre Montgomery'),
('Dafne Keen'),
('Daisy Ridley'),
('Dakota Daulby'),
('Dakota Fanning'),
('Damon Gupton'),
('Dan Hough'),
('Dan Stevens'),
('Dana Eskelson'),
('Dana Gaier'),
('Dana Gourrier'),
('Danai Gurira'),
('Dani Popescu'),
('Daniel Bernhardt'),
('Daniel Day-Lewis'),
('Daniel Franzese'),
('Daniel Gillies'),
('Daniel Lench'),
('Daniel Oreskes'),
('Daniel Singh'),
('Daniel Zolghadri'),
('Danielle Brooks'),
('Danielle Deadwyler'),
('Danny DeVito'),
('Danny Kirrane'),
('Danny Lloyd'),
('Danny Trejo'),
('Darnell Appling'),
('Dave Legeno'),
('Dave Register'),
('David Andrews'),
('David Aston'),
('David Bowers'),
('David Brown'),
('David Corenswet'),
('David Dastmalchian'),
('David Duchovny'),
('David Giraudy'),
('David Huddleston'),
('David Koechner'),
('David Maldonado'),
('David Menkin'),
('David Morse'),
('David Nicholson'),
('David Prowse'),
('David Rasche'),
('David Steen'),
('David Warner'),
('Dawn French'),
('Dayo Okeniyi'),
('Dean O''Gorman'),
('Dean R. Brooks'),
('Dean Stockwell'),
('Dean Winters'),
('Deborah Geffner'),
('Demi√°n Bichir'),
('Dennis Christopher'),
('Dennis Hopper'),
('Derek Deadman'),
('Derek Riddell'),
('Dermot Mulroney'),
('Devin Kawaoka'),
('Dexter Sol Ansell'),
('Diahnne Abbott'),
('Diane Venora'),
('Dibyendu Bhattacharya'),
('Dichen Lachman'),
('Dick Miller'),
('Dillon Freasier'),
('Dinah Nicholson'),
('Divya Dutta'),
('Djimon Hounsou'),
('Dolph Lundgren'),
('Domhnall Gleeson'),
('Dominic Cooper'),
('Dominic Sessa'),
('Dominique Thorne'),
('Don Battee'),
('Don Cheadle'),
('Don Rickles'),
('Donald Sutherland'),
('Donna Murphy'),
('Donnell Rawlings'),
('Donnie Yen'),
('Dooley Wilson'),
('Dorothy Comingore'),
('Doug Hutchison'),
('Douglas Hodge'),
('Dragomir Mrsic'),
('Drew Scheid'),
('Dustin Hoffman'),
('Dylan Baker'),
('Dylan Corbett-Bader'),
('Dylan Kussman'),
('E.G. Marshall'),
('Eamonn Walker'),
('Ebon Moss-Bachrach'),
('Ed Begley'),
('Eddie Marsan'),
('Eddie Murphy'),
('Eddie Velez'),
('Eduardo Franco'),
('Edward Binns'),
('Edward Fayton'),
('Edwin Lee Gibson'),
('Eero Milonoff'),
('Elarica Johnson'),
('Elham Imani'),
('Eliane Umuhire'),
('Eliot Sumner'),
('Elizabeth Debicki'),
('Elizabeth Marvel'),
('Elizabeth Olsen'),
('Ella Purnell'),
('Elle McKinnon'),
('Elle Young'),
('Elsa Pataky'),
('Elsie Fisher'),
('Emile Hirsch'),
('Emily Beecham'),
('Emily Mortimer'),
('Emily VanCamp'),
('Emily Weider'),
('Emma Corrin'),
('Emma Hindle'),
('Emma Jenkins-Purro'),
('Emma Myers'),
('Emma Portner'),
('Emma Thompson'),
('Emma Watson'),
('Eri Fukatsu'),
('Eric Chase Anderson'),
('Eric Ladin'),
('Eric Meyers'),
('Eric Sykes'),
('Eric Winzenried'),
('Erik von Detten'),
('Erin Kellyman'),
('Erskine Sanford'),
('Esai Morales'),
('Estelle Harris'),
('Ethan Hawke'),
('Ethan Slater'),
('Eugenie Bondurant'),
('Eushin Lee'),
('Eva Green'),
('Evan Alex'),
('Evan Assante'),
('Evan Hengst'),
('Evan Lai'),
('Evanna Lynch'),
('Eve Harlow'),
('Ever Anderson'),
('Everett Sloane'),
('Fala Chen'),
('Faran Tahir'),
('Fayssal Bazzi'),
('Fereshte Sarabandi'),
('Fernando Piloni'),
('Fiona Lane'),
('Fiona Shaw'),
('Fionnula Flanagan'),
('Flora Jacob'),
('Florence Kasumba'),
('Florian Munteanu'),
('Fola Evans-Akingbola'),
('Forest Whitaker'),
('Frances Fisher'),
('Frances McDormand'),
('Frances O''Connor'),
('Francesca Romana Bergamo'),
('Francine Bell'),
('Frank Adu'),
('Frank Albertson'),
('Frank Aldridge'),
('Frank Grillo'),
('Frank Oz'),
('Frank Schorpion'),
('Frank Sivero'),
('Frank Vincent'),
('Franz Drameh'),
('Fran√ßois du Bois'),
('Fred Durst'),
('Frederic Forrest'),
('G.D. Spradlin'),
('Gabe McDonnell'),
('Gabriel Basso'),
('Gabriel Bateman'),
('Gabriel Byrne'),
('Gaius Nolan'),
('Gajraj Rao'),
('Gale Hansen'),
('Garret Dillahunt'),
('Garrett Hammond'),
('Garry Shandling'),
('Garth Avery'),
('Gary Houston'),
('Gary Lewis'),
('Gata'),
('Geena Davis'),
('Geeta Agrawal Sharma'),
('Gemma Arterton'),
('Gemma Chan'),
('Gennaro Arena'),
('Geoff Wehner'),
('Geoffrey Rush'),
('George Clooney'),
('George Coulouris'),
('George Georgiou'),
('George Maguire'),
('George Selick'),
('George Shevtsov'),
('George Tokoro'),
('Georgina Haig'),
('Geraldine Somerville'),
('Giancarlo Giannini'),
('Gino Ardito'),
('Glen Powell'),
('Gloria Foster'),
('Gloria Stuart'),
('Grace Caroline Currey'),
('Grace Delaney'),
('Grady Wilson'),
('Graham Greene'),
('Graham McTavish'),
('Graham Norton'),
('Greg Hatton'),
('Griffin Dunne'),
('Guido Quaroni'),
('Gurkirtan'),
('Guy Boyd'),
('Guy Pearce'),
('Hadley Robinson'),
('Halle Berry'),
('Hamid Masoumi'),
('Hanna Huffman'),
('Harold Gervais'),
('Harriet Leitch'),
('Harriet Walter'),
('Harris Dickinson'),
('Harris Yulin'),
('Harrison Ford'),
('Harrison Nell'),
('Harrison Taylor'),
('Harry Cohn'),
('Harry Dean Stanton'),
('Harry Lawtey'),
('Harry Melling'),
('Harssh Singh'),
('Harve Presnell'),
('Harvey Guill√©n'),
('Hasan Minhaj'),
('Hayden Christensen'),
('Hayley Atwell'),
('Hayley McFarland'),
('Haylie Hansen'),
('Hedy Nasser'),
('Helen Thomson'),
('Helena Howard'),
('Helena Hu'),
('Helmut Bakaitis'),
('Henry Blasingame'),
('Henry Czerny'),
('Henry Eikenberry'),
('Henry Fonda'),
('Henry Thomas'),
('Hiam Abbass'),
('Hiroki Doi'),
('Hiroko Maruyama'),
('Hitoshi Takagi'),
('Hokuto Matsumura'),
('Homayoun Ershadi'),
('Hong Chau'),
('Hossein Ahamdloo'),
('Hugh Fink'),
('Hugh Quarshie'),
('Hugo Stanger'),
('Humphrey Bogart'),
('Hunter Burke'),
('Hunter Carson'),
('Hunter Schafer'),
('Ian Bliss'),
('Ian Dolley'),
('Ian Foreman'),
('Ian Hanmore'),
('Ian Hart'),
('Ian Kelly'),
('Ian McDiarmid'),
('Ian McKellen'),
('Ian McShane'),
('Ilham Aliyev'),
('Ilkka Koivula'),
('Iman Vellani'),
('Ingrid Bergman'),
('Ingrid Bisu'),
('Ingrid Torelli'),
('Ion Gheorghe'),
('Irene Keng'),
('Iris Apatow'),
('Isaach De Bankol√©'),
('Isabella Rossellini'),
('Isaiah Mustafa'),
('Isla Johnston'),
('Issei Takahashi'),
('Ivan Shvedoff'),
('Ivar Brogger'),
('J. Jay Saunders'),
('Jacek Koman'),
('Jack Barton'),
('Jack Black'),
('Jack Haven'),
('Jack Huston'),
('Jack Klugman'),
('Jack Nicholson'),
('Jack O''Connell'),
('Jack Warden'),
('Jackie Flynn'),
('Jackie Sawiris'),
('Jackson Frazer'),
('Jacob Batalon'),
('Jacob Elordi'),
('Jacob Lofland'),
('Jacob Stringer'),
('Jadyn Malone'),
('Jaeden Martell'),
('Jaime King'),
('Jaimie Alexander'),
('Jake Brown'),
('Jake Lloyd'),
('Jakob H√∏jlev J√∏rgensen'),
('Jakub Gasowski'),
('James Badge Dale'),
('James Biberi'),
('James Cromwell'),
('James Earl Jones'),
('James Franco'),
('James Nesbitt'),
('James Parks'),
('James Phelps'),
('James Ransone'),
('James Rebhorn'),
('James Spader'),
('James Waterston'),
('James Williams'),
('Jamie Demetriou'),
('Jane Lynch'),
('Janelle James'),
('Janet Carter'),
('Janet Leigh'),
('Janina Elkin'),
('Jared Abrahamson'),
('Jared Leto'),
('Jarvis Cocker'),
('Jasmine Anders'),
('Jasmine Jessica Anthony'),
('Jason Boyd'),
('Jason Fuchs'),
('Jason William Day'),
('Jay Baruchel'),
('Jay Ryan'),
('Jayme Lawson'),
('Jaynee-Lynne Kinchen'),
('Jean Smart'),
('Jean-Claude Van Damme'),
('Jeannine Cota'),
('Jed Brophy'),
('Jeff Bridges'),
('Jeff Kahn'),
('Jeff Wolfe'),
('Jefferson White'),
('Jen Tullock'),
('Jenifer Lewis'),
('Jenna Davis'),
('Jenna Ortega'),
('Jennifer Coolidge'),
('Jennifer Garner'),
('Jennifer Grey'),
('Jennifer Jason Leigh'),
('Jennifer Saunders'),
('Jennifer Schwalbach Smith'),
('Jens Hult√©n'),
('Jeremy Allen White'),
('Jerry Minor'),
('Jerry Stiller'),
('Jesper Christensen'),
('Jessica Alba'),
('Jessica Gunning'),
('Jessica Hynes'),
('Jessica Makinson'),
('Jessica Williams'),
('Jett Klyne'),
('Ji Dae-han'),
('Jignesh Bhatt'),
('Jim Broadbent'),
('Jim Cummings'),
('Jim Kaplan'),
('Jim Lehrer'),
('Jim Norton'),
('Jim Varney'),
('Jimi the Quiff'),
('Jimmy Gardner'),
('Jimmy Smits'),
('Jingchu Zhang'),
('Joan Brown'),
('Joan Cusack'),
('Joan Mcshane'),
('Joe Pantoliano'),
('Joe Pesci'),
('Joe Pingue'),
('Joe Russell'),
('Joe Turkel'),
('Joel Edgerton'),
('Joel Fry'),
('Joel Kim Booster'),
('Joey Harris'),
('Johann Karthaus'),
('John Bach'),
('John Boyega'),
('John C. Reilly'),
('John Cena'),
('John Cleese'),
('John Cusack'),
('John Fiedler'),
('John Gavin'),
('John Goodman'),
('John Heard'),
('John Hodgman'),
('John Howard'),
('John Leguizamo'),
('John Malkovich'),
('John McCrea'),
('John McIntire'),
('John Morris'),
('John Noble'),
('John Stockwell'),
('Johnny Depp'),
('Johnny Flynn'),
('Johnny Hiram Jamison'),
('Johny Lever as'),
('Jon Abrahams'),
('Jon Daly'),
('Jon Favreau'),
('Jonas Armstrong'),
('Jonas Bloquet'),
('Jonathan Bailey'),
('Jonathan Davis'),
('Jonathan Majors'),
('Jonathan Rhys Meyers'),
('Joonas Suotamo'),
('Jordan Mendoza'),
('Jordan Peele'),
('Joseph Behar'),
('Joseph Cotten'),
('Joseph Mussey'),
('Joseph Quinn'),
('Joseph Sweeney'),
('Josh Bonello'),
('Josh Charles'),
('Josh Hutcherson'),
('Josh O''Connor'),
('Josh Quong Tart'),
('Josh Segarra'),
('Joshua Kantara'),
('Joshua Montes'),
('Josip Elic'),
('Jouko Ahola'),
('Judah Friedlander'),
('Judi Dench'),
('Judy Greer'),
('Julia Butters'),
('Julia Louis-Dreyfus'),
('Julia Scarlett Dan'),
('Julian Arahanga'),
('Julian Dennison'),
('Julian Hilliard'),
('Juliana Davies'),
('Julie Andrews'),
('Julie Duck'),
('Julie Lynn Mortensen'),
('Julie Vollono'),
('Julie Walters'),
('Jun Fubuki'),
('Justin Bieber'),
('Justin James Boykin'),
('Justin Kirk'),
('Justin Sturgis'),
('Justin Theroux'),
('Kaden Leos'),
('Kalki Koechlin'),
('Kalman Wilson'),
('Kam-Wah Koo as'),
('Kamal Mirkarimi'),
('Kana Hanazawa'),
('Kang Hye-jeong'),
('Kanon Tani'),
('Karen Takizawa'),
('Kat Dennings'),
('Kate Beahan'),
('Kate Hudson'),
('Kate Siegel'),
('Katelyn Rose Downey'),
('Katherine Heigl'),
('Katherine Waterston'),
('Kathryn Hahn'),
('Kathryn Hunter'),
('Kathryn Newton'),
('Katie Couric'),
('Katie Sarife'),
('Katy Mixon Greer'),
('Katy O''Brian'),
('Kaylee Hottle'),
('Kayvan Novak'),
('Kazem Asqarpoor'),
('Kazuhiko Inoue'),
('Kazuko Shibata'),
('Kazuko Yoshiyuki'),
('Kazumi Nozaki'),
('Kazushige Nagashima'),
('Kazuyoshi Minamimagoe'),
('Keiju Kobayashi'),
('Keiko Takeshita'),
('Keisha Castle-Hughes'),
('Keith Arthur Bolden'),
('Kelly Asbury'),
('Kelly Lai Chen'),
('Kelly Macdonald'),
('Kelly McGillis'),
('Kelly Reilly'),
('Kelsey Grammer'),
('Kelvin Harrison Jr.'),
('Ken Davitian'),
('Ken Stott'),
('Kenneth Branagh'),
('Kenneth Lonergan'),
('Kenny Baker'),
('Kenzie Caplan'),
('Keon Alexander'),
('Keri Russell'),
('Kerry O''Malley'),
('Kerry Washington'),
('Kevin Guthrie'),
('Kevin J. Flynn'),
('Kick Gurry'),
('Kim Byeong-Ok'),
('Kirby Howell-Baptiste'),
('Kirk Fox'),
('Kirti Kulhari'),
('Kiyoshi Yanagawa');

GO
INSERT INTO Actors (ActorName) VALUES
('Koba Hayashi'),
('Kodi Smit-McPhee'),
('Kotaro Daigo'),
('Kotone Hanase'),
('Kris Hitchen'),
('Kristin Goddard'),
('Kristin Rudr√ºd'),
('Kuldeep Sharma'),
('Kurt Russell'),
('Kurt Schweickhardt'),
('Kurtwood Smith'),
('Kyla Deaver'),
('Kyle Mooney'),
('K√¥ Shibasaki'),
('K√¥z√¥ Hashida'),
('Lacey Chabert'),
('Lachlan Watson'),
('Lachy Hulme'),
('Lady Gaga'),
('Lambert Wilson'),
('Lan Fendors'),
('Lance Reddick'),
('Larissa Kokernot'),
('Larry the Cable Guy'),
('Lashana Lynch'),
('Laura Benanti'),
('Laura Dern'),
('Laura Gordon'),
('Laura Harrier'),
('Lauren Acala'),
('Lauren Esposito'),
('Lauren Ridloff'),
('Lauren Stewart'),
('Lee Braithwaite'),
('Lee Ingleby'),
('Lee J. Cobb'),
('Lee Pace'),
('Leer Leary'),
('Len Cariou'),
('Lena Waithe'),
('Lenny Henry'),
('Leon Russom'),
('Lesley Manville'),
('Leslie Bibb'),
('Leslie Lowe'),
('Leslie Stefanson'),
('Leslie Uggams'),
('Letitia Wright'),
('Lex Scott Davis'),
('Lia Beldam'),
('Lia McHugh'),
('Liam Hemsworth'),
('Liam Neeson'),
('Lili Taylor'),
('Lilli Falk'),
('Lily-Rose Depp'),
('Linda Fiorentino'),
('Lindsay Lohan'),
('Lindsey Jordan'),
('Lindsey Normington'),
('Lionel Boyce'),
('Lisa Adam'),
('LisaGay Hamilton'),
('Liv Tyler'),
('Liza Col√≥n-Zayas'),
('Liza Sadovy'),
('Liza Soberano'),
('Lizzy Caplan'),
('Lloyd Hutchinson'),
('Lochlyn Munro'),
('Lorenzo Acquaviva'),
('Lou Beatty Jr.'),
('Lou Ferrigno'),
('Louis Herthum'),
('Lucian Msamati'),
('Luciane Buchanan'),
('Lucy Briers'),
('Luenell'),
('Luis Noah Witte'),
('Luke Bracey'),
('Luke Kirby'),
('Luke Tennie'),
('Lukita Maxwell'),
('Lulu Wilson'),
('Luna Sof√≠a Miranda'),
('Lupita Nyong''o'),
('L√©ontine d''Oncieu'),
('Machiko Washio'),
('Madaline Riley'),
('Madeleine Lebeau'),
('Madeleine McGraw'),
('Madison Eginton'),
('Madison Iseman'),
('Madison Skyy Polan'),
('Madison Wolfe'),
('Mae Anglim'),
('Maggie Cheung'),
('Maggie Q'),
('Maggie Smith'),
('Mahie Gill'),
('Maika Monroe'),
('Maiko Kayama'),
('Maila Hosie'),
('Maisie Ayres'),
('Maja Bloom'),
('Mal Day'),
('Mallory Bechtel'),
('Man-Lei Chan'),
('Manoj Bakshi'),
('Manuel Vieru'),
('Marcela Codrea'),
('Marcin Dorocinski'),
('Marcus Chong'),
('Margherita Buy'),
('Margot Leicester'),
('Mari Natsuki'),
('Maria Doyle Kennedy'),
('Maria Frangos'),
('Marielle Heller'),
('Marisol Ramirez'),
('Marissa Bode'),
('Mark Arnold'),
('Mark Bramhall'),
('Mark Dacascos'),
('Mark Ettlinger'),
('Mark Eydelshteyn'),
('Mark Hamill'),
('Mark Lewis Jones'),
('Mark O''Brien'),
('Mark Rendall'),
('Mark Strong'),
('Mark Williams'),
('Marko Zaror'),
('Marlon Wayans'),
('Marquita Brooks'),
('Martin Balsam'),
('Martin Ferrero'),
('Martin Starr'),
('Martin Stringer'),
('Marton Csokas'),
('Mary Alice'),
('Mary Elizabeth Mastrantonio'),
('Mary Joe Fernandez'),
('Mary McDonnell'),
('Maryanne Frost'),
('Masahiro Kanetake'),
('Masaki Suda'),
('Masaki Terasoma'),
('Masashi Hirose'),
('Masayo Sakai'),
('Mason Gooding'),
('Matt Carver'),
('Matt Doran'),
('Matt McFarland'),
('Matt Ross'),
('Matthew Braden Stringer'),
('Matthew Broderick'),
('Matthew Mason'),
('Matthew Sim'),
('Matthew Sunderland'),
('Matty Matheson'),
('Maude Apatow'),
('Maurice Page'),
('Maurizio Lombardi'),
('Max Cullen'),
('Max Kasch'),
('Max von Sydow'),
('Maximiliano Hern√°ndez'),
('Maya Rudolph'),
('Mckenna Grace'),
('Meagen Fay'),
('Meat Loaf'),
('Medusa Knopf'),
('Megan Fox'),
('Megan Mieduch'),
('Mei Kazuki'),
('Mekki Leeper'),
('Melanie Harrison'),
('Melissa Benoist'),
('Meng''er Zhang'),
('Mia Artemis'),
('Mia Goth'),
('Michael B. Jordan'),
('Michael Berryman'),
('Michael Bowen'),
('Michael Chernus'),
('Michael Cimino'),
('Michael Clarke Duncan'),
('Michael Douglas'),
('Michael Doven'),
('Michael Gambon'),
('Michael Ironside'),
('Michael Jeter'),
('Michael Madsen'),
('Michael Monroe'),
('Michael Nyqvist'),
('Michael Patrick McGill'),
('Michael Provost'),
('Michael Rooker'),
('Michael Stuhlbarg'),
('Michael Urie'),
('Michael Wallis'),
('Michael Wildman'),
('Michaelia Carroll'),
('Michelle Choi-Lee'),
('Michelle Fairley'),
('Michelle Pfeiffer'),
('Mickey Rourke'),
('Mike Faist'),
('Mike Myers'),
('Mike Sears'),
('Mike Starr'),
('Mikey Madison'),
('Milena Konstantinova'),
('Miles Caton'),
('Miles Jupp'),
('Miles Teller'),
('Milla Jovovich'),
('Millicent Simmonds'),
('Millie Kent'),
('Milly Shapiro'),
('Minami Takayama'),
('Mindy Kaling'),
('Mir Hossein Noori'),
('Miranda Cosgrove'),
('Miranda Otto'),
('Miriam Colon'),
('Miroslav Tolj'),
('Miyu Irino'),
('Moana Williams'),
('Mohan Kapur'),
('Moises Arias'),
('Mone Kamishiraishi'),
('Monica Bellucci'),
('Morgan Lund'),
('Morli Patel'),
('Moses Ingram'),
('Mosi Eagle'),
('Motaz Malhees'),
('Mwako Cumbuka'),
('Myha''la'),
('NULL'),
('Nada Despotovich'),
('Nafise Jafar-Mohammadi'),
('Naheem Garcia'),
('Nana Mori'),
('Nanoka Hara'),
('Naomi Ackie'),
('Naomie Harris'),
('Nat Buchanan'),
('Nat Faxon'),
('Natalie Morales'),
('Natalie Portman'),
('Nate Lang'),
('Nathan Lee Graham'),
('Nava Mau'),
('Ned Beatty'),
('Neil Flynn'),
('Nele Ahrensmeier'),
('Nelson Lee'),
('Nhev Scharrel'),
('Niamh Cusack'),
('Nick Kellington'),
('Nicolae Gheorghe'),
('Nicolas Cage'),
('Nicole DeHuff'),
('Nicole Kidman'),
('Nina Sosanya'),
('Nirvan Patnaik'),
('Nitanshi Goel'),
('Nobunaga Shimazaki'),
('Noel Appleby'),
('Noelle Sheldon'),
('Noriko Hidaka'),
('Norman Lloyd'),
('O-T Fagbenle'),
('Oakes Fegley'),
('Oh Dal-su'),
('Oh Tae-kyung'),
('Okieriete Onaodowan'),
('Ola Rapace'),
('Olek Krupa'),
('Olga Kurylenko'),
('Olha Bosova'),
('Oliver Alexander'),
('Oliver Ford Davies'),
('Oliver Phelps'),
('Olivia DeJonge'),
('Olivier Martinez'),
('Omer Barnea'),
('Omi Vaidya'),
('Orlando Bloom'),
('Oscar Wilson'),
('Owen Wilson'),
('Pam Ferris'),
('Pam Grier'),
('Pamela Anderson'),
('Pankaj Sharma'),
('Paola Andino'),
('Parakh Madan'),
('Park Seo-joon'),
('Patricia Arquette'),
('Patricia Hitchcock'),
('Patricia Velasquez'),
('Patrick Griffin'),
('Patrick McAuley'),
('Patrick Warburton'),
('Patsy Ferran'),
('Paul Bettany'),
('Paul Birchard'),
('Paul Dooley'),
('Paul F. Tompkins'),
('Paul Giamatti'),
('Paul Henreid'),
('Paul Low-Hang'),
('Paul Newman'),
('Paul Raci'),
('Paul Reiser'),
('Paul Shenar'),
('Paul Soles'),
('Paul Sorvino'),
('Paul Stewart'),
('Paul Walter Hauser');

GO
INSERT INTO Actors (ActorName) VALUES
('Paul Weissman'),
('Paula Arundell'),
('Paula Malcomson'),
('Paula Patton'),
('Paulie Litt'),
('Paulyn Sun'),
('Peggy Lu'),
('Pen√©lope Cruz'),
('Pernilla August'),
('Pete Davidson'),
('Peter Boyle'),
('Peter Brocco'),
('Peter Dager'),
('Peter Dennis'),
('Peter Hans Benson'),
('Peter Hudson'),
('Peter Lorre'),
('Peter Mayhew'),
('Peter Mensah'),
('Peter Sarsgaard'),
('Peter Stormare'),
('Phil Biedron'),
('Philip Moon'),
('Philip Seymour Hoffman'),
('Philip Stone'),
('Philip Zhao'),
('Philippa Coulthard'),
('Phoebe Waller-Bridge'),
('Phoenix Raei'),
('Phylicia Rashad'),
('Phyllis George'),
('Pierre Coffin'),
('Ping-Lam Siu'),
('Poppy Corby-Tuech'),
('Pramode Kumar'),
('Pratibha Ranta'),
('Puja Sarup'),
('Questlove'),
('Quinta Brunson'),
('Rachael Huntley'),
('Rachel Blackman'),
('Rachel House'),
('Rachel Mittelman'),
('Rachel Stubington'),
('Rachel Weisz'),
('Rachel Zegler'),
('Rachna Gupta'),
('Rahul Kohli'),
('Ralph Ineson'),
('Ramy Youssef'),
('Raquel Castro'),
('Ravi Kishan'),
('Ray Anthony'),
('Ray Collins'),
('Ray Liotta'),
('Ray Nicholson'),
('Ray Stevenson'),
('Ray Winstone'),
('Raymond Cruz'),
('Ra√∫l Castillo'),
('Rebecca Pan'),
('Reed Birney'),
('Reese Hartwig'),
('Reese Witherspoon'),
('Reiko Suzuki'),
('Remmie Milner'),
('Remy Hii'),
('Reza Naji'),
('Rhoda Griffis'),
('Rhoda Pell'),
('Rhys Auteri'),
('Riccardo Scamarcio'),
('Richard Armitage'),
('Richard Attenborough'),
('Richard Ayoade'),
('Richard Carter'),
('Richard E. Grant'),
('Richard Esteras'),
('Richard Gadd'),
('Richard Griffiths'),
('Richard Harris'),
('Richard Jenkins'),
('Richard Macklin'),
('Richard Madden'),
('Richard Roxburgh'),
('Richie Cotterell'),
('Rick Derby'),
('Rick Gomez'),
('Rick Rossovich'),
('Riki Lindhome'),
('Riley Stiles'),
('Rob Corddry'),
('Rob Delaney'),
('Robbie Coltrane'),
('Robert Bailey Jr.'),
('Robert Forster'),
('Robert Klein'),
('Robert Loggia'),
('Robert Pattinson'),
('Robert Redford'),
('Robert Sean Leonard'),
('Robert Smigel'),
('Robin Wright'),
('Rodger Boyce'),
('Rodrigo Luzzi'),
('Roman Christou'),
('Ron Funches'),
('Ron Lea'),
('Ron Livingston'),
('Ron Smyck'),
('Ronnie Gene Blevins'),
('Ronnie Le Drew'),
('Rony Kramer'),
('Rory Kinnear'),
('Rosa Gotzler'),
('Rosanna Arquette'),
('Rose Byrne'),
('Rosemary Harris'),
('Ross Kimball'),
('Roy Jenkins'),
('Ruairi O''Connor'),
('Ruby Rose'),
('Rudy Eisenzopf'),
('Rumi Hiiragi'),
('Rupert Everett'),
('Rupert Grint'),
('Russell Brand'),
('Ruth Warrick'),
('Ryder Chasin'),
('Ryo Narita'),
('Ryohei Kimura'),
('Ryuichiro Baba'),
('Ry√ªnosuke Kamiki'),
('S.Z. Sakall'),
('Saagar Shaikh'),
('Sabet Choudhury'),
('Sade Katarina'),
('Sadie Soverall'),
('Sadwyn Brophy'),
('Saeko Kimura'),
('Safar Ali Moradi'),
('Sairi It√¥'),
('Sakina Jaffrey'),
('Sakura Kiryu'),
('Sala Baker'),
('Sally Wingert'),
('Salma Hayek'),
('Sam Berry'),
('Sam Bottoms'),
('Sam Claflin'),
('Sam Comery'),
('Sam Neill'),
('Sam Redford'),
('Samantha Mathis'),
('Samantha Morton'),
('Samantha Sloyan'),
('Samara Lee'),
('Samson Kayo'),
('Samuel Blenkin'),
('Samuli Edelmann'),
('Sandino Moya-Smith'),
('Sandra Ellis Lafferty'),
('Sandra H√ºller'),
('Sandra Teles'),
('Santiago Cabrera'),
('Sarah Catherine Hook'),
('Sarah Desjardins'),
('Sarah Stafford'),
('Satendra Soni'),
('Satwant Kaur'),
('Saul Williams'),
('Saunders Triplets'),
('Sawako Agawa'),
('Sayaka √îhara'),
('Sayed Badreya'),
('Sa√Ød Taghmaoui'),
('Scatman Crothers'),
('Scott Adkins'),
('Scott Goldman'),
('Scott Innes'),
('Scott MacArthur'),
('Scott Wilson'),
('Sean Astin'),
('Sean Dino Johnson'),
('Sean Harris'),
('Sean Patrick Thomas'),
('Sean San Jose'),
('Sebastian Croft'),
('Sebastian Hansen'),
('Sebastian Shaw'),
('Security Guard'),
('Sei Hiraizumi'),
('Seung-shin Lee'),
('Seyed Karym Alikhani'),
('Shahadi Wright Joseph'),
('Shalom Brune-Franklin'),
('Shalom Harlow'),
('Shane McRae'),
('Shane T Harris'),
('Shanley Caswell'),
('Shannon Kook'),
('Shaun Toub'),
('Shauna Rappold'),
('Shawn Wayans'),
('Shelley Duvall'),
('Sheryl Lee Ralph'),
('Shigeru Muroi'),
('Shigeru Tsuyuguchi'),
('Shigesato Itoi'),
('Shreya Chaudhry'),
('Shreyas Jadhav'),
('Sh√¥ta Sometani'),
('Siddhartha Basu'),
('Sienna Miller'),
('Simon Abkarian'),
('Simon Delaney'),
('Simon McBurney'),
('Simon Oakland'),
('Simon Prast'),
('Simu Liu'),
('Sinclair Daniel'),
('Sky du Mont'),
('Socorro Valdez'),
('Sof√≠a Vergara'),
('Soma Santoki'),
('Sophia Carnabuci'),
('Sophie Thatcher'),
('Sparsh Shrivastava'),
('Spencer Pickren'),
('Spencer Treat Clark'),
('Stan Grant'),
('Stanley Simons'),
('Stanley Tucci'),
('Stephanie Kurtzuba'),
('Stephanie March'),
('Stephanie Sigman'),
('Stephanie Styles'),
('Stephanie Szostak'),
('Stephen Graham'),
('Stephen Hunter'),
('Sterling K. Brown'),
('Steve Bastoni'),
('Steve Bisley'),
('Steve Buscemi'),
('Steve Coogan'),
('Steve Coulter'),
('Steve Mouzakis'),
('Steven Bauer'),
('Stockton Taylor'),
('Storm Reid'),
('Suanne Spoke'),
('Sue Clark'),
('Sumi Shimamoto'),
('Susan Berger'),
('Susan Pingleton'),
('Suzanne Bertish'),
('Sydney Greenstreet'),
('Sydney Pollack'),
('Sydney Sweeney'),
('Sylvester Stallone'),
('Sylvia Hoeks'),
('T''Nia Miller'),
('T.J. Miller'),
('Tadanobu Asano'),
('Taissa Farmiga'),
('Takashi Nait√¥'),
('Takashi Tachibana'),
('Take'),
('Takehiro Hira'),
('Takunda Khumalo'),
('Takuya Kimura'),
('Talitha Eliana Bateman'),
('Tandi Wright'),
('Tanie Kitabayashi'),
('Tanveer K. Atwal'),
('Tara Reid'),
('Tasha Lim'),
('Tatsuya Gash√ªin'),
('Taylor St. Clair'),
('Ted Levine'),
('Ted McGinley'),
('Temuera Morrison'),
('Tenaj L. Jackson'),
('Tenoch Huerta'),
('Terence Stamp'),
('Teri Garr'),
('Teri Hatcher'),
('Teri Polo'),
('Tess Harper'),
('Teyonah Parris'),
('The Kid Laroi'),
('Thomas Brodie-Sangster'),
('Thomas Coombes'),
('Thomas Loibl'),
('Thomas Middleditch'),
('Tilda Swinton'),
('Tim Allen'),
('Tim Bentinck'),
('Tim Blake Nelson'),
('Tim Heidecker'),
('Tim Meadows'),
('Tim Robbins'),
('Timothy Olyphant'),
('Timothy Spall'),
('Tobey Maguire'),
('Tobias Segal'),
('Toby Jones'),
('Toby Leonard Moore'),
('Todd Field'),
('Todd Rippon'),
('Tom Blyth'),
('Tom Burke'),
('Tom Clarke Hill'),
('Tom Cruise'),
('Tom Holland'),
('Tom Hollander'),
('Tom Lister Jr.'),
('Tom McCarthy'),
('Tom McLaren'),
('Tom Sizemore'),
('Tom Skerritt'),
('Tommy Chong'),
('Tommy Lee Jones'),
('Tomoko Naraoka'),
('Tomoko Yamaguchi'),
('Tom√°s Paredes'),
('Toni Trucks'),
('Tony Amendola'),
('Tony Burton'),
('Tony Darrow'),
('Tony Denman'),
('Tony Hale'),
('Tony Revolori'),
('Tony Shalhoub'),
('TopActors0'),
('TopActors1'),
('TopActors2'),
('TopActors3'),
('TopActors4'),
('TopActors5'),
('TopActors6'),
('TopActors7'),
('TopActors8'),
('TopActors9'),
('Topher Grace'),
('Tramell Tillman'),
('Trey Parker'),
('Trina LaFargue'),
('Trisha LaFache'),
('Tristan Tait'),
('Tsubasa Honda'),
('Tsutomu Tatsumi'),
('Tung Cho ''Joe'' Cheung'),
('Ty Burrell'),
('Ty Simpkins'),
('Tye Sheridan'),
('Tyler James Williams'),
('T√≥mas Lemarquis'),
('Uli Latukefu'),
('Urmila Matondkar'),
('Val Kilmer'),
('Valentine Newcomer'),
('Valerie Azlynn'),
('Valerie Berry'),
('Vanessa Burghardt'),
('Vanessa Redgrave'),
('Vaughn Taylor'),
('Vera Farmiga'),
('Vera Miles'),
('Verna Bloom'),
('Verneri Lilja'),
('Veronica Clifford'),
('Vibha Chhibber'),
('Vicki Pepperdine'),
('Vicky Krieps'),
('Victor Argo'),
('Victor Chavez'),
('Victor Garber'),
('Victoria Hall'),
('Ville Virtanen'),
('Vilma Sz√©csi'),
('Vince Colosimo'),
('Vince Pisani'),
('Vince Vaughn'),
('Vincent Cassel'),
('Vincent Radwinsky'),
('Violet McGraw'),
('Vittorio Viviani'),
('Viva'),
('Vladimir Mashkov'),
('Wah Yuen'),
('Wallace Wolodarsky'),
('Walt Dohrn'),
('Walter Lewis'),
('Ward Horton'),
('Warwick Davis'),
('Wayne Knight'),
('Wendy Vanden Heuvel'),
('Wes Bentley'),
('Wes Studi'),
('Will Gibson'),
('Will Sharpe'),
('Willa Fitzgerald'),
('William Alland'),
('William Duell'),
('William H. Macy'),
('William Hurt'),
('William Jackson Harper'),
('William Kircher'),
('William Mace'),
('William Smillie'),
('William Stanford Davis'),
('Willow Shields'),
('Win Morisaki'),
('Wolf Roth'),
('Wood Harris'),
('Wyatt Oleff'),
('Xochitl Gomez'),
('Yao'),
('Yasuko Sawaguchi'),
('Yoko Honna'),
('Yoo Ji-tae'),
('Yoo Yeon-seok'),
('Yoon Jin-seo'),
('Yorie Yamashita'),
('Yoshiko Shinohara'),
('Yoshimi Nakajima'),
('Yoshino Kimura'),
('Yoshio Matsuoka'),
('Yuki Kura'),
('Yumi Tamai'),
('Yura Borisov'),
('Yuria Nara'),
('Y√¥ √îizumi'),
('Y√ªki Amami'),
('Y√ªki Ked√¥in'),
('Zach Cherry'),
('Zach Gilford'),
('Zach Grenier'),
('Zachary Golinger'),
('Zachary Levi'),
('Zack Fox'),
('Zara Phythian'),
('Zawe Ashton'),
('Zoe Salda√±a'),
('Zoey Deutch'),
('√Ångel Salazar'),
('Kam-Wah Koo');






GO 

-- Movies 


INSERT INTO Movies(Title,ReleaseDate,IMDB_Rating,MovieLength,Language,Type,Synopsis,MoviePosterLink,MovieBackdropLink,Awards,BoxOffice,MPAA_Rating) VALUES
 ('There''s Something About Mary','15 Jul 1998',7.1,'119 minutes','English','Movie','Ted was a geek in high school, who was going to go to the prom with one of the most popular girls in school, Mary. The prom date never happened, because Ted had a very unusual accident. Thirteen years later he realizes he is still in love with Mary, so he hires a private investigator to track her down. That investigator discovers he too may be in love with Mary, so he gives Ted some false information to keep him away from her. But soon Ted finds himself back into Mary''s life, as we watch one funny scene after another.','https://image.tmdb.org/t/p/original/kdT3Wwc11GOHorMA4SLqJzG8NJ4.jpg','https://image.tmdb.org/t/p/original/egJQ3nIon5fT8wyXcKRHzvmtZpD.jpg','17 wins & 17 nominations total','$176,484,651','R')
,('Do the Right Thing','14 Jun 1989',8,'120 minutes','English, Italian, Spanish, Korean','Movie','This film looks at life in the Bedford-Stuyvesant district of Brooklyn on a hot summer Sunday. As he does everyday, Sal Fragione opens the pizza parlor he''s owned for 25 years. The neighborhood has changed considerably in the time he''s been there and is now composed primarily of African-Americans and Hispanics. His son Pino hates it there and would like nothing better than to relocate the eatery to their own neighborhood. For Sal however, the restaurant represents something that is part of his life and sees it as a part of the community. What begins as a simple complaint by one of his customers, Buggin Out - who wonders why he has only pictures of famous Italian-Americans on the wall when most of his customers are black - eventually disintegrates into violence as frustration seemingly brings out the worst in everyone.','https://image.tmdb.org/t/p/original/63rmSDPahrH7C1gEFYzRuIBAN9W.jpg','https://image.tmdb.org/t/p/original/v3XlaCNJxJLxby4RAc9gAHEXIe1.jpg','Nominated for 2 Oscars. 21 wins & 19 nominations total','$27,545,445','R')
,('Joker','04 Oct 2019',8.3,'122 minutes','English, German','Movie','A socially inept clown for hire - Arthur Fleck aspires to be a stand up comedian among his small job working dressed as a clown holding a sign for advertising. He takes care of his mother, Penny Fleck, and as he learns more about his mental illness, he learns more about his past. Dealing with all the negativity and bullying from society, he heads downwards on a spiral, in turn showing how his alter ego, "Joker," came to be.','https://image.tmdb.org/t/p/original/udDclJoHjfjb8Ekgsd4FDteOkCU.jpg','https://image.tmdb.org/t/p/original/n6bUvigpRFqSwmPp1m2YADdbRBc.jpg','Won 2 Oscars. 121 wins & 247 nominations total','$335,477,657','R')
,('Mad Max: Fury Road','22 May 2015',8.1,'120 minutes','English, Russian','Movie','An apocalyptic story set in the furthest reaches of our planet, in a stark desert landscape where humanity is broken, and almost everyone is crazed fighting for the necessities of life. Within this world exist two rebels on the run who just might be able to restore order. There''s Max, a man of action and a man of few words, who seeks peace of mind following the loss of his wife and child in the aftermath of the chaos. And Furiosa, a woman of action and a woman who believes her path to survival may be achieved if she can make it across the desert back to her childhood homeland.','https://image.tmdb.org/t/p/original/hA2ple9q4qnwxp3hKVNhroipsir.jpg','https://image.tmdb.org/t/p/original/gqrnQA6Xppdl8vIb2eJc58VC1tW.jpg','Won 6 Oscars. 245 wins & 233 nominations total','$154,280,290','R')
,('The Fall Guy','24 Apr 2024',6.8,'126 minutes','English','Movie','He''s a stuntman, and like everyone in the stunt community, he gets blown up, shot, crashed, thrown through windows and dropped from the highest of heights, all for our entertainment. And now, fresh off an almost career-ending accident, this working-class hero has to track down a missing movie star, solve a conspiracy and try to win back the love of his life while still doing his day job. What could possibly go right?','https://image.tmdb.org/t/p/original/e7olqFmzcIX5c23kX4zSmLPJi8c.jpg','https://image.tmdb.org/t/p/original/H5HjE7Xb9N09rbWn1zBfxgI8uz.jpg','13 wins & 37 nominations total','$92,900,355','PG-13')
,('Monkey Man','03 Apr 2024',6.8,'121 minutes','English, Hindi','Movie','Inspired by the legend of Hanuman, an icon embodying strength and courage, Kid is an anonymous young man who ekes out a meager living in an underground fight club. There, night after night, he wears a gorilla mask and is beaten bloody by more popular fighters for cash. After years of suppressed rage, Kid discovers a way to infiltrate the enclave of the city''s sinister elite. As his childhood trauma boils over, his mysteriously scarred hands unleash an explosive campaign of retribution to settle the score with the men who took everything from him.','https://image.tmdb.org/t/p/original/4lhR4L2vzzjl68P1zJyCH755Oz4.jpg','https://image.tmdb.org/t/p/original/9NSXdVHeSfSHUv49OzLispFcpz1.jpg',NULL,NULL,NULL)
,('Singin'' in the Rain','10 Apr 1952',8.3,'103 minutes','English','Movie','1927 Hollywood. Monumental Pictures'' biggest stars, glamorous on-screen couple Lina Lamont and Don Lockwood, are also an off-screen couple if the trade papers and gossip columns are to be believed. Both perpetuate the public perception if only to please their adoring fans and bring people into the movie theaters. In reality, Don barely tolerates her, while Lina, despite thinking Don beneath her, simplemindedly believes what she sees on screen in order to bolster her own stardom and sense of self-importance. R.F. Simpson, Monumental''s head, dismisses what he thinks is a flash in the pan: talking pictures. It isn''t until The Jazz Singer (1927) becomes a bona fide hit which results in all the movie theaters installing sound equipment that R.F. knows Monumental, most specifically in the form of Don and Lina, have to jump on the talking picture bandwagon, despite no one at the studio knowing anything about the technology. Musician Cosmo Brown, Don''s best friend, gets hired as Monumental''s ideas man and musical director. And by this time, Don has secretly started dating Kathy Selden, a chorus girl who is trying to make it big in pictures herself. Don and Kathy''s relationship is despite their less than friendly initial meeting. Cosmo and Kathy help Don, who had worked his way up through the movie ranks to stardom, try make the leap to talking picture stardom, with Kathy following along the way. However, they have to overcome the technological issues. But the bigger problem is Lina, who will do anything to ensure she also makes the successful leap into talking pictures, despite her own inabilities and at anyone and everyone else''s expense if they get in her way, especially Kathy as Don''s off screen girlfriend and possibly his new talking picture leading lady.','https://image.tmdb.org/t/p/original/w03EiJVHP8Un77boQeE7hg9DVdU.jpg','https://image.tmdb.org/t/p/original/6qOyw4yfzbzTp5YsCX26C28Do0S.jpg','Nominated for 2 Oscars. 11 wins & 11 nominations total','$1,884,537','G')
,('Dune: Part Two','27 Feb 2024',8.5,'166 minutes','English','Movie','Paul Atreides unites with Chani and the Fremen while on a warpath of revenge against the conspirators who destroyed his family. Facing a choice between the love of his life and the fate of the known universe, he endeavors to prevent a terrible future only he can foresee.','https://image.tmdb.org/t/p/original/6izwz7rsy95ARzTR3poZ8H6c5pp.jpg','https://image.tmdb.org/t/p/original/xOMo8BRK7PfcJv9JCnx7s5hj0PX.jpg','Won 2 Oscars. 106 wins & 367 nominations total','$282,144,358','PG-13')
,('Meri Pyaari Bindu','11 May 2017',6.1,'117 minutes','Hindi','Movie','Fed up with the lack of critical appreciation despite being a successful writer, Abhimanyu Roy (Ayushmann Khurrana) returns to his roots in Kolkata to write more meaningful literature and decides on an old-fashioned love story - which was now, 3 years in the making. This writer''s block is called Bindu (Parineeti Chopra). How do you contain this unpredictable, crazy, restless, larger than life, live wire in the pages of a book? As Abhi says ''''You know when a song comes on and you just have to dance? Bindu was that song. That silly infectious joyful tune you couldn''t get out of your head - even if you wanted to." So where should he begin? Where should he end? But when Abhi stumbles across an old audio cassette of their favorite playlist, it sends Abhi down memory lane - and as he waltzes in and out of his past and present through the songs in the mixed tape, he finally faces reality and reconnects with his roots, with his family and his novel starts writing itself. Of course, life in its usual scheming manner surprises him yet again and changes the ending of his book and his life, as he once again finds himself being pulled back into the center of that crazy little thing called love. He realizes, that love, is neither time- nor place-dependent. - All we need is the right person next to us and of course the right soundtrack.','https://image.tmdb.org/t/p/original/hKZZiiHuHFopzJwl0JYttRWEzKD.jpg','https://image.tmdb.org/t/p/original/sFN1KnAVJhy5oV0gIEMf3HicxBb.jpg','8 nominations',NULL,'Not Rated')
,('Hasee Toh Phasee','07 Feb 2014',6.8,'141 minutes','Hindi','Movie','Spread across Mumbai over a decade, the film presents the relationship between quirky, rebellious Meeta (Parineeti Chopra) and mischievous Nikhil (Sidharth Malhotra), struggling with their respective families to fit in. Nikhil bumps into Meeta on the occasion of her sister Deeksha''s wedding while Meeta is on the run. He falls in love with Meeta''s sister Karishma on the same day. The film jumps to the eve of Nikhil and Karishma''s engagement. Karishma''s wealthy father, Devesh Solanki, does not approve of Nikhil as he finds him to be a lackadaisical young man. On the day of his engagement, Nikhil promises Karishma that he will prove himself worthy of her within the next seven days. Nikhil is re-introduced to Meeta by Karishma and is instructed to put her up in a hotel. Nikhil recognizes Meeta. In an attempt to please Karishma, he decides to keep Meeta in the flat above his own house, with his crazy extended family. During the course of Meeta''s stay at Nikhil''s house, they get closer to each other and open up to each other. In the midst of this confusion, the truth of relationships is unfolded; the strength of unions is tested and love triumphs.','https://image.tmdb.org/t/p/original/A6s9Nb0bfuH1KqXvnG22FCAgrP7.jpg','https://image.tmdb.org/t/p/original/9XzWOwHn5sKFn0WdBSw56ISk6HN.jpg','3 wins & 16 nominations','$646,035','Not Rated')
,('Wonka','06 Dec 2023',7,'116 minutes','English, Latin, French','Movie','Willy Wonka is the mastermind behind some of the most delicious and innovative chocolate creations the world has ever seen. But before shaking up the chocolate industry and making a name for himself as a confectionery genius, the ambitious young creator had to defy all odds. As a result, Willy transformed his wildest dreams into reality with a bold vision, determination, and unexpected help from new friends. After all, hard work and a dash of magic can make anything happen. Because, as Willy already knows, it only takes a dream to make a difference.','https://image.tmdb.org/t/p/original/qhb1qOilapbapxWQn9jtRCMwXJF.jpg','https://image.tmdb.org/t/p/original/yOm993lsJyPmBodlYjgpPwBjXP9.jpg','Nominated for 1 BAFTA Award3 wins & 42 nominations total','$218,402,312','PG')
,('The Farewell','09 Aug 2019',7.5,'100 minutes','Mandarin, English, Japanese, Italian','Movie','A headstrong Chinese-American woman returns to China when her beloved grandmother is diagnosed with terminal cancer. Billi struggles with her family''s decision to keep grandma in the dark about her own illness as they all stage an impromptu wedding to see grandma one last time.','https://image.tmdb.org/t/p/original/7ht2IMGynDSVQGvAXhAb83DLET8.jpg','https://image.tmdb.org/t/p/original/5INPBiKVRsyp9kgHfsC0cTfvKFH.jpg','Nominated for 1 BAFTA Award37 wins & 194 nominations total','$17,695,781','PG')
,('Thor: Ragnarok','03 Nov 2017',7.9,'130 minutes','English','Movie','Imprisoned on the other side of the universe, the mighty Thor (Chris Hemsworth) finds himself in a deadly gladiatorial contest that puts him against The Incredible Hulk (Mark Ruffalo), his former ally and fellow Avenger. Thor''s quest for survival leads him in a race against time to prevent the all-powerful Hela (Cate Blanchett) from destroying his home world and the Asgardian civilization.','https://image.tmdb.org/t/p/original/rzRwTcFvttcN1ZpX2xv4j3tSdJu.jpg','https://image.tmdb.org/t/p/original/6G2fLCVm9fiLyHvBrccq6GSe2ih.jpg','6 wins & 50 nominations total','$315,058,289','PG-13')
,('The Perfect Date','12 Apr 2019',5.8,'89 minutes','English','Movie','Brooks Rattigan (Noah Centineo) has the academic chops to get into his dream Ivy League school, but he''s missing an outstanding extracurricular--and the money. When he seizes on an opportunity to make some extra cash by posing as the boyfriend of self-assured, combat-boot-loving Celia Lieberman (Laura Marano), he finds that he has a knack for being the perfect stand-in. With his programmer friend Murph (Odiseas Georgiadis), Brooks launches an app selling himself as a plus-one for all occasions. Along the way, he meets the girl of his dreams (Camila Mendes). But when business starts to boom, Brooks must reassess everything of which he was once sure.','https://image.tmdb.org/t/p/original/rrAYdezO3h1mjdYTaQyTXoj8IZ4.jpg','https://image.tmdb.org/t/p/original/tHUzzVwshwidhQxZXj0WzAdKdto.jpg',NULL,NULL,NULL)
,('The Lego Movie','28 Feb 2014',7.7,'100 minutes','English, Turkish','Movie','The LEGO Movie is a 3D animated film which follows lead character, Emmet, a completely ordinary LEGO mini-figure who is identified as the most "extraordinary person" and the key to saving the Lego universe. Emmet and his friends go on an epic journey to stop the evil tyrant, Lord Business.','https://image.tmdb.org/t/p/original/lbctonEnewCYZ4FYoTZhs8cidAl.jpg','https://image.tmdb.org/t/p/original/9531Jp42H0ppRXjkxxgCulnQNZp.jpg','Nominated for 1 Oscar. 72 wins & 67 nominations total','$257,966,122','PG')
,('Gone Girl','01 Oct 2014',8.1,'149 minutes','English','Movie','On the occasion of his fifth wedding anniversary, Nick Dunne reports that his wife, Amy, has gone missing. Under pressure from the police and a growing media frenzy, Nick''s portrait of a blissful union begins to crumble. Soon his lies, deceits and strange behavior have everyone asking the same dark question: Did Nick Dunne kill his wife?','https://image.tmdb.org/t/p/original/ts996lKsxvjkO2yiYG0ht4qAicO.jpg','https://image.tmdb.org/t/p/original/1ufic9NSdolkgNkQSAVjlVp0uqn.jpg','Nominated for 1 Oscar. 64 wins & 188 nominations total','$167,767,189','R')
,('When We First Met','09 Feb 2018',6.4,'97 minutes','English, Mandarin','Movie','Noah thinks he has the perfect first night with Avery, the girl of his dreams, but he gets relegated to the friend zone. He spends the next three years wondering what went wrong--until he gets the unexpected chance to travel back in time and change that night--and his fate--over and over again.','https://image.tmdb.org/t/p/original/pscQKoikkSJxAu8O5LKtjgGJEt1.jpg','https://image.tmdb.org/t/p/original/kZwpxqIXPqNfRigrqF5rN8L54a.jpg',NULL,NULL,'TV-14')
,('Night School','26 Sep 2018',5.6,'111 minutes','English, Spanish, French, Arabic','Movie','In 2001, high-school student Teddy Walker drops out of school when he''s unable to concentrate during a crucial test. In 2018 he works as a barbecue-grill salesman and dates a wealthy woman named Lisa, and has developed a careful financial strategy that allows him to maintain the illusion that he is better off than he actually is. But his life falls apart just as he learns that he will inherit control of the store when the current manager retires: As he proposes to Lisa in the shop, he accidentally triggers an explosion when a champagne cork pops open a gas tank; the manager runs away with the insurance from the explosion. Teddy''s friend is willing to give him a job--if he can earn his GED.','https://image.tmdb.org/t/p/original/uQVIQDc3foTPodZw0ie1Or0CXBn.jpg','https://image.tmdb.org/t/p/original/1dDSULh0SQxCgNdPafbC0gWeIaY.jpg','1 win & 4 nominations total','$77,339,130','PG-13')
,('Don''t Look Up','08 Dec 2021',7.2,'138 minutes','English','Movie','Kate Dibiasky (Jennifer Lawrence), an astronomy grad student, and her professor Dr. Randall Mindy (Leonardo DiCaprio) make an astounding discovery of a comet orbiting within the solar system. The problem - it''s on a direct collision course with Earth. The other problem? No one really seems to care. Turns out warning mankind about a planet-killer the size of Mount Everest is an inconvenient fact to navigate. With the help of Dr. Oglethorpe (Rob Morgan), Kate and Randall embark on a media tour that takes them from the office of an indifferent President Orlean (Meryl Streep) and her sycophantic son and Chief of Staff, Jason (Jonah Hill), to the airwaves of The Daily Rip, an upbeat morning show hosted by Brie (Cate Blanchett) and Jack (Tyler Perry). With only six months until the comet makes impact, managing the 24-hour news cycle and gaining the attention of the social media obsessed public before it''s too late proves shockingly comical - what will it take to get the world to just look up?.','https://image.tmdb.org/t/p/original/th4E1yqsE8DGpAseLiUrI60Hf8V.jpg','https://image.tmdb.org/t/p/original/nvxrQQspxmSblCYDtvDAbVFX8Jt.jpg','Nominated for 4 Oscars. 24 wins & 99 nominations total',NULL,'R')
,('Beef',NULL,8,'30 minutes','English','Series','After an incident in a parking lot, road rage ensues resulting in a bitter feud between the two antagonists. The vendetta between them and the lengths they''ll go to avenge themselves on the other spirals out of control, jeopardising everything and everyone in their lives.','https://image.tmdb.org/t/p/original/4b4v7RnPhNyPEaVGFarEuo74r8W.jpg','https://image.tmdb.org/t/p/original/u7OpeS4eckBSR1wFxFTuyy3FjHE.jpg','Won 8 Primetime Emmys. 52 wins & 59 nominations total',NULL,'TV-MA')
,('Shaun of the Dead','09 Apr 2004',7.9,'99 minutes','English','Movie','Shaun (Simon Pegg) doesn''t have a very good day, so he decides to turn his life around by getting his ex to take him back, but he times it for right in the middle of what may be a zombie apocalypse. But for him, it''s an opportunity to show everyone he knows how useful he is by saving them all. All he has to do is survive, and get his ex back.','https://image.tmdb.org/t/p/original/dgXPhzNJH8HFTBjXPB177yNx6RI.jpg','https://image.tmdb.org/t/p/original/mrdHbaCp3ysDrzUHle5eQlY9Vzu.jpg','Nominated for 3 BAFTA 14 wins & 20 nominations total','$14,461,359','R')
,('Hot Fuzz','16 Feb 2007',7.8,'121 minutes','English','Movie','Top London cop PC Nicholas Angel is good. Too good. To stop the rest of his team looking bad, he is reassigned to the quiet town of Sandford. He is paired with Danny Butterman, who endlessly questions him on the action lifestyle. Everything seems quiet for Angel until two actors are found decapitated. It is called an accident, but Angel won''t accept that, especially when more and more people turn up dead. Angel and Danny clash with everyone while they try to uncover the truth behind the mystery of the apparent "accidents".','https://image.tmdb.org/t/p/original/zPib4ukTSdXvHP9pxGkFCe34f3y.jpg','https://image.tmdb.org/t/p/original/9rMSCFH9zhv1vILpEZQlUJs9iUm.jpg','2 wins & 9 nominations total','$23,637,265','R')
,('The World''s End','18 Jul 2013',6.9,'109 minutes','English','Movie','20 years after attempting an epic pub crawl, five childhood friends reunite when one of them becomes hell bent on trying the drinking marathon again. They are convinced to stage an encore by mate Gary King, a 40-year old man trapped at the cigarette end of his teens, who drags his reluctant pals to their home town and once again attempts to reach the fabled pub, The World''s End. As they attempt to reconcile the past and present, they realize the real struggle is for the future, not just theirs but humankind''s. Reaching The World''s End is the least of their worries.','https://image.tmdb.org/t/p/original/kpglnOBYmKn0AkkWDzGxzKHDbds.jpg','https://image.tmdb.org/t/p/original/stAPkorBeBkvEZ6DQs30Ke4cPyr.jpg','4 wins & 28 nominations total','$26,004,851','R')
,('Charulata','17 Apr 1964',8.1,'117 minutes','Bangla, English','Movie','Charu lives a lonely and idle life in 1870s India. Although her husband Bhupati devotes more time to his newspaper than to their marriage, he sees her loneliness and asks his brother-in-law,Umapada to keep her company. At the same time Bhupati''s own cousin, Amal, a would-be writer comes home finishing his college education. However, after several months, Charu and Amal''s feelings for each other move beyond literary friendship.','https://image.tmdb.org/t/p/original/4kznHLoJGN3OBZunQvZwy26it8z.jpg','https://image.tmdb.org/t/p/original/hXYf2k0igWcfReM98949EVTfSgP.jpg','8 wins & 2 nominations','$77,820','Not Rated')
,('Andhadhun','04 Oct 2018',8.2,'139 minutes','Hindi, English','Movie','Akash a blind pianist is preparing for a London concert.Sophie''s scooter bumps into Akash and upon finding he a pianist she takes him to her restaurant Franco''s run by her father and offers him a job.Akash meets 70s actor Pramod Sinha at the restaurant who asks him to do a private concert of his songs at his residence to surprise his wife Simi. Next Day upon reaching his house a shocking surprise is waiting for Akash.','https://image.tmdb.org/t/p/original/dy3K6hNvwE05siGgiLJcEiwgpdO.jpg','https://image.tmdb.org/t/p/original/ArvKQJv3nEpnBoVyjWDUT7TtJOL.jpg','35 wins & 43 nominations','$1,193,046','Not Rated')
,('Always Be My Maybe','31 May 2019',6.7,'101 minutes','English','Movie','Childhood friends Sasha and Marcus have a falling-out and don''t speak for 15 years. But when Sasha, now a celebrity chef in Los Angeles, returns to her hometown of San Francisco to open a new restaurant, she runs into her old pal--a happily-complacent musician still living at home and working for his dad. Though the two are reluctant to reconnect, they soon find the old sparks--and maybe some new ones?','https://image.tmdb.org/t/p/original/kHp4Fmj2a6mtxKSGtjq44h4xLs9.jpg','https://image.tmdb.org/t/p/original/pjGXREIplQWVpaMxlEuYTwQUGtt.jpg','1 win & 5 nominations total',NULL,'PG-13')
,('A Separation','16 Mar 2011',8.3,'123 minutes','Persian','Movie','Nader (Payman Maadi) and Simin (Leila Hatami) argue about living abroad. Simin prefers to live abroad to provide better opportunities for their only daughter, Termeh. However, Nader refuses to go because he thinks he must stay in Iran and take care of his father (Ali-Asghar Shahbazi), who suffers from Alzheimers. However, Simin is determined to get a divorce and leave the country with her daughter.','https://image.tmdb.org/t/p/original/wQVvASmpm8jGhJBQU20OkoMcNzi.jpg','https://image.tmdb.org/t/p/original/mJrSFyb7uoqiICUmvIIzeOerA5K.jpg','Won 1 Oscar. 88 wins & 52 nominations total','$7,099,055','PG-13')
,('The Salesman','31 Aug 2016',7.7,'124 minutes','Persian, English','Movie','Forced to leave their collapsing house, Ranaa and Emad, an Iranian couple who happen to be performers rehearsing for Arthur Miller''s "Death of a Salesman" rent a new apartment from one of their fellow performers. Unaware of the fact that the previous tenant had been a woman of ill repute having many clients, they settle down. By a nasty turn of events one of the clients pays a visit to the apartment one night while Ranaa is alone at home taking a bath and the aftermath turns the peaceful life of the couple upside down.','https://image.tmdb.org/t/p/original/x4PIuYU5ZMMXiTrheNR8vCTYPBf.jpg','https://image.tmdb.org/t/p/original/woSmQgo1wxE4WRVXWHrmgv3jy2O.jpg','Won 1 Oscar. 15 wins & 32 nominations total','$2,402,067','PG-13')
,('Airplane!','02 Jul 1980',7.7,'88 minutes','English','Movie','Drowning his sorrows after that botched mission during World War II, Ted Striker, a traumatized ex-fighter-pilot with a neurotic fear of flying, still has not gotten over his old flame, flight attendant, Elaine Dickinson. Determined to win her back, Ted boards a domestic flight from Los Angeles to Chicago, only to come face-to-face with a severe case of in-flight food poisoning that is threatening everyone''s lives. With most of the passengers and the entire cockpit crew down with the food-borne illness, Striker must confront his inner demons and take over the control of the ungovernable aircraft with the help of a gruff air-traffic controller and his former commander. Can Ted Striker land the airplane and save the passengers?','https://image.tmdb.org/t/p/original/7Q3efxd3AF1vQjlSxnlerSA7RzN.jpg','https://image.tmdb.org/t/p/original/rpp7XSFsFgaslZB5IqDDdZB9CjR.jpg','Nominated for 1 BAFTA Award3 wins & 7 nominations total','$83,453,539','PG')
,('The Sixth Sense','06 Aug 1999',8.2,'107 minutes','English, Latin, Spanish','Movie','Malcom Crowe (Bruce Willis) is a child psychologist who receives an award on the same night that he is visited by a very unhappy ex-patient. After this encounter, Crowe takes on the task of curing a young boy with the same ills as the ex-patient (Donnie Wahlberg) . This boy "sees dead people". Crowe spends a lot of time with the boy much to the dismay of his wife (Olivia Williams). Cole''s mom (Toni Collette) is at her wit''s end with what to do about her son''s increasing problems. Crowe is the boy''s only hope.','https://image.tmdb.org/t/p/original/vOyfUXNFSnaTk7Vk5AjpsKTUWsu.jpg','https://image.tmdb.org/t/p/original/6TjllWT3cGrPFyqDXurVZ3L8bBi.jpg','Nominated for 6 Oscars. 37 wins & 56 nominations total','$293,506,292','PG-13')
,('Stranger Than Fiction','10 Nov 2006',7.5,'113 minutes','English','Movie','Everybody knows that your life is a story. But what if a story was your life? Harold Crick (Will Ferrell) is your average I.R.S. Agent: monotonous, boring, and repetitive. But one day this all changes when Harold begins to hear an author inside of his head narrating his life. The narrator it is extraordinarily accurate, and Harold recognizes the voice as an esteemed author he saw on television. But when the narration reveals that he is going to die, Harold must find the author of the story, and ultimately his life, to convince her to change the ending of the story before it is too late.','https://image.tmdb.org/t/p/original/nCzcepubwShvZ4vbCsygQNgF2Z1.jpg','https://image.tmdb.org/t/p/original/d9eONXYtCmQnPWw61w9pNMGlSzK.jpg','3 wins & 15 nominations total','$40,660,952','PG-13')
,('Haider','02 Oct 2014',8,'160 minutes','Hindi','Movie','In Vishal Bhardwaj''s adaptation of William Shakespeare''s ''Hamlet'', young fellow Haider returns home to Kashmir on receiving news of his father''s disappearance. Not only does he learn that security forces have detained his father for harboring militants, but also that his mother is in a relationship with his very own uncle. Intense drama follows between mother and son as both struggle to come to terms with the news of his father''s death. Soon Haider learns that his uncle is responsible for the gruesome murder; what follows is his journey to avenge his father''s death.','https://image.tmdb.org/t/p/original/lOCotkHPODWdsRDMoLbSdLdVT3L.jpg','https://image.tmdb.org/t/p/original/tiyqwRBKVyLgKwVNicKjKvjaLXf.jpg','35 wins & 47 nominations','$1,048,143','Not Rated')
,('Seven','22 Sep 1995',8.6,'127 minutes','English','Movie','Taking place in a nameless city, Se7en follows the story of two homicide detectives tracking down a sadistic serial killer (Kevin Spacey) who chooses his victims according to the seven deadly sins. Brad Pitt stars as Detective David Mills, a hopeful but naive rookie who finds himself partnered with veteran Detective William Somerset (Morgan Freeman). Together they trace the killer''s every step, witnessing the aftermath of his horrific crimes one by one as the victims pile up in rapid succession, all the while moving closer to a gruesome fate neither of them could have predicted.','https://image.tmdb.org/t/p/original/191nKfP0ehp3uIvWqgPbFmI4lv9.jpg','https://image.tmdb.org/t/p/original/p1PLSI5Nw2krGxD7X4ulul1tDAk.jpg','Nominated for 2 Oscars. 5 wins & 9 nominations total','$820,278','Not Rated')
,('The Truman Show','1998',8.2,'103 minutes','English','Movie','Since birth, a big fat lie defines the well-organised but humdrum life of the kind-hearted insurance salesman and ambitious explorer, Truman Burbank. Utterly unaware of the thousands of cleverly hidden cameras watching his every move, for nearly three decades, Truman''s entire existence pivots around the will and the wild imagination of the ruthlessly manipulative television producer, Christof--the all-powerful TV-God of an extreme 24/7 reality show: The Truman Show. As a result, Truman''s picturesque neighbourhood with the manicured lawns and the uncannily perfect residents is nothing but an elaborate state-of-the-art set, and the only truth he knows is what the worldwide television network and its deep financial interests dictate. Do lab rats know they are forever imprisoned?','https://image.tmdb.org/t/p/original/vuza0WqY239yBXOadKlGwJsZJFE.jpg','https://image.tmdb.org/t/p/original/aCHn2TXYJfzPXQKA6r9mKPbMlUB.jpg','Nominated for 3 Oscars. 41 wins & 69 nominations total','$125,618,201','PG')
,('The Greatest Showman','20 Dec 2017',7.5,'105 minutes','English','Movie','Orphaned, penniless, but ambitious and with a mind crammed with imagination and fresh ideas, the American entertainer, Phineas Taylor Barnum, will always be remembered as the man with the gift to blur the line between reality and fiction. Thirsty for innovation and hungry for success, the son of a tailor manages to open a wax museum; however, he soon shifts focus to the unique and the peculiar, introducing extraordinary, never-seen-before live acts on the circus stage. Now, some people call Barnum''s rich collection of oddities, an outright freak show; but, when Phineas, obsessed for cheers and respectability, gambles everything on the opera singer, Jenny Lind, to appeal to a high-brow audience, he will lose sight of the most crucial aspect of his life: his family. Will Barnum, the greatest showman, risk it all to be accepted?','https://image.tmdb.org/t/p/original/b9CeobiihCx1uG1tpw8hXmpi7nm.jpg','https://image.tmdb.org/t/p/original/lrNKm3HNvGdZoAfiBKu7b04FLHN.jpg','Nominated for 1 Oscar. 17 wins & 32 nominations total','$174,340,174','PG')
,('Kapoor & Sons','18 Mar 2016',7.7,'132 minutes','Hindi','Movie','Amrajeet Kapoor lives joyfully at the age of 90 his wish is to get a family photograph and mentioning Kapoor and Sons and frame it in the hall of his house. He suddenly suffer an heart attack and is rushed to hospital by his son Harsh and his wife Sunita his grandsons Rahul whose writer in London and Arjun who works in New Jersey soon rush home.The Kapoor''s aren''t happy with each other as they seem to be and have a estranged relationship and frequent arguments in between this Rahul and Arjun meet Tia on separate occasions and develop a friendship. While Sr Kapoor is in hospital the family plan his birthday party which is on his day of discharge where at the party Rahul and Arjun meet Tia where Rahul clears the air that they don''t have any relationship apart from business. But soon party goes hey wire when Anu arrives whom Sunita believes Harsh is having an affair while Amarjeet as an argument with his Sr friends during a bridge game. Amarjeet is waiting for his younger son to return to complete the family pic but but is worried seeing his family''s estranged relationship.','https://image.tmdb.org/t/p/original/oPdcOInH8TqR5udDTDPiDuLSN90.jpg','https://image.tmdb.org/t/p/original/xuF6qhtc7Q79Fh2aJxRJAX3YgbE.jpg','18 wins & 38 nominations','$2,607,036','Not Rated')
,('Laila Majnu','06 Sep 2018',7.7,'140 minutes','Hindi','Movie',NULL,'https://image.tmdb.org/t/p/original/m21pcuuNY58P7wkxQd3LzZSdXKU.jpg','https://image.tmdb.org/t/p/original/6wRBtkjf5DCmybSnnQ9PSEPT3s8.jpg','1 win & 11 nominations',NULL,NULL)
,('Prisoners','04 Oct 2013',8.2,'153 minutes','English','Movie','How far would you go to protect your family? Keller Dover is facing every parent''s worst nightmare. His six-year-old daughter, Anna, is missing, together with her young friend, Joy, and as minutes turn to hours, panic sets in. The only lead is a dilapidated RV that had earlier been parked on their street. Heading the investigation, Detective Loki arrests its driver, Alex Jones, but a lack of evidence forces his release. As the police pursue multiple leads and pressure mounts, knowing his child''s life is at stake the frantic Dover decides he has no choice but to take matters into his own hands. But just how far will this desperate father go to protect his family?','https://image.tmdb.org/t/p/original/uhviyknTT5cEQXbn6vWIqfM4vGm.jpg','https://image.tmdb.org/t/p/original/3RFmTz5h2UuFWEV4oH00XICBR9y.jpg','Nominated for 1 Oscar. 10 wins & 38 nominations total','$61,002,302','R')
,('What If','13 Aug 2014',6.8,'98 minutes','English','Movie','Medical-school dropout Wallace has been repeatedly burned by bad relationships. So while everyone around him, including his roommate Allan, seems to be finding the perfect partner, Wallace decides to put his love life on hold. It is then that he meets Chantry, an animator who lives with her longtime boyfriend Ben. Wallace and Chantry form an instant connection, striking up a close friendship. Still, there is no denying the chemistry between them, leading the pair to wonder, what if the love of your life is actually your best friend?','https://image.tmdb.org/t/p/original/67x9NJyjK4u02NpISnChDMKzCUr.jpg','https://image.tmdb.org/t/p/original/iIcJ72VzqAIw5NT6bOYqfHB2ukM.jpg',NULL,NULL,NULL)
,('Vice Principals',NULL,8,'30 minutes','English','Series','A dark comedy series about a high school and the two vice principals. McBride and Walton Goggins star as the V.P.s who are in an epic power struggle, vying for the top spot: to be school principal.','https://image.tmdb.org/t/p/original/hbAH3WlLpeAxJ06xpF4Uwg9j7kr.jpg','https://image.tmdb.org/t/p/original/emEJdHqgr0dLTpchPmifiGM2DR.jpg','Won 1 Oscar. 35 wins & 139 nominations total','$47,836,282','R')
,('Killers of the Flower Moon','20 Oct 2023',7.6,'206 minutes','English, Osage, Latin, French','Movie','The story takes place in the 1920s around the Osage Indian tribe living in Oklahoma. Native Americans are being killed one by one after the tribe becomes rich by discovering oil. The Osage massacre attracts the attention of the FBI, which begins an investigation.','https://image.tmdb.org/t/p/original/dB6Krk806zeqd0YNp2ngQ9zXteH.jpg','https://image.tmdb.org/t/p/original/acvE3RWjDLgvbL2RtcyzkrsAyNV.jpg','Nominated for 10 Oscars. 136 wins & 427 nominations total','$68,035,488','R')
,('Inside Llewyn Davis','06 Nov 2013',7.4,'104 minutes','English','Movie','Follow a week in the life of a young folk singer as he navigates the Greenwich Village folk scene of 1961. Guitar in tow, huddled against the unforgiving New York winter, he is struggling to make it as a musician against seemingly insurmountable obstacles -- some of them of his own making.','https://image.tmdb.org/t/p/original/nNxK3pC3DMpPpWKMvo2p3liREVT.jpg','https://image.tmdb.org/t/p/original/nnaUAkXgMKmkMI4Go6q4Q5q4nKm.jpg','Nominated for 2 Oscars. 47 wins & 174 nominations total','$13,235,319','R')
,('My Name Is Khan','11 Feb 2010',7.9,'165 minutes','Hindi, English','Movie','Rizwan Khan, a Muslim from the Borivali section of Mumbai, suffers from Asperger''s syndrome, a form of high-functioning autism that complicates socialization. The adult Rizwan marries a Hindu single mother, Mandira, in San Francisco. After 9/11, Rizwan is detained by authorities at LAX who mistake his disability for suspicious behavior. Following his arrest, he meets Radha, a therapist who helps him deal with his situation and his affliction. Rizwan then begins a journey to meet US President Bush to clear his name.','https://image.tmdb.org/t/p/original/5Y36lCiNyyV71mjq6LavgiggbhT.jpg','https://image.tmdb.org/t/p/original/zGCnIADWwpjGllYv8DgT8HIuIQl.jpg','25 wins & 36 nominations total','$4,018,771','PG-13')
,('Hera Pheri','31 Mar 2000',8.2,'156 minutes','Hindi','Movie','Baburao, a garage owner always in financial trouble has a tenant named Raju, who has not paid his rent for 2 years. He also has another tenant named Shyam, who has come to the city to look for a job in his late father''s place but is unable to find employment. The three men quarrel amongst themselves frequently. Then one day, the three men get a phone call from a kidnapper named Kabira and decide to make use of this phone call to overcome their financial problems - pretend to be the real kidnappers, increase the ransom amount, keep the incremental amount for themselves, and then give the original ransom demanded to Kabira. Will they get away with this idea?','https://image.tmdb.org/t/p/original/23MKGUPT5laTStim4TaGhfgSltu.jpg','https://image.tmdb.org/t/p/original/mIisDBJVAsugwReRoeAuWIDnc9S.jpg','8 wins & 6 nominations total',NULL,'Not Rated')
,('Om Shanti Om','07 Nov 2007',6.8,'162 minutes','Hindi, Urdu','Movie','Om Prakash Makhija is a Junior Artist in the 1970s Hindi film industry and in love with actress Shantipriya. Om rescues Shanti from an out-of-control fire scene and they become friends. His hopes seem to be coming true--until he finds out that she''s married to film producer Mukesh Mehra and expecting his child. He then watches in horror as Mukesh, after luring her into an abandoned studio, sets it afire to prevent a financial loss and protect his career. Om attempts--unsuccessfully--to rescue her and eventually dies himself. 30 years later, Om has been reincarnated as the only son of Bollywood actor Rajesh Kapoor, and is himself an actor. His memories start to return when he meets his widowed mother Bela, from his previous life. He also meets Mukesh and they decide to make a movie, ''Om Shanti Om''. Om hires a look-alike of Shantipriya and hopes to force a confession from Mukesh, but things go awry and Om finds his life endangered once again.','https://image.tmdb.org/t/p/original/ac2a7CJjxFwUULB8YGHdmDL5oSP.jpg','https://image.tmdb.org/t/p/original/k6CjO0JQhfm3M0paWvnqkpzB0pL.jpg','38 wins & 30 nominations total','$3,597,372','Not Rated')
,('17 Again','09 Apr 2009',6.4,'102 minutes','English','Movie','37 year old Mike O''Donnell is extremely disappointed with his life because of some of the choices he made when he was 17. His wife threw him out of the house his kids think that he''s a loser and want nothing to do with him, he lost his job. One small action gave him a another shot at his senior year in high school. For his kids he goes from a loser of a dad to an amazing friend that gives them great advice. He also realizes the things that he didn''t realize when he was actually 17. Seeing senior year from a different point of view makes him realize that doing your life over isn''t as fun as it seems.','https://image.tmdb.org/t/p/original/yEcfFXEWpuXcfsR9nKESVCFneqV.jpg','https://image.tmdb.org/t/p/original/8urrLPW6HFaIuRhJ1G3iQ7usEo7.jpg','3 wins & 5 nominations total','$64,167,069','PG-13')
,('Tenet','26 Aug 2020',7.3,'150 minutes','English','Movie','In a twilight world of international espionage, an unnamed CIA operative, known as The Protagonist, is recruited by a mysterious organization called Tenet to participate in a global assignment that unfolds beyond real time. The mission: prevent Andrei Sator, a renegade Russian oligarch with precognitive abilities, from starting World War III. The Protagonist will soon master the art of "time inversion" as a way of countering the threat that is to come.','https://image.tmdb.org/t/p/original/aCIFMriQh8rvhxpN1IWGgvH0Tlg.jpg','https://image.tmdb.org/t/p/original/yY76zq9XSuJ4nWyPDuwkdV7Wt0c.jpg','Won 1 Oscar. 49 wins & 139 nominations total','$58,504,105','PG-13')
,('Swiss Army Man','01 Jul 2016',6.9,'97 minutes','English','Movie','Hank, stranded on a deserted island and about to kill himself, notices a corpse washed up on the beach. He befriends it, naming it Manny, only to discover that his new friend can talk and has a myriad of supernatural abilities...which may help him get home.','https://image.tmdb.org/t/p/original/8pxn8CQ6SD6tly75lrKw08wfZKv.jpg','https://image.tmdb.org/t/p/original/dxa8tPKsGYH7KQJew6OlKaeFRLX.jpg','8 wins & 31 nominations total','$4,210,454','R')
,('Catch Me If You Can','25 Dec 2002',8.1,'141 minutes','English, French','Movie','A true story about Frank Abagnale Jr. who, before his 19th birthday, successfully conned millions of dollars worth of checks as a Pan Am pilot, doctor, and legal prosecutor. An FBI agent makes it his mission to put him behind bars. But Frank not only eludes capture, he revels in the pursuit.','https://image.tmdb.org/t/p/original/sdYgEkKCDPWNU6KnoL4qd8xZ4w7.jpg','https://image.tmdb.org/t/p/original/Ag6qhzsJd3k1NKuNrG9RmhZDMh7.jpg','Nominated for 2 Oscars. 16 wins & 46 nominations total','$164,615,351','PG-13')
,('Mrs. Doubtfire','24 Nov 1993',7.1,'125 minutes','English','Movie','Eccentric actor Daniel Hillard is an amusing and caring father. But after a disastrous birthday party for his son, Chris, his wife, Miranda, draws the line and files a divorce. He can see their three children only once a week which doesn''t sit well with him. He also holds a job at a TV studio as a shipping clerk under the recommendation of his liason. But when Miranda puts out an ad for a nanny, he takes it upon himself to make a disguise as a British lady named Mrs. Doubtfire. And he must also deal with Miranda''s new boyfriend, Stu Dunemyer.','https://image.tmdb.org/t/p/original/shHrSmXS5140o6sQzgzXxn3KqSm.jpg','https://image.tmdb.org/t/p/original/sTgavNm82pTaZR9U2NQZ1J2FrJz.jpg','Won 1 Oscar. 11 wins & 10 nominations total','$219,195,243','PG-13')
,('Split','27 Jan 2017',7.3,'117 minutes','English','Movie','Though Kevin (James McAvoy) has evidenced 23 personalities to his trusted psychiatrist, Dr. Fletcher (Betty Buckley), there remains one still submerged who is set to materialize and dominate all of the others. Compelled to abduct three teenage girls led by the willful, observant Casey, Kevin reaches a war for survival among all of those contained within him -- as well as everyone around him -- as the walls between his compartments shatter.','https://image.tmdb.org/t/p/original/lli31lYTFpvxVBeFHWoe5PMfW5s.jpg','https://image.tmdb.org/t/p/original/9pkZesKMnblFfKxEhQx45YQ2kIe.jpg','10 wins & 27 nominations total','$138,291,365','PG-13')
,('Signs','02 Aug 2002',6.8,'106 minutes','English, Portuguese','Movie','Preacher Graham Hess loses his faith in God after his wife dies in a brutal car accident. He lives with his children and brother in a farmhouse. Crop circles start to appear in their cornfields; Graham dismisses them as mischief by miscreants. After hearing strange noises and watching news coverage on crop circles appearing all over the world, the family grows suspicious of alien activities. Now they must stick together as a family and believe, to survive and escape the ordeal.','https://image.tmdb.org/t/p/original/sCFwJVsw7f3OlgttW6BMbLSYAt9.jpg','https://image.tmdb.org/t/p/original/rsPjEr7o02mo8ex6wD2PbRwasUe.jpg','3 wins & 34 nominations total','$227,966,634','PG-13')
,('Green Book','16 Nov 2018',8.2,'130 minutes','English, Italian, Russian, German','Movie','In 1962, tough bouncer Frank "Tony Lip" Vallelonga searches for work while his nightclub is closed for renovations. The most promising offer turns out to be the driver for African-American classical pianist Don Shirley for a concert tour into the Deep South states. Although hardly enthused at working for a Black man, Tony accepts the job and they begin their trek armed with "The Negro Motorist Green Book," a guide for safe travel through America''s racial segregation. The snobbishly erudite pianist and the crudely practical bouncer can barely get along with their clashing attitudes to life and ideals. However, as the disparate pair witness and endure America''s appalling injustices on the road, they find a newfound respect for each other''s talents and start to face them together. In doing so, they nurture an understanding and a friendship that would change both their lives.','https://image.tmdb.org/t/p/original/7BsvSuDQuoqhWmU2fL7W2GOcZHU.jpg','https://image.tmdb.org/t/p/original/5En0fmDagt3Pk8d7P3uTwfeQceg.jpg','Won 3 Oscars. 58 wins & 123 nominations total','$85,080,171','PG-13')
,('The Fundamentals of Caring','24 Jun 2016',7.3,'97 minutes','English','Movie','A writer (Paul Rudd) retires after a personal tragedy and becomes a disabled teen''s caregiver. When the two embark on an impromptu road trip, their ability to cope is tested as they start to understand the importance of hope and friendship.','https://image.tmdb.org/t/p/original/zZ0eda1GyHILNSoq9KF5u0hcq6O.jpg','https://image.tmdb.org/t/p/original/9kAKDdnHvhS93eMTqsXwiVaBtw7.jpg','4 nominations',NULL,'TV-MA')
,('The Peanut Butter Falcon','23 Aug 2019',7.6,'97 minutes','English','Movie','The Peanut Butter Falcon is an adventure story set in the world of a modern Mark Twain that begins when Zak (22), a young man with Down syndrome, runs away from the nursing home where he lives to chase his dream of becoming a professional wrestler by attending the wrestling school The Salt Water Redneck. Through circumstances beyond their control Tyler (32), a small-time outlaw on the run, becomes Zak''s unlikely coach and ally. Together they wind through deltas, elude capture, drink whisky, find God, catch fish, and convince Eleanor (28), a kind nursing home employee with a story of her own, to join them on their journey.','https://image.tmdb.org/t/p/original/qyQcRGvdW3VtxHR4fSDgPOePEip.jpg','https://image.tmdb.org/t/p/original/lewYqqt8epnjFhEOIIIINX9Z8EE.jpg','20 wins & 16 nominations total','$20,457,158','PG-13')
,('Chennai Express','09 Aug 2013',6.2,'141 minutes','Hindi, Tamil, English, Marathi','Movie','Rahul, a middle-aged Mumbaikar man, embarks on a cross-country journey to Tamil Nadu to disperse his late grandfather''s ashes in the Holy water of Rameshwaram. While travelling by train from Mumbai to Chennai, Rahul finds his life in grave danger when he encounters and falls for the cheerful daughter of a don mafia kingpin. After making a grave, costly mistake of helping four heavily armed to the teeth South Indian henchmen goons board the train, Rahul is left to fend for himself when the henchmen destroy his cell phone. As Rahul and Meena grow close whilst travelling across the spectacular South Indian lands of Chennai, an unanticipated and ominous looming danger awaits them.','https://image.tmdb.org/t/p/original/9LZgpUyFEvqHaDVuveE002mhgTi.jpg','https://image.tmdb.org/t/p/original/6JpbbREGqdEtePnCwxJRcTNX2jZ.jpg','33 wins & 55 nominations total','$5,307,960','Not Rated')
,('The Dark Knight Rises','20 Aug 2012',8.4,'164 minutes','English, Arabic','Movie','Despite his tarnished reputation after the events of The Dark Knight (2008), in which he took the rap for Dent''s crimes, Batman feels compelled to intervene to assist the city and its Police force, which is struggling to cope with Bane''s plans to destroy the city.','https://image.tmdb.org/t/p/original/hr0L2aueqlP2BYUblTTjmtn0hw4.jpg','https://image.tmdb.org/t/p/original/y2DB71C4nyIdMrANijz8mzvQtk6.jpg','Nominated for 1 BAFTA Award45 wins & 103 nominations total','$448,149,584','PG-13')
,('Rush Hour','18 Sep 1998',7,'98 minutes','English, Cantonese, Mandarin, Japanese, Chinese','Movie','Cultures clash and tempers flares as the two cops named Detective Inspector Lee a Hong Kong Detective and Detective James Carter LAPD, a big-mouthed work-alone Los Angeles cop who are from different worlds discovers one thing in common: they can''t stand each other. With time running out, they must join forces to catch the criminals and save the eleven-year-old Chinese girl of the Chinese consul named Soo Yung.','https://image.tmdb.org/t/p/original/we7wOLVFgxhzLzUt0qNe50xdIQZ.jpg','https://image.tmdb.org/t/p/original/9YRKhVQx174hQn35f8k1MWKLAFQ.jpg','6 wins & 9 nominations total','$141,186,864','PG-13')
,('Watchmen','06 Mar 2009',7.6,'162 minutes','English','Movie','It''s 1985 in an alternate reality. The Watchmen - comprised of the Comedian, Dr. Manhattan, Nite Owl II, Ozymandias, Rorschach and Silk Spectre II - are a disparate band of masked superheroes, modeled after the Minutemen, who were masked superheroes of a generation earlier, most of who are dead or afflicted by the ravages of life. The Comedian belongs to both groups. Despite the activities of the Watchmen leading to the west winning the Vietnam War which in turn has kept Richard Nixon in the White House, Nixon has now outlawed masks, resulting in the Watchmen disbanding and going into retirement, most hiding their Watchmen past under their human identities. However, the Comedian, in his human persona of Eddie Blake, and Dr. Manhattan - former physicist Jon Osterman who obtained his superhero powers through a scientific accident which almost killed him - now work for the government. Dr. Manhattan''s powers in particular have kept a watch over nuclear proliferation, as he is able to stop any nuclear attack. Regardless, the Cold War is at its height with recent Soviet posturing regarding nuclear bomb buildup. In her human persona of Laurie Jupiter, Silk Spectre II is Dr. Manhattan''s assistant and lover, as much as they can be in Dr. Manhattan''s now non-human state. Meanwhile, Ozymandias has come out to the world as wealthy genius Adrian Veidt, capitalizing on his Ozymandias identity to better the world, and Rorschach continues to work as a vigilante, although one wanted by the law despite he the reason that many criminals are behind bars. When Blake is murdered, Rorschach, as the only one still on the streets, believes the murderer is out to kill all the Watchmen, despite any number of people wanting to kill the Comedian for being a misogynist. Evidence points to it perhaps having something to do with an imminent attempt of nuclear annihilation. Rorschach has to convince his colleagues, who he has not seen since their superhero days, of the validity of his theory for them to come out of retirement, which is no easy task. If they do, which will require them to overcome external forces which seem to be conspiring against them, they will have to discover both who killed the Comedian and why before they befall the same fate as him and/or before the mastermind is able to exact his larger grand plan.','https://image.tmdb.org/t/p/original/aVURelN3pM56lFM7Dgfs5TixcIf.jpg','https://image.tmdb.org/t/p/original/dH7ia3vtkYCa3CBvDnvVjqm9uiQ.jpg','12 wins & 24 nominations total','$107,509,799','R')
,('Sucker Punch','24 Mar 2011',6.1,'110 minutes','English, German','Movie','A young girl, Babydoll, is locked away in a mental asylum by her abusive stepfather, where she will undergo a lobotomy in five days'' time. Faced with unimaginable odds, she retreats to a fantastical world in her imagination where she and four other female asylum inmates plot to escape the facility. The line between reality and fantasy blurs as Babydoll and the others, plus a mysterious guide, fight to retrieve the five items that will let them break free from their captors in time.','https://image.tmdb.org/t/p/original/jtaUDnvIiHUd2ranDcjB5AbPx6o.jpg','https://image.tmdb.org/t/p/original/20rvY1XBjP2j3kyRDB2vTI1i9uT.jpg','1 win & 11 nominations total','$36,392,502','PG-13')
,('The Theory of Everything','13 Mar 2015',7.7,'123 minutes','English, French, Ukrainian','Movie','The Theory of Everything is the story of the most brilliant and celebrated physicist of our time, Stephen Hawking, and Jane Wilde, the arts student he fell in love with while studying at Cambridge in the 1960s. Little was expected from Hawking, a bright but shiftless student of cosmology, after he was given just two years to live following the diagnosis of a fatal illness (ALS) at 21 years of age. He became galvanized, however, by the love Jane Wilde, and went on to be called the "successor to Einstein," as well as a husband and father to their three children. Over the course of their marriage, however, as Stephen''s body collapsed and his academic renown soared, fault lines were exposed that tested the resolve of their relationship and dramatically altered the course of both of their lives.','https://image.tmdb.org/t/p/original/kJuL37NTE51zVP3eG5aGMyKAIlh.jpg','https://image.tmdb.org/t/p/original/ke3lanTAgCqPMpOyutIfXzYih2s.jpg','Won 1 Oscar. 25 wins & 126 nominations total','$35,893,537','PG-13')
,('Hacksaw Ridge','03 Nov 2016',8.1,'139 minutes','English, Japanese','Movie','The true story of Desmond T. Doss, the conscientious objector who, after the Battle of Okinawa, was awarded the Medal of Honor for his incredible bravery and regard for his fellow soldiers. Following his upbringing and how this shaped his views (especially his religious view and anti-killing stance), Doss''s trials and tribulations after enlisting in the US Army (trying to become a medic) begin, preluding the hell on Earth that was Hacksaw Ridge.','https://image.tmdb.org/t/p/original/jhWbYeUNOA5zAb6ufK6pXQFXqTX.jpg','https://image.tmdb.org/t/p/original/rshlQ6LfPRSWFhpGL4s5ZkIPR51.jpg','Won 2 Oscars. 57 wins & 115 nominations total','$67,209,615','R')
,('Ali','20 Dec 2001',6.7,'157 minutes','English, French, Swahili','Movie','In 1964, a brash new pro boxer, Cassius Clay, explodes on to the scene. Bold and outspoken, he cuts an entirely new image for African Americans in sports with his proud, public self confidence and his unapologetic belief that he is the greatest boxer of all time. To his credit, he sets out to prove that with his highly agile and forceful style soon making him a formidable boxer who claims the heavyweight championship. His personal life is no less noteworthy with his allegiance to the Nation of Islam, his friendship with the controversial Malcolm X, and his abandonment of his slave name in favor of Muhammad Ali stirring up controversy. Yet, at the top of his game, both Ali''s personal and professional lives face the ultimate test when the military draft rules are changed, making him eligible for military induction during the Vietnam War. Ali refuses to submit on principle to cooperate in a war for a racist nation that treated his people so poorly. The cost of that stand is high as he finds himself unable to legally box in his own country while his case is contested in court. What follows is a battle for a man who would sacrifice so much for what he believes in and a comeback that cemented his legend as one of the great sports figures of all time.','https://image.tmdb.org/t/p/original/hBE9VTgwmHbIBkJ0uxrnmqJOpkm.jpg','https://image.tmdb.org/t/p/original/gVtm7G5NtQxjFNA5ydqxslxjCuk.jpg','Nominated for 2 Oscars. 10 wins & 27 nominations total','$58,203,105','R')
,('BlacKkKlansman','09 Aug 2018',7.5,'135 minutes','English','Movie','In the early 1970s, Ron Stallworth is hired as the first Black officer in the Colorado Springs, Colorado Police Department. Stallworth is initially assigned to work in the records room, where he faces racial slurs from his coworkers. Stallworth requests a transfer to go undercover, and is assigned to infiltrate a local rally at which national civil rights leader Kwame Ture (birth name Stokely Carmichael) is to give a speech. At the rally, Stallworth meets Patrice Dumas, the president of the black student union at Colorado College. While taking Ture to his hotel, Patrice is stopped by patrolman Andy Landers, a corrupt, racist officer in Stallworth''s precinct, who threatens Ture and sexually assaults Patrice.','https://image.tmdb.org/t/p/original/8jxqAvSDoneSKRczaK8v9X5gqBp.jpg','https://image.tmdb.org/t/p/original/gMVdhfQ7q9DFHhDkehrququjGPd.jpg','Won 1 Oscar. 46 wins & 215 nominations total','$49,275,340','R')
,('The Trial of the Chicago 7','01 Oct 2020',7.7,'129 minutes','English, Latin, French','Movie','In Chicago 1968, the Democratic Party Convention was met with protests from activists like the moderate Students for a Democratic Society led by Tom Hayden and the militant Yippies led by Abbie Hoffman and Jerry Rubin, which led to violent confrontations with the local authorities. As a result, seven of the accused ringleaders are arraigned on charges like Conspiracy by the hostile Nixon administration, including Bobby Seale of the Black Panthers who was not involved in the incident. What follows is an unfair trial presided by the belligerent Judge Hoffman (No relation) and prosecuted by a reluctant but duty-bound Richard Schultz. As their pro bono lawyers face such odds, Hayden and his fellows are frustrated by the Yippies'' outrageous antics undermining their defense in defiance of the system even while Seale is denied a chance to defend himself his way. Along the way, the Chicago 7 clash in their political philosophies even as they learn they need each other in this fight.','https://image.tmdb.org/t/p/original/ahf5cVdooMAlDRiJOZQNuLqa1Is.jpg','https://image.tmdb.org/t/p/original/v8Nf6Y1qL1Q3PWTBezXNPPaXqza.jpg','Nominated for 6 Oscars. 58 wins & 192 nominations total',NULL,'R')
,('Palm Springs','10 Jul 2020',7.4,'90 minutes','English','Movie','While stuck at a wedding in Palm Springs, Nyles (Andy Samberg) meets Sarah (Cristin Milioti), the maid of honor and family black sheep. After he rescues her from a disastrous toast, Sarah becomes drawn to Nyles and his offbeat nihilism. But when their impromptu tryst is thwarted by a surreal interruption, Sarah must join Nyles in embracing the idea that nothing really matters, and they begin wreaking spirited havoc on the wedding celebration.','https://image.tmdb.org/t/p/original/yf5IuMW6GHghu39kxA0oFx7Bxmj.jpg','https://image.tmdb.org/t/p/original/d7JUXVvjvVCXWs1mlpyO5ESdWdT.jpg','15 wins & 45 nominations total','$164,000','R')
,('Liar Liar','21 Mar 1997',6.9,'86 minutes','English','Movie','Fletcher Reede, a fast talking attorney, habitual liar, and divorced father is an incredibly successful lawyer who has built his career by lying. He has a habit of giving precedence to his job and always breaking promises to be with his young son Max, but Fletcher lets Max down once too often, for missing his own son''s birthday party. But until then at 8:15 Max has decided to make an honest man out of him as he wishes for one whole day his dad couldn''t tell a lie. When the wish comes true all Fletcher can do is tell the truth and cannot tell one lie. Uh-oh for Fletcher Reede.','https://image.tmdb.org/t/p/original/p1habYSdC7oD3WygQ5lynU5G5rV.jpg','https://image.tmdb.org/t/p/original/wUzCzeM7ZRG0kHHOU8wiTrXdocd.jpg','4 wins & 6 nominations total','$181,410,615','PG-13')
,('Solo Leveling',NULL,8.6,NULL,'Japanese, English','Series','In a world where hunters, humans who possess magical abilities, must battle deadly monsters to protect the human race from certain annihilation, a notoriously weak hunter named Sung Jinwoo finds himself in a seemingly endless struggle for survival. One day, after narrowly surviving an overwhelmingly powerful double dungeon that nearly wipes out his entire party, a mysterious program called the System chooses him as its sole player and in turn, gives him the extremely rare ability to level up in strength, possibly beyond any known limits. Jinwoo then sets out on a journey as he fights against all kinds of enemies, both man and monster, to discover the secrets of the dungeons and the true source of his powers.','https://image.tmdb.org/t/p/original/geCRueV3ElhRTr0xtJuEWJt6dJ1.jpg','https://image.tmdb.org/t/p/original/odVlTMqPPiMksmxpN9cCbPCjUPP.jpg','2 wins & 7 nominations total',NULL,'TV-MA')
,('Teen Titans GO! To the Movies','26 Jul 2018',6.7,'84 minutes','English','Movie','It seems to the Teens that all the major superheroes out there are starring in their own movies-everyone but the Teen Titans, that is. But de facto leader Robin is determined to remedy the situation, and be seen as a star instead of a sidekick. If only they could get the hottest Hollywood film director to notice them. With a few madcap ideas and a song in their heart, the Teen Titans head to Tinsel Town, certain to pull off their dream. But when the group is radically misdirected by a seriously super villain and his maniacal plan to take over the Earth, things really go awry. The team finds their friendship and their fighting spirit failing, putting the very fate of the Teen Titans themselves on the line.','https://image.tmdb.org/t/p/original/mFHihhE9hlvJEk2f1AqdLRaYHd6.jpg','https://image.tmdb.org/t/p/original/3iDTnTj5C1sHOteR3Txmp1WvqO4.jpg','9 nominations total','$29,790,236','PG')
,('Ford v Ferrari','13 Nov 2019',8.1,'152 minutes','English, Italian, French, Japanese','Movie','In the mid-1960s, Enzo Ferrari''s fast Rosso-Corsa racing cars were dominating the motorsport world. Meanwhile, Carroll Shelby, an American car designer, had retired after winning the demanding 1959 ''24 Hours of Le Mans'' endurance race. However, an unexpected proposition from Lee Iacocca, the Vice President of Henry Ford II''s motor company, presented an opportunity to beat the Italians at their own game. Under these pressing circumstances, Ken Miles, a British sports car driver and racing engineer, reluctantly agreed to help improve the Americans'' image. But Ford''s race team had less than ninety days to rewrite history. As a result, the non-conformist duo came up with the Ford GT40 Mk I, a powerful, high-performance racing car. Nevertheless, the question remained. Can Shelby and Miles break Ferrari''s long winning streak?','https://image.tmdb.org/t/p/original/dR1Ju50iudrOh3YgfwkAU1g2HZe.jpg','https://image.tmdb.org/t/p/original/2vq5GTJOahE03mNYZGxIynlHcWr.jpg','Won 2 Oscars. 26 wins & 88 nominations total','$117,624,357','PG-13')
,('Do Revenge','16 Sep 2022',6.3,'118 minutes','English','Movie','Drea is at the peak of her high-school powers when her entire life goes up in flames after her sex tape gets leaked to the whole school, seemingly by her boyfriend Max, king of the school. Eleanor is an awkward new transfer student who is angered to find out that she must now attend school with her old bully Carissa, who started a nasty rumor about her in summer camp when they were 13. After a clandestine run-in at tennis camp, Drea and Eleanor form an unlikely secret friendship to get revenge on each other''s tormentors.','https://image.tmdb.org/t/p/original/akIjKJDHcVN4bzifcEarKVPNpoa.jpg','https://image.tmdb.org/t/p/original/yWRvAfZmbzk61REYod4WQACDhRj.jpg','2 wins & 5 nominations',NULL,'TV-MA')
,('All the Bright Places','08 Feb 2020',6.6,'107 minutes','English','Movie','The story of Violet Markey and Theodore Finch, who meet and change each other''s lives forever. As they struggle with the emotional and physical scars of their past, they come together, discovering that even the smallest places and moments can mean something.','https://image.tmdb.org/t/p/original/4SafxuMKQiw4reBiWKVZJpJn80I.jpg','https://image.tmdb.org/t/p/original/tcrNJfyNEIqaBR8Ogkgnq5xQJnf.jpg','1 win total',NULL,'TV-MA')
,('Seeking a Friend for the End of the World','22 Jun 2012',6.7,'101 minutes','English','Movie','An asteroid named "Matilda" is on a collision course towards Earth and in three weeks the world will come to an absolute end. What would you do if your life and the world were doomed? One man decides to spend his time searching for his long lost love from high school during the coming catastrophe.','https://image.tmdb.org/t/p/original/rBbCwFLyt7Q25yaw2bEOQh7RMG1.jpg','https://image.tmdb.org/t/p/original/tEJ3nvnp520AvNPbhCegHMo1EfM.jpg','3 nominations','$7,078,738','R')
,('Bruce Almighty','23 May 2003',6.8,'101 minutes','English, Spanish','Movie','Bruce Nolan, a television reporter in Buffalo, NY, is discontented with almost everything in life despite his popularity and the love of his girlfriend Grace. At the end of the worst day of his life, Bruce angrily ridicules and rages against God and God responds. God appears in human form and, endowing Bruce with divine powers, challenges Bruce to take on the big job to see if he can do it any better.','https://image.tmdb.org/t/p/original/f0QqG14SZYYZcV4VWykVc5w13dz.jpg','https://image.tmdb.org/t/p/original/vZh2ZoBMyAiH8vYGqadyMBX50Gc.jpg','7 wins & 9 nominations total','$242,829,261','PG-13')
,('Central Intelligence','15 Jun 2016',6.3,'107 minutes','English','Movie','Calvin Joyner was voted in high school the guy most likely to succeed. 20 years later he''s an accountant. As his high school reunion approaches, he tries to make contact with his old schoolmates. And someone named Bob Stone contacts him. He says that he was known as Robbie Weirdicht in school. Calvin remembers that he was picked on, as a matter of fact after an extremely nasty prank he left school. They agree to meet and Calvin is surprised by how much he has changed. Bob asks Calvin to help him out. He says yes and the next thing he knows some men burst into his home. They''re CIA, the one in charge is looking for Stone, she says he''s a rogue agent. When they can''t find Bob they leave. Later he approaches Calvin telling him, he is not a rogue agent, he''s trying to find a person known as the Black Badger who is planning to sell some information that in the wrong hands can be disastrous. so he needs Calvin''s help to stop him. Calvin''s not sure whom he should believe.','https://image.tmdb.org/t/p/original/7Ou0TRJLi72AwLEUlo7Kym4XuNB.jpg','https://image.tmdb.org/t/p/original/72TTH0QCKGiObXE7DyBOQTMkdGl.jpg','2 wins & 8 nominations total','$127,440,871','PG-13')
,('The Lego Batman Movie','17 Feb 2017',7.3,'104 minutes','English','Movie','There are big changes brewing in Gotham City, and if he wants to save the city from The Joker''s hostile takeover, Batman may have to drop the lone vigilante thing, try to work with others and maybe, just maybe, learn to lighten up.','https://image.tmdb.org/t/p/original/snGwr2gag4Fcgx2OGmH9otl6ofW.jpg','https://image.tmdb.org/t/p/original/mo1eLCJTp5JGGz2tKlW98KXpRo0.jpg','13 wins & 69 nominations total','$175,936,671','PG')
,('Anand','15 Oct 2004',8,'180 minutes','Telugu','Movie',NULL,'https://image.tmdb.org/t/p/original/nEy1ue2wOGPfGsgVAhRzurRo6Xt.jpg','https://image.tmdb.org/t/p/original/uQz3LYfBCQm0cBCGJe5FlHTe6Cu.jpg','9 wins & 1 nomination',NULL,'Not Rated')
,('Zombieland','02 Oct 2009',7.5,'88 minutes','English, Spanish, French','Movie','Searching for family. In the early twenty-first century, zombies have taken over America. A shy and college student in Texas has survived by following his 30 rules: like "look in the back seat," "double-tap," "avoid public restrooms." He decides to travel to Ohio to see if his parents are alive. He gets a ride with a savage, brutal zombie-killer headed for Florida, and soon they confront a young woman whose sister has been bitten by a zombie and wants to be put out of her suffering. The sisters were headed to an LA park with attractions they''ve heard is without a zombie.','https://image.tmdb.org/t/p/original/dUkAmAyPVqubSBNRjRqCgHggZcK.jpg','https://image.tmdb.org/t/p/original/oihWVx3imvRKujnGmSDYhfG1gI5.jpg','10 wins & 29 nominations total','$75,590,286','R')
,('Piku','08 May 2015',7.6,'123 minutes','Hindi','Movie',NULL,'https://image.tmdb.org/t/p/original/yo7EZWiLpLGhqs3YnlDGDBPjfTb.jpg','https://image.tmdb.org/t/p/original/uTyXPP72WPqqYnA9PjxApmFM3ux.jpg','40 wins & 34 nominations','$1,801,807','Not Rated')
,('Man of Steel','21 Jun 2013',7.1,'143 minutes','English','Movie','A young boy learns that he has extraordinary powers and is not of this Earth. As a young man, he journeys to discover where he came from and what he was sent here to do. But the hero in him must now emerge if he is to save the world from annihilation and become the symbol of hope for all mankind.','https://image.tmdb.org/t/p/original/dksTL9NXc3GqPBRHYHcy1aIwjS.jpg','https://image.tmdb.org/t/p/original/69EFgWWPFWbRNHmQgYdSnyJ94Ge.jpg','Nominated for 1 BAFTA Award7 wins & 46 nominations total','$291,045,518','PG-13')
,('Batman v Superman: Dawn of Justice','25 Mar 2016',6.5,'151 minutes','English','Movie','The general public is concerned over having Superman on their planet and letting the "Dark Knight" - Batman - pursue the streets of Gotham. While this is happening, a power-phobic Batman tries to attack Superman. Meanwhile, Superman tries to settle on a decision, and Lex Luthor, the criminal mastermind and millionaire, tries to use his own advantages to fight the "Man of Steel".','https://image.tmdb.org/t/p/original/5UsK3grJvtQrtzEgqNlDljJW96w.jpg','https://image.tmdb.org/t/p/original/5fX1oSGuYdKgwWmUTAN5MNSQGzr.jpg',NULL,NULL,NULL)
,('Zack Snyder''s Justice League','18 Mar 2021',7.9,'242 minutes','English, Icelandic, French','Movie','Determined to ensure Superman''s ultimate sacrifice was not in vain, Bruce Wayne aligns forces with Diana Prince with plans to recruit a team of metahumans to protect the world from an approaching threat of catastrophic proportions. The task proves more difficult than Bruce imagined, as each of the recruits must face the demons of their own pasts to transcend that which has held them back, allowing them to come together, finally forming an unprecedented league of heroes. Now united, Batman, Wonder Woman, Aquaman, Cyborg and The Flash may be too late to save the planet from Steppenwolf, DeSaad and Darkseid and their dreadful intentions.','https://image.tmdb.org/t/p/original/tnAuB8q5vv7Ax9UAEje5Xi4BXik.jpg','https://image.tmdb.org/t/p/original/pcDc2WJAYGJTTvRSEIpRZwM3Ola.jpg','5 wins & 6 nominations total',NULL,'R')
,('Alita: Battle Angel','05 Feb 2019',7.3,'122 minutes','English, Spanish','Movie','Alita is a creation from an age of despair. Found by the mysterious Dr. Ido while trolling for cyborg parts, Alita becomes a lethal, dangerous being. She cannot remember who she is, or where she came from. But to Dr. Ido, the truth is all too clear. She is the one being who can break the cycle of death and destruction left behind from Tiphares. But to accomplish her true purpose, she must fight and kill. And that is where Alita''s true significance comes to bear. She is an angel from heaven. She is an angel of death.','https://image.tmdb.org/t/p/original/xRWht48C2V8XNfzvPehyClOvDni.jpg','https://image.tmdb.org/t/p/original/jXDselREPq8TOVGM4dzBBUM7xVk.jpg','10 wins & 26 nominations total','$85,838,210','PG-13')
,('The Martian','02 Oct 2015',8,'144 minutes','English, Mandarin','Movie','During a manned mission to Mars, Astronaut Mark Watney is presumed dead after a fierce storm and left behind by his crew. But Watney has survived and finds himself stranded and alone on the hostile planet. With only meager supplies, he must draw upon his ingenuity, wit and spirit to subsist and find a way to signal to Earth that he is alive. Millions of miles away, NASA and a team of international scientists work tirelessly to bring "the Martian" home, while his crewmates concurrently plot a daring, if not impossible, rescue mission. As these stories of incredible bravery unfold, the world comes together to root for Watney''s safe return.','https://image.tmdb.org/t/p/original/3ndAx3weG6KDkJIRMCi5vXX6Dyb.jpg','https://image.tmdb.org/t/p/original/9pubUbDX3eKB6ZuKxbFgv4cBZrz.jpg','Nominated for 7 Oscars. 40 wins & 199 nominations total','$228,433,663','PG-13')
,('Meet Joe Black','13 Nov 1998',7.2,'178 minutes','English, Dutch','Movie','William Parrish (Sir Anthony Hopkins), media tycoon, loving father, and still a human being, is about to celebrate his 65th birthday. One morning, he is contacted by the inevitable, by hallucination, as he thinks. Later, Death enters his home and his life, personified in a man''s body: Joe Black (Brad Pitt) has arrived. His intention was to take William with him, but accidentally, Joe''s former host and William''s beautiful daughter Susan (Claire Forlani) have already met. Joe begins to develop certain interest in life on Earth, as well as in Susan, who has no clue with whom she''s flirting.','https://image.tmdb.org/t/p/original/fDPAjvfPMomkKF7cMRmL5Anak61.jpg','https://image.tmdb.org/t/p/original/o67MmFburfckl6iPa4DVkranLi3.jpg','3 wins & 6 nominations total','$44,619,100','PG-13')
,('Forrest Gump','06 Jul 1994',8.8,'142 minutes','English','Movie','Forrest Gump is a simple man with a low I.Q. but good intentions. He is running through childhood with his best and only friend Jenny. His ''mama'' teaches him the ways of life and leaves him to choose his destiny. Forrest joins the army for service in Vietnam, finding new friends called Dan and Bubba, he wins medals, creates a famous shrimp fishing fleet, inspires people to jog, starts a ping-pong craze, creates the smiley, writes bumper stickers and songs, donates to people and meets the president several times. However, this is all irrelevant to Forrest who can only think of his childhood sweetheart Jenny Curran, who has messed up her life. Although in the end all he wants to prove is that anyone can love anyone.','https://image.tmdb.org/t/p/original/arw2vcBveWOVZr6pxd9XTd1TdQa.jpg','https://image.tmdb.org/t/p/original/mzfx54nfDPTUXZOG48u4LaEheDy.jpg','Won 6 Oscars. 51 wins & 74 nominations total','$330,455,270','PG-13')
,('Rockstar','11 Nov 2011',7.8,'159 minutes','Hindi','Movie','The film follows Janardhan Jhakar in a series of flashbacks and flash forwards, how the small collage boy became an international rock sensation "Jordan". To chase his dreams of a rockstar, the wanna-be singer his counseled that music and feelings only come with pain. In the process of which, he meets Heer, a tough on the outside and popular college girl, the both become friends, and as time passes by his dreams of music fade away as they spend time together. When heer moves away, Janardhan is thrown out of his house because of family misunderstandings. As he bides his time at a local mosque, his passion for music comes back to life. He is soon signed by a record label, where he makes more enemies than friends, his tour takes him to Prague, where he is reunited with a married Heer. Things go awry when the two share an intimate moment, and Jordan his deported to India on trespassing charges filed by Heer''s husband. Now an angry painful and lonely JORDAN embarks on his journey to become a ROCKSTAR','https://image.tmdb.org/t/p/original/2LR5ManbBWmotbM0lYCJ1TVko9P.jpg','https://image.tmdb.org/t/p/original/auWqW0BMEytyMpwWvLXqQYTz1wn.jpg','40 wins & 39 nominations total','$986,697','Not Rated')
,('Slumdog Millionaire','13 Mar 2009',8,'120 minutes','English, Hindi','Movie','The story of Jamal Malik, an 18 year-old orphan from the slums of Mumbai, who is about to experience the biggest day of his life. With the whole nation watching, he is just one question away from winning a staggering 20 million rupees on India''s Kaun Banega Crorepati? (2000) (Who Wants To Be A Millionaire?) But when the show breaks for the night, police arrest him on suspicion of cheating; how could a street kid know so much? Desperate to prove his innocence, Jamal tells the story of his life in the slum where he and his brother grew up, of their adventures together on the road, of vicious encounters with local gangs, and of Latika, the girl he loved and lost. Each chapter of his story reveals the key to the answer to one of the game show''s questions. Each chapter of Jamal''s increasingly layered story reveals where he learned the answers to the show''s seemingly impossible quizzes. But one question remains a mystery: what is this young man with no apparent desire for riches really doing on the game show? When the new day dawns and Jamal returns to answer the final question, the Inspector and sixty million viewers are about to find out. At the heart of its storytelling lies the question of how anyone comes to know the things they know about life and love.','https://image.tmdb.org/t/p/original/5leCCi7ZF0CawAfM5Qo2ECKPprc.jpg','https://image.tmdb.org/t/p/original/1wZoVT9RJsZmNjg8CecXqSgFUd9.jpg','Won 8 Oscars. 153 wins & 133 nominations total','$141,319,928','R')
,('Crazy, Stupid, Love.','28 Jul 2011',7.4,'118 minutes','English','Movie','Cal (Steve Carell) and Emily (Julianne Moore) have the perfect life together living the American dream... until Emily asks for a divorce. Now Cal, Mr Husband, has to navigate the single scene with a little help from his professional bachelor friend Jacob Palmer (Ryan Gosling). Make that a lot of help...','https://image.tmdb.org/t/p/original/p4RafgAPk558muOjnBMHhMArjS2.jpg','https://image.tmdb.org/t/p/original/vyrCniZsrXZAW08eECKIp1BMLPh.jpg','5 wins & 23 nominations total','$84,379,584','PG-13')
,('Silver Linings Playbook','21 Nov 2012',7.7,'122 minutes','English, Hindi','Movie','Against medical advice and without the knowledge of her husband Pat Solatano Sr., caring Dolores Solatano discharges her adult son, Pat Solatano Jr., from a Maryland mental health institution after his minimum eight-month court ordered stint. The condition of the release includes Pat Jr. moving back in with his parents in their Philadelphia home. Although Pat Jr.''s institutionalization was due to him beating up the lover of his wife Nikki, he was diagnosed with bipolar disorder. Nikki has since left him and has received a restraining order against him. Although he is on medication (which he doesn''t take because of the way it makes him feel) and has mandatory therapy sessions, Pat Jr. feels like he can manage on the outside solely by healthy living and looking for the "silver linings" in his life. His goals are to get his old job back as a substitute teacher, but more importantly reunite with Nikki. He finds there are certain instances where he doesn''t cope well; however, no less so than some others who have never been institutionalized, such as his Philadelphia Eagles obsessed father who has resorted to being a bookie to earn a living, his best friend Ronnie who quietly seethes over the control wielded by his wife Veronica, and Veronica''s widowed sister, Tiffany Maxwell, a girl with problems of her own. In their fragile mental states, Pat Jr. and Tiffany embark on a love/hate friendship based primarily on what help the other can provide in achieving their individual goals. But they may reevaluate their goals as their relationship progresses.','https://image.tmdb.org/t/p/original/y7iOVneBvITlBdhy6tVqXVOa1Js.jpg','https://image.tmdb.org/t/p/original/92Ppi99LkZFHUgpxwYRxcKZVZNH.jpg','Won 1 Oscar. 89 wins & 148 nominations total','$132,092,958','R')
,('Punch-Drunk Love','25 Oct 2002',7.3,'95 minutes','English','Movie','Barry Egan hates himself and hates his life. The only male among eight siblings, Barry is treated poorly by his overbearing sisters. Despite owning his own business, he has gotten nowhere in life largely because of his insecurities. He leads a solitary life, which allows him to hide his violent outbursts that occur when he''s frustrated. His solitude however allows him to think, he stumbling upon a scheme to travel the world on a pittance, travel which he has never done. Concurrently, he meets two people who pull him in two different directions. The first is Lena Leonard, a friend of his sister Elizabeth. Barry is slow to realize that Lena is attracted to him, he making her make all the first moves. Lena is eventually able to get Barry out of his shell, she who sticks around despite his obvious problems. His burgeoning relationship and thus new life with Lena is threatened by the second, "Georgia", who he contacted in an effort to alleviate his loneliness. Georgia and her "band of brothers" do whatever they can get get out of Barry what they want, no matter the price to Barry.','https://image.tmdb.org/t/p/original/htYp4yqFu4rzBEIa6j9jP8miDm3.jpg','https://image.tmdb.org/t/p/original/l9WzjwHwF7I2DwCtK8DXVQExGjH.jpg','14 wins & 37 nominations total','$17,844,216','R')
,('Dan in Real Life','26 Oct 2007',6.8,'98 minutes','English','Movie','Single father Dan Burns dedicates his life to his children, but one day he meets Marie at a bookstore. They get to know each other, but then Dan finds out that Marie is actually dating his brother, Mitch.','https://image.tmdb.org/t/p/original/wJkkkG4ditqNzlua0oJzoaICGiz.jpg','https://image.tmdb.org/t/p/original/uAa5bEEQvLxAqbKcOk9rGPLkZrJ.jpg','4 nominations','$47,642,963','PG-13')
,('A Walk to Remember','25 Jan 2002',7.3,'101 minutes','English','Movie','In Beaufort, North Carolina, a prank on a student goes wrong and puts him in the hospital. Landon, a popular student with no plans for the future, is held responsible and forced to join after-school, community service activities, which include starring as the lead in the play. Participating in these activities is Jamie Sullivan, the reverend''s daughter who has great ambitions and nothing in common with Landon. When Landon decides he wants to take his activities seriously, he asks Jamie for help and begins to spend most of his time with her. He starts to like her, which he did not expect to happen. They develop a relationship, much to the chagrin of Landon''s old popular friends and Jamie''s strict, reverend father. But when a heart-breaking secret becomes known that puts their relationship to the test, it is then that Landon and Jamie realize the true meaning of love and fate.','https://image.tmdb.org/t/p/original/8lUYMvWdHA0Q0k5F76RQCeCBUkA.jpg','https://image.tmdb.org/t/p/original/1FWSGQZo6HAzqO52VHL405VxJ07.jpg','4 wins & 2 nominations','$41,281,092','PG')
,('Barbie','19 Jul 2023',6.8,'114 minutes','English, Spanish','Movie','Barbie the Doll lives in bliss in the matriarchal society of Barbieland feeling good about her role in the world in the various iterations of Barbies over the years showing girls that play with her that they can be whatever and whoever they want. On the flip side, Ken, who also lives in Barbieland, is unnoticed except in relation to Barbie, which is however one step above any other doll in Barbieland, such as Allan. One day, Stereotypical Barbie begins to have feelings which she''s never experienced which leads to her world seemingly falling apart. Weird Barbie determines that there is something happening in the real world with someone playing with her being unhappy leading to Stereotypical Barbie reluctantly heading to the real world to rectify what is happening with that person, she first needing to find this person. Much to Barbie''s chagrin, the original Ken, Beach Ken, tags along with her to the real world in he needing to survive in her presence. Beyond their mission to find this person, Barbie and Ken will find the real world unlike anything they know in Barbieland, especially in it being a male dominated society. While Barbie still has to find out what''s going on that made her come to the real world, Ken is finding a newfound control which he wants to bring back to Barbieland. If he is able to do so, the role of Barbie in the real world may be forever changed. On top of everything, executives at Mattel, primarily white men, discover that a "real life" Barbie and Ken doll have infiltrated the real world, their mission to capture the pair, but especially Barbie, to put them/her back in their/her place, namely in a manufacturer''s sealed box.','https://image.tmdb.org/t/p/original/iuFNMS8U5cb6xfzi51Dbkovj7vM.jpg','https://image.tmdb.org/t/p/original/mbYTRO33LJAgpCMrIn9ibiWHbMH.jpg','Won 1 Oscar. 208 wins & 437 nominations total','$636,238,421','PG-13')
,('Barfi!','13 Sep 2012',8.1,'151 minutes','Hindi','Movie','Set in the 1970s in a pretty corner of India, Barfi. is the story of three young people who learn that love can neither be defined nor contained by society''s norms of normal and abnormal. Barfi, a hearing and speech impaired boy falls in love with Shruti. In spite of her deep affection for Barfii, Shruti gives into societal and parental pressure to marry a ''normal'' man and lead a ''normal'' life. Many years later their paths cross once again when Barfi, now in love with Jhilmil, is on the run from the police. Barfi is desperately seeking Jhilmil, who has gone missing. Shruti''s realization that Jhilmil is autistic makes her recognize that true love is really blind. Caught in a cat and mouse game, in the search for the girl Barfi loves, Shruti realizes that she is still in love with him.','https://image.tmdb.org/t/p/original/3dMcxaL0oD79nc31FQK5D7YZ3Kv.jpg','https://image.tmdb.org/t/p/original/dVUBKQMehxVnEQMpcOPw3OQqNMF.jpg','68 wins & 40 nominations total','$2,804,874','Not Rated')
,('Les Mis√©rables','22 Feb 2013',7.5,'158 minutes','English','Movie','Jean Valjean, known as Prisoner 24601, is released from prison and breaks parole to create a new life for himself while evading the grip of the persistent Inspector Javert. Set in post-revolutionary France, the story reaches resolution against the background of the June Rebellion.','https://image.tmdb.org/t/p/original/6CuzBs2Lb8At7qQr64mLXg2RYRb.jpg','https://image.tmdb.org/t/p/original/jd3Z2sAPDavjRxFhfOak6kCrUIG.jpg','Won 3 Oscars. 85 wins & 177 nominations total','$149,260,140','PG-13')
,('21 Jump Street','14 Mar 2012',7.2,'109 minutes','English','Movie','In 2005, Schmidt and Jenko are high school students, one an honor roll geek, the other a cool, athletic underachiever. By 2012, they are rookie cops, paired together, on bike patrol yearning to make arrests. After a screw up, they''re sent undercover back to high school to find the source of a dangerous synthetic drug. They mix up their names, and Schmidt gets the no-brainer classes where he auditions for Peter Pan and falls in love with Wendy; Jenko gets AP classes where he falls in with high-achieving dweebs. This second chance at high school gives Schmidt delusions of grandeur, which threaten the operation. Can they sort out their relationship as they stumble onto the bad guys?','https://image.tmdb.org/t/p/original/8v3Sqv9UcIUC4ebmpKWROqPBINZ.jpg','https://image.tmdb.org/t/p/original/lxCUDgZ54myV7goBrkpFoHRt9Ms.jpg','11 wins & 21 nominations total','$138,447,667','R')
,('Superbad','17 Aug 2007',7.6,'113 minutes','English','Movie','Seth and Evan are best friends, inseparable, navigating the last weeks of high school. Usually shunned by the popular kids, Seth and Evan luck into an invitation to a party, and spend a long day, with the help of their nerdy friend Fogell, trying to score enough alcohol to lubricate the party and inebriate two girls, Jules and Becca, so they can kick-start their sex lives and go off to college with a summer full of experience and new skills. Their quest is complicated by Fogell''s falling in with two inept cops who both slow and assist the plan. If they do get the liquor to the party, what then? Is sex the only rite of passage at hand?','https://image.tmdb.org/t/p/original/ek8e8txUyUwd2BNqj6lFEerJfbq.jpg','https://image.tmdb.org/t/p/original/mFt3dvxKugYPgUQgV16M6K2nEtc.jpg','11 wins & 24 nominations','$121,463,226','R')
,('Easy A','16 Sep 2010',7,'92 minutes','English','Movie','After a little white lie about losing her virginity gets out, a clean cut high school girl sees her life paralleling Hester Prynne''s in "The Scarlet Letter," which she is currently studying in school - until she decides to use the rumor mill to advance her social and financial standing.','https://image.tmdb.org/t/p/original/v5f1qO6NJnxWgONgkYg21TW39DT.jpg','https://image.tmdb.org/t/p/original/30rvmoEBqovm723agDJ3QddWXcY.jpg','9 wins & 22 nominations total','$58,401,464','PG-13')
,('Uncut Gems','25 Dec 2019',7.4,'135 minutes','English, Hebrew','Movie','Howard Ratner is a charismatic New York City jeweler always on the lookout for the next big score. When he makes a series of high-stakes bets that could lead to the windfall of a lifetime, Howard must perform a precarious high-wire act, balancing business, family, and encroaching adversaries on all sides, in his relentless pursuit of the ultimate win.','https://image.tmdb.org/t/p/original/6XN1vxHc7kUSqNWtaQKN45J5x2v.jpg','https://image.tmdb.org/t/p/original/5qTZGBHJNq6riBliYtOnH4yUN6x.jpg','28 wins & 96 nominations total','$50,023,780','R')
,('Begin Again','03 Jul 2014',7.4,'104 minutes','English','Movie','Gretta (Keira Knightley) and her long-time boyfriend Dave (Adam Levine) are college sweethearts and songwriting partners who decamp for New York when he lands a deal with a major label. But the trappings of his new-found fame soon tempt Dave to stray, and a reeling, lovelorn Gretta is left on her own. Her world takes a turn for the better when Dan (Mark Ruffalo), a disgraced record-label exec, stumbles upon her performing on an East Village stage and is immediately captivated by her raw talent. From this chance encounter emerges an enchanting portrait of a mutually transformative collaboration, set to the soundtrack of a summer in New York City.','https://image.tmdb.org/t/p/original/qx4HXHXt528hS4rwePZbZo20xqZ.jpg','https://image.tmdb.org/t/p/original/Z3ocAumcK9Iooc9BMlu7wE7XX9.jpg','Nominated for 1 Oscar. 5 wins & 18 nominations total','$16,170,632','R')
,('Zodiac','02 Mar 2007',7.7,'157 minutes','English','Movie','A serial killer in the San Francisco Bay Area taunts police with his letters and cryptic messages. We follow the investigators and reporters in this lightly fictionalized account of the true 1970s'' case as they search for the murderer, becoming obsessed with the case. Based on Robert Graysmith''s book, the movie''s focus is the lives and careers of the detectives and newspaper people.','https://image.tmdb.org/t/p/original/6YmeO4pB7XTh8P8F960O1uA14JO.jpg','https://image.tmdb.org/t/p/original/elzsm8vIpYVh0s6ztFEKElqgXqe.jpg','3 wins & 71 nominations total','$33,080,084','R')
,('Free Guy','11 Aug 2021',7.1,'115 minutes','English, Japanese, German','Movie','In the extremely popular video game, Free City, a NPC named Guy learns the true nature of his existence when he meets the girl of his dreams, a human player. This player''s interactions with Guy has massive affects on him, the game, and real world as they play it.','https://image.tmdb.org/t/p/original/6PFJrMvoQwBxQITLYHj09VeJ37q.jpg','https://image.tmdb.org/t/p/original/rOJb0yQOCny0bPjg8bCLw8DyAD7.jpg','Nominated for 1 Oscar. 5 wins & 29 nominations total','$121,626,598','PG-13')
,('Guardians of the Galaxy Vol. 3','03 May 2023',7.9,'150 minutes','English, Russian','Movie','In Marvel Studios "Guardians of the Galaxy Vol. 3" our beloved band of misfits are looking a bit different these days. Peter Quill, still reeling from the loss of Gamora, must rally his team around him to defend the universe along with protecting one of their own. A mission that, if not completed successfully, could quite possibly lead to the end of the Guardians as we know them.','https://image.tmdb.org/t/p/original/r2J02Z2OpNTctfOSN1Ydgii51I3.jpg','https://image.tmdb.org/t/p/original/5YZbUmjbMa3ClvSW1Wj3D6XGolb.jpg','Nominated for 1 Oscar. 11 wins & 88 nominations total','$358,995,815','PG-13')
,('Date Night','07 Apr 2010',6.3,'88 minutes','English, Hebrew','Movie','Phil and Claire Foster are a couple who have been married for several years. Their days consists of them taking care of their children and going to work and coming home and going to bed. But they find time to have a date night wherein they go out and spend some time together. When another couple they know announce that they''re separating because they''re in a rut, Phil feels that he and Claire could be too. So when date night comes Phil decides to do something different. So they go into the city and try to get into a new popular restaurant. But when it''s full and still wanting to do this, Phil decides to take the reservation of a couple who doesn''t show up. While they''re having dinner two men approach them and instructs them to stand up and go with them. They think the men are with the restaurant and want to talk to them about taking someone else''s reservation. But it appears the couple whose reservation they took crossed someone and the two men work for this person. The men are after something, but whatever it is they don''t have it.','https://image.tmdb.org/t/p/original/ucEWhj32KEDcFKHMWVeu8r1Q4ld.jpg','https://image.tmdb.org/t/p/original/hZm2bAT9fB4EL93flj1fnrYXHdp.jpg','4 wins & 8 nominations total','$98,711,404','PG-13')
,('Tag','14 Jun 2018',6.5,'100 minutes','English, Spanish','Movie','Childhood friends Jerry (Jeremy Renner), Callahan (Jon Hamm), Randy (Jake Johnson), Sable (Hannibal Buress) and Hoagie (Ed Helms) have been competing in the same game of tag for 30 years. When Jerry gets married, he attempts to retire from the intense annual game without ever being "it," causing the other four to band together and go to extreme lengths to finally tag him. Directed by Jeff Tomsic. Inspired by the Wall Street Journal article "It Takes Planning, Caution to Avoid Being It."','https://image.tmdb.org/t/p/original/eXXpuW2xaq5Aen9N5prFlARVIvr.jpg','https://image.tmdb.org/t/p/original/n8UzZ7gd3lmsBeYAH539pfnwGwu.jpg','3 nominations total','$54,730,625','R')
,('The Nice Guys','03 Jun 2016',7.4,'116 minutes','English, German','Movie','In 1977 Los Angeles, single father and licensed PI Holland March (Gosling) is hired to investigate the apparent suicide of famous porn star Misty Mountains. As the trail leads him to track down a girl named Amelia (Qualley), he encounters less-licensed and less-hands-off private eye Jackson Healey (Russell Crowe) and his brass knuckles, both hired by the young hippie. However, the situation takes a turn for the worse when Amelia vanishes and it becomes apparent that March wasn''t the only interested party. As both men are forced to team up, they need to take on a world filled with eccentric goons, strippers dressed as mermaids, and even a possible government conspiracy.','https://image.tmdb.org/t/p/original/clq4So9spa9cXk3MZy2iMdqkxP2.jpg','https://image.tmdb.org/t/p/original/oLp6ueqQXNWvWCFwrb6tXDnH0Ye.jpg','9 wins & 34 nominations total','$36,261,763','R')
,('The Big Sick','13 Jul 2017',7.5,'120 minutes','English, Urdu','Movie','Kumail (Kumail Nanjiani), in the middle of becoming a budding stand-up comedian, meets Emily (Zoe Kazan). Meanwhile, a sudden illness sets in forcing Emily to be put into a medically-induced coma. Kumail must navigate being a comedian, dealing with tragic illness, and placating his family''s desire to let them fix him up with a spouse, while contemplating and figuring out who he really is and what he truly believes.','https://image.tmdb.org/t/p/original/9fJTT8pBxxQsFILJHTtHhdYFr77.jpg','https://image.tmdb.org/t/p/original/fYI8WX2DquAHMqwh5mOMxc6RU5j.jpg','Nominated for 1 Oscar. 19 wins & 101 nominations total','$42,873,127','R')
,('Oppenheimer','21 Jul 2023',8.3,'180 minutes','English, German, Italian, Dutch','Movie','A dramatization of the life story of J. Robert Oppenheimer, the physicist who had a large hand in the development of the atomic bomb, thus helping end World War 2. We see his life from university days all the way to post-WW2, where his fame saw him embroiled in political machinations.','https://image.tmdb.org/t/p/original/8Gxv8gSFCU0XGDykEGv7zR1n2ua.jpg','https://image.tmdb.org/t/p/original/neeNHeXjMF5fXoCJRsOmkNGC7q.jpg','Won 7 Oscars. 361 wins & 371 nominations total','$330,050,270','R')
,('The Pianist','17 Sep 2002',8.5,'150 minutes','English, German, Russian','Movie','In this adaptation of the autobiography "The Pianist: The Extraordinary True Story of One Man''s Survival in Warsaw, 1939-1945," Wladyslaw Szpilman, a Polish Jewish radio station pianist, sees Warsaw change gradually as World War II begins. Szpilman is forced into the Warsaw Ghetto, but is later separated from his family during Operation Reinhard. From this time until the concentration camp prisoners are released, Szpilman hides in various locations among the ruins of Warsaw.','https://image.tmdb.org/t/p/original/2hFvxCCWrTmCYwfy7yum0GKRi3Y.jpg','https://image.tmdb.org/t/p/original/dVr11o9or7AS8AMPfwjSpEU83iU.jpg','Won 3 Oscars. 57 wins & 74 nominations total','$32,590,750','R')
,('Marriage Story','28 Nov 2019',7.9,'137 minutes','English, Spanish','Movie','After several unsuccessful marital mediation sessions and fruitless attempts to make it work, Charlie, a talented theatre director from New York City, and Nicole, a former movie actress from Los Angeles, want to call it quits. However, divorce is never easy, especially after ten years of marriage and an eight-year-old boy. As slick and absurdly costly lawyers step in, mutual accusations and bitter resentment threaten an amicable separation. And now, things have got even messier. But why do the painful wounds of passion run so deep? Is love always meant to last forever in the end?','https://image.tmdb.org/t/p/original/2JRyCKaRKyJAVpsIHeLvPw5nHmw.jpg','https://image.tmdb.org/t/p/original/wu7nX9BQwDAnDdQutINEP2LfTSR.jpg','Won 1 Oscar. 129 wins & 276 nominations total',NULL,'R')
,('Babylon','23 Dec 2022',7.1,'189 minutes','English, Spanish, Italian, Cantonese, French, Hungarian, German','Movie','An original epic set in 1920s Los Angeles led by Brad Pitt, Margot Robbie and Diego Calva, with an ensemble cast including Jovan Adepo, Li Jun Li and Jean Smart. A tale of outsized ambition and outrageous excess, it traces the rise and fall of multiple characters during an era of unbridled decadence and depravity in early Hollywood.','https://image.tmdb.org/t/p/original/wjOHjWCUE0YzDiEzKv8AfqHj3ir.jpg','https://image.tmdb.org/t/p/original/5fxTB08O7CW1hAcN2MWOKodp1h1.jpg','Nominated for 3 Oscars. 46 wins & 161 nominations total','$15,351,455','R')
,('Manchester by the Sea','17 Nov 2016',7.8,'137 minutes','English','Movie','Lee Chandler is a brooding, irritable loner who works as a handyman for a Boston apartment block. One damp winter day he gets a call summoning him to his hometown, north of the city. His brother''s heart has given out suddenly, and he''s been named guardian to his 16-year-old nephew. As if losing his only sibling and doubts about raising a teenager weren''t enough, his return to the past re-opens an unspeakable tragedy.','https://image.tmdb.org/t/p/original/o9VXYOuaJxCEKOxbA86xqtwmqYn.jpg','https://image.tmdb.org/t/p/original/wj2nLa0vfS0SLu2vJ6ABTRhMrok.jpg','Won 2 Oscars. 128 wins & 268 nominations total','$47,695,371','R')
,('Birdman or (The Unexpected Virtue of Ignorance)','13 Nov 2014',7.7,'119 minutes','English','Movie','Actor Riggan Thomson is most famous for his movie role from over twenty years ago of the comic book superhero Birdman in the blockbuster movie of the same name and its two equally popular sequels. His association with the role took over his life, where Birdman is more renowned than "Riggan Thomson" the actor. Now past middle age, Riggan is trying to establish himself as a true artist by writing, directing, starring in and co-producing with his best friend Jake what is his Broadway debut, an adaptation of Raymond Carver''s story, What We Talk About When We Talk About Love. He is staking his name, what little artistic reputation that comes with that name and his life savings on the project, and as such will do anything needed to make the play a success. As he and Jake go through the process of the previews toward opening night, Riggan runs into several issues: needing to find a replacement for the integral supporting male role the night before the first preview; hiring the talented Broadway name, Mike Shiner, for that role, Mike who ends up being difficult to work with and who may end up overshadowing Riggan in the play; having to deal potentially with a lawsuit based on one of his actions to ensure success; needing to be there for his daughter, Sam, who he has hired to be his production assistant and who has just come out of drug rehab; and pleasing the New York Times critic, Tabitha Dickinson, who wants to use any excuse to give the play a scathing review which in turn would close the show after the opening night performance. But Riggan''s biggest problem may be his own insecurities, which are manifested by him constantly hearing what he believes to be the truth from the voice of his Birdman character, who he often battles both internally and externally.','https://image.tmdb.org/t/p/original/rHUg2AuIuLSIYMYFgavVwqt1jtc.jpg','https://image.tmdb.org/t/p/original/s0OrExdg7i3RLR7oqzHRk4q2kL4.jpg',NULL,NULL,'TV-G')
,('500 Days of Summer','07 Aug 2009',7.7,'95 minutes','English, French, Swedish','Movie','After it looks as if she''s left his life for good this time, Tom Hansen reflects back on the just over one year that he knew Summer Finn. For Tom, it was love at first sight when she walked into the greeting card company where he worked, she the new administrative assistant. Soon, Tom knew that Summer was the woman with whom he wanted to spend the rest of his life. Although Summer did not believe in relationships or boyfriends - in her assertion, real life will always ultimately get in the way - Tom and Summer became more than just friends. Through the trials and tribulations of Tom and Summer''s so-called relationship, Tom could always count on the advice of his two best friends, McKenzie and Paul. However, it is Tom''s adolescent sister, Rachel, who is his voice of reason. After all is said and done, Tom is the one who ultimately has to make the choice to listen or not.','https://image.tmdb.org/t/p/original/qXAuQ9hF30sQRsXf40OfRVl0MJZ.jpg','https://image.tmdb.org/t/p/original/1M2i4Mxd03elGOTmEkIvqrHfmyS.jpg',NULL,NULL,'Not Rated')
,('The Prestige','19 Oct 2006',8.5,'130 minutes','English','Movie','Set in London in the 1800s, two rival magicians read each others diary containing the secrets of their magic tricks and personal life. As we go back in time when the diaries were written, both magicians become obsessed with their rival''s best trick. The tricks, as shown to the audience, look the same, but neither magician can figure out how his opponent does it.','https://image.tmdb.org/t/p/original/bdN3gXuIZYaJP7ftKK2sU0nPtEA.jpg','https://image.tmdb.org/t/p/original/yCnJT53HMXAK87xzPAdjdYhZ3JE.jpg','Nominated for 2 Oscars. 6 wins & 44 nominations total','$53,089,891','PG-13')
,('Jojo Rabbit','24 Oct 2019',7.9,'108 minutes','English, German','Movie','A World War II satire that follows a lonely German boy named Jojo (Roman Griffin Davis) whose world view is turned upside down when he discovers his single mother (Scarlett Johansson) is hiding a young Jewish girl (Thomasin McKenzie) in their attic. Aided only by his idiotic imaginary friend, Adolf Hitler (Taika Waititi), Jojo must confront his blind nationalism.','https://image.tmdb.org/t/p/original/7GsM4mtM0worCtIVeiQt28HieeN.jpg','https://image.tmdb.org/t/p/original/oT2DbUVEUc1AIgBBJwVl3hm0ID6.jpg','Won 1 Oscar. 52 wins & 192 nominations total','$33,370,906','PG-13')
,('Get Out','24 Feb 2017',7.8,'104 minutes','English, Swahili','Movie','Chris and his girlfriend Rose go upstate to visit her parents for the weekend. At first, Chris reads the family''s overly accommodating behavior as nervous attempts to deal with their daughter''s interracial relationship, but as the weekend progresses, a series of increasingly disturbing discoveries lead him to a truth that he never could have imagined.','https://image.tmdb.org/t/p/original/tFXcEccSQMf3lfhfXKSU9iRBpa3.jpg','https://image.tmdb.org/t/p/original/o8dPH0ZSIyyViP6rjRX1djwCUwI.jpg','Won 1 Oscar. 154 wins & 214 nominations total','$176,196,665','R')
,('Baby Driver','28 Jun 2017',7.5,'113 minutes','English, American Sign Language','Movie','Baby is a young and partially hearing impaired getaway driver who can make any wild move while in motion with the right track playing. It''s a critical talent he needs to survive his indentured servitude to the crime boss, Doc, who values his role in his meticulously planned robberies. However, just when Baby thinks he is finally free and clear to have his own life with his new girlfriend, Debora, Doc coerces him back for another job. Now saddled with a crew of thugs too violently unstable to keep to Doc''s plans, Baby finds himself and everything he cares for in terrible danger. To survive and escape the coming maelstrom, it will take all of Baby''s skill, wits and daring, but even on the best track, can he make it when life is forcing him to face the music?','https://image.tmdb.org/t/p/original/rmnQ9jKW72bHu8uKlMjPIb2VLMI.jpg','https://image.tmdb.org/t/p/original/oVD3ClJBoomSQHtnJPAlMfes8YD.jpg','Nominated for 3 Oscars. 43 wins & 66 nominations total','$107,825,862','R')
,('The Social Network','01 Oct 2010',7.8,'120 minutes','English, French','Movie','On a fall night in 2003, Harvard undergrad and computer programming genius Mark Zuckerberg sits down at his computer and heatedly begins working on a new idea. In a fury of blogging and programming, what begins in his dorm room soon becomes a global social network and a revolution in communication. A mere six years and 500 million friends later, Mark Zuckerberg is the youngest billionaire in history... but for this entrepreneur, success leads to both personal and legal complications.','https://image.tmdb.org/t/p/original/n0ybibhJtQ5icDqTp8eRytcIHJx.jpg','https://image.tmdb.org/t/p/original/cq9N64ucEtfIc3eMxNr1VzY9LH9.jpg','Won 3 Oscars. 174 wins & 188 nominations total','$96,962,694','PG-13')
,('Inglourious Basterds','19 Aug 2009',8.4,'153 minutes','English, German, French, Italian','Movie','In German-occupied France, young Jewish refugee Shosanna Dreyfus witnesses the slaughter of her family by Colonel Hans Landa. Narrowly escaping with her life, she plots her revenge several years later when German war hero Fredrick Zoller takes a rapid interest in her and arranges an illustrious movie premiere at the theater she now runs. With the promise of every major Nazi officer in attendance, the event catches the attention of the "Basterds", a group of Jewish-American guerrilla soldiers led by the ruthless Lt. Aldo Raine. As the relentless executioners advance and the conspiring young girl''s plans are set in motion, their paths will cross for a fateful evening that will shake the very annals of history.','https://image.tmdb.org/t/p/original/7sfbEnaARXDDhKm0CZ7D7uc2sbo.jpg','https://image.tmdb.org/t/p/original/wIqOKSfTi1LDWUjeEqe5UKXY1TD.jpg','Won 1 Oscar. 134 wins & 173 nominations total','$120,540,719','R')
,('Lady Bird','01 Dec 2017',7.4,'94 minutes','English, Spanish','Movie','Christine "Lady Bird" McPherson is a high-school senior from the "wrong side of the tracks". She longs for adventure, sophistication, and opportunity, but finds little of that in her Sacramento Catholic high school. Her senior year improves: she finds her first romance, participates in the school play, and--most importantly--applies for college.','https://image.tmdb.org/t/p/original/gl66K7zRdtNYGrxyS2YDUP5ASZd.jpg','https://image.tmdb.org/t/p/original/pcWxKfFNCznTKYy0E8M9nG1cwL4.jpg','Nominated for 5 Oscars. 124 wins & 228 nominations total','$48,958,273','R')
,('10 Things I Hate About You','31 Mar 1999',7.3,'97 minutes','English, French','Movie','Adapted from William Shakespeare''s play "The Taming of the Shrew," 10 Things I Hate About You starts off with Cameron, new student at Padua High, sitting in the office of the quirky guidance counselor Ms. Perky. He is then shown around the school by Michael, who will become his best friend. During his tour is when Cameron first sees Bianca Stratford, a beautiful sophomore with one problem: she isn''t allowed to date. And neither is her "shrew" sister, Katarina, a senior who loves indie rock and feminist prose and hates conformity. But Kat and Bianca''s father alters his house rule: now, Bianca can date... as long as Kat has a date, too. Now, in order for Cameron to date Bianca, he has to find someone to date Kat. So Michael helps him enlist the help of pretty-boy/jerk/model Joey Donner, tricking him into thinking that *he* will get to take Bianca out if he pays someone to take out Kat. His choice: Patrick Verona, a bad-boy with a mysterious reputation--some say he ate a live duck once, others that he lit a state trooper on fire, and even more claim that he had a brief porn career. Will Patrick win Kat''s heart? Will Cameron win Bianca''s? Or will everything hit the fan...?','https://image.tmdb.org/t/p/original/ujERk3aKABXU3NDXOAxEQYTHe9A.jpg','https://image.tmdb.org/t/p/original/yvPbncYhMu9FfTjDhq0N5lgnVkO.jpg','2 wins & 13 nominations total','$38,178,166','PG-13')
,('Scott Pilgrim vs. the World','12 Aug 2010',7.5,'112 minutes','English','Movie','Scott Pilgrim plays in a band which aspires to success. He dates Knives Chau, a high-school girl five years younger, and he hasn''t recovered from being dumped by his former girlfriend, now a success with her own band. When Scott falls for Ramona Flowers, he has trouble breaking up with Knives and tries to romance Ramona. As if juggling two women wasn''t enough, Ramona comes with baggage: seven ex-lovers, with each of whom Scott must do battle to the death in order to win Ramona.','https://image.tmdb.org/t/p/original/g5IoYeudx9XBEfwNL0fHvSckLBz.jpg','https://image.tmdb.org/t/p/original/7W9xm2YTq54rfLFimIniMrywShv.jpg','18 wins & 66 nominations total','$33,525,605','PG-13')
,('Inception','11 Sep 2010',8.8,'148 minutes','English, Japanese, French','Movie','Dom Cobb is a skilled thief, the absolute best in the dangerous art of extraction, stealing valuable secrets from deep within the subconscious during the dream state, when the mind is at its most vulnerable. Cobb''s rare ability has made him a coveted player in this treacherous new world of corporate espionage, but it has also made him an international fugitive and cost him everything he has ever loved. Now Cobb is being offered a chance at redemption. One last job could give him his life back but only if he can accomplish the impossible, inception. Instead of the perfect heist, Cobb and his team of specialists have to pull off the reverse: their task is not to steal an idea, but to plant one. If they succeed, it could be the perfect crime. But no amount of careful planning or expertise can prepare the team for the dangerous enemy that seems to predict their every move. An enemy that only Cobb could have seen coming.','https://image.tmdb.org/t/p/original/ljsZTbVsrQSqZgWeep2B1QiDKuh.jpg','https://image.tmdb.org/t/p/original/8ZTVqvKDQ8emSGUEMjsS4yHAwrp.jpg','Won 4 Oscars. 159 wins & 220 nominations total','$292,587,330','PG-13')
,('The Grand Budapest Hotel','26 Feb 2014',8.1,'99 minutes','English, French, German','Movie','This movie recounts the adventures of M. Gustave, a legendary concierge at a famous European hotel between the wars, and Zero Moustafa, the lobby boy who becomes his most trusted friend. The story involves the theft and recovery of a priceless Renaissance painting and the battle for an enormous family fortune - all against the backdrop of a suddenly and dramatically changing continent.','https://image.tmdb.org/t/p/original/eWdyYQreja6JGCzqHWXpWHDrrPo.jpg','https://image.tmdb.org/t/p/original/jK65srQczOKTpW62wPxwwKztGgE.jpg','Won 4 Oscars. 135 wins & 227 nominations total','$59,301,324','R')
,('The Dark Knight','16 Jul 2008',9,'152 minutes','English, Mandarin','Movie','Set within a year after the events of Batman Begins (2005), Batman, Lieutenant James Gordon, and new District Attorney Harvey Dent successfully begin to round up the criminals that plague Gotham City, until a mysterious and sadistic criminal mastermind known only as "The Joker" appears in Gotham, creating a new wave of chaos. Batman''s struggle against The Joker becomes deeply personal, forcing him to "confront everything he believes" and improve his technology to stop him. A love triangle develops between Bruce Wayne, Dent, and Rachel Dawes.','https://image.tmdb.org/t/p/original/qJ2tW6WMUDux911r6m7haRef0WH.jpg','https://image.tmdb.org/t/p/original/oOv2oUXcAaNXakRqUPxYq5lJURz.jpg','Won 2 Oscars. 164 wins & 165 nominations total','$534,987,076','PG-13')
,('Eternal Sunshine of the Spotless Mind','19 Mar 2004',8.3,'108 minutes','English','Movie','Much to his surprise, timid Joel Barish is shocked to discover that the love of his life, sparky Clementine, has had him erased from her memory. As a result, hurt and angry, Joel wants to pay her back in the same coin, going as far as to undergo a painless but intricate medical procedure to do the same. However, poor Joel is utterly unaware that darkness is an essential part of the light. And as the once-cherished recollections of Clementine gradually fade away, giving way to a soulless black void, something unexpected happens. Now Joel has second thoughts, toying with the idea of stopping the irreversible process. Who said ignorance is bliss?','https://image.tmdb.org/t/p/original/5MwkWH9tYHv3mV9OdYTMR5qreIz.jpg','https://image.tmdb.org/t/p/original/W1ffLQGHoxfAOq0ZYdPtJlvAdb.jpg','Won 1 Oscar. 73 wins & 111 nominations total','$34,400,301','R')
,('Spider-Man: Into the Spider-Verse','12 Dec 2018',8.4,'117 minutes','English, Spanish','Movie','Phil Lord and Christopher Miller, the creative minds behind The Lego Movie and 21 Jump Street, bring their unique talents to a fresh vision of a different Spider-Man Universe, with a groundbreaking visual style that''s the first of its kind. "Spider-Man(TM): Into the Spider-Verse" introduces Brooklyn teen Miles Morales (Shameik Moore), and the limitless possibilities of the Spider-Verse, where more than one can wear the mask.','https://image.tmdb.org/t/p/original/iiZZdoQBEYBv6id8su7ImL0oCbD.jpg','https://image.tmdb.org/t/p/original/8mnXR9rey5uQ08rZAvzojKWbDQS.jpg','Won 1 Oscar. 85 wins & 61 nominations total','$190,241,310','PG')
,('Interstellar','14 Nov 2014',8.7,'169 minutes','English','Movie','In the near future around the American Midwest, Cooper, an ex-science engineer and pilot, is tied to his farming land with his daughter Murph and son Tom. As devastating sandstorms ravage Earth''s crops, the people of Earth realize their life here is coming to an end as food begins to run out. Eventually stumbling upon a N.A.S.A. base 6 hours from Cooper''s home, he is asked to go on a daring mission with a few other scientists into a wormhole because of Cooper''s scientific intellect and ability to pilot aircraft unlike the other crew members. In order to find a new home while Earth decays, Cooper must decide to either stay, or risk never seeing his children again in order to save the human race by finding another habitable planet.','https://image.tmdb.org/t/p/original/gEU2QniE6E77NI6lCU6MxlNBvIx.jpg','https://image.tmdb.org/t/p/original/8sNiAPPYU14PUepFNeSNGUTiHW.jpg','Won 1 Oscar. 44 wins & 148 nominations total','$203,227,580','PG-13')
,('tick, tick... BOOM!','12 Nov 2021',7.5,'115 minutes','English','Movie','The film follows Jon (Andrew Garfield), a young theater composer who''s waiting tables at a New York City diner in 1990 while writing what he hopes will be the next great American musical. Days before he''s due to showcase his work in a make-or-break performance, Jon is feeling the pressure from everywhere: from his girlfriend Susan, who dreams of an artistic life beyond New York City; from his friend Michael, who has moved on from his dream to a life of financial security; amidst an artistic community being ravaged by the AIDS epidemic. With the clock ticking, Jon is at a crossroads and faces the question everyone must reckon with: What are we meant to do with the time we have?','https://image.tmdb.org/t/p/original/DPmfcuR8fh8ROYXgdjrAjSGA0o.jpg','https://image.tmdb.org/t/p/original/rKe3MR2u4ZZ0y9uKivzKJRrqBCe.jpg','Nominated for 2 Oscars. 38 wins & 116 nominations total',NULL,'PG-13')
,('La La Land','09 Dec 2016',8,'128 minutes','English, Cantonese','Movie','Aspiring actress serves lattes to movie stars in between auditions and jazz musician Sebastian scrapes by playing cocktail-party gigs in dingy bars. But as success mounts, they are faced with decisions that fray the fragile fabric of their love affair, and the dreams they worked so hard to maintain in each other threaten to rip them apart.','https://image.tmdb.org/t/p/original/uDO8zWDhfWwoFdKS4fzkUJt0Rf0.jpg','https://image.tmdb.org/t/p/original/nlPCdZlHtRNcF6C9hzUH4ebmV1w.jpg','Won 6 Oscars. 242 wins & 307 nominations total','$151,101,803','PG-13')
,('Nope','21 Jul 2022',6.8,'130 minutes','English, Spanish','Movie','After random objects falling from the sky result in the death of their father, ranch-owning siblings OJ and Emerald Haywood attempt to capture video evidence of an unidentified flying object with the help of tech salesman Angel Torres and documentarian Antlers Holst.','https://image.tmdb.org/t/p/original/AcKVlWaNVVVFQwro3nLXqPljcYA.jpg','https://image.tmdb.org/t/p/original/5N8LOeRzt7LcZIhPbNVaCsVOPdT.jpg','43 wins & 181 nominations total','$123,277,080','R')
,('Bullet Train','03 Aug 2022',7.3,'127 minutes','English, Japanese, Spanish, Russian','Movie','Unlucky assassin Ladybug (Brad Pitt) is determined to do his job peacefully after one too many gigs has gone off the rails. Fate has other plans, however: Ladybug''s latest mission puts him on a collision course with lethal adversaries from around the globe--all with connected, yet conflicting, objectives--on the world''s fastest train. The end of the line is just the beginning in this non-stop thrill-ride through modern-day Japan.','https://image.tmdb.org/t/p/original/j8szC8OgrejDQjjMKSVXyaAjw3V.jpg','https://image.tmdb.org/t/p/original/y2Ca1neKke2mGPMaHzlCNDVZqsK.jpg','2 wins & 20 nominations total','$103,368,602','R')
,('Everything Everywhere All at Once','24 Mar 2022',7.8,'139 minutes','English, Mandarin, Cantonese','Movie','With her laundromat teetering on the brink of failure and her marriage to wimpy husband Waymond on the rocks, overworked Evelyn Wang struggles to cope with everything, including a tattered relationship with her judgmental father and daughter. And as if facing a gloomy midlife crisis wasn''t enough, Evelyn must brace herself up for an unpleasant meeting with an impersonal bureaucrat: Deirdre, the shabbily dressed IRS auditor. However, as the stern agent loses patience, an inexplicable multiverse rift becomes an eye-opening exploration of parallel realities. Will Evelyn jump down the rabbit hole? But how many stars are in the universe? Can weary Evelyn fathom the irrepressible force of possibilities, tap into newfound powers, and prevent an evil entity from destroying the thin, countless layers of the unseen world?','https://image.tmdb.org/t/p/original/u68AjlvlutfEIcpmbYpKcdi09ut.jpg','https://image.tmdb.org/t/p/original/ss0Os3uWJfQAENILHZUdX8Tt1OC.jpg','Won 7 Oscars. 411 wins & 398 nominations total','$77,191,785','R')
,('The Banshees of Inisherin','20 Oct 2022',7.7,'114 minutes','English, Latin','Movie','Set on a remote island off the west coast of Ireland, THE BANSHEES OF INISHERIN follows lifelong friends Padraic (Colin Farrell) and Colm (Brendan Gleeson), who find themselves at an impasse when Colm unexpectedly puts an end to their friendship. A stunned Padraic, aided by his sister Siobhan (Kerry Condon) and troubled young islander Dominic (Barry Keoghan), endeavours to repair the relationship, refusing to take no for an answer. But Padraic''s repeated efforts only strengthen his former friend''s resolve and when Colm delivers a desperate ultimatum, events swiftly escalate, with shocking consequences.','https://image.tmdb.org/t/p/original/4yFG6cSPaCaPhyJ1vtGOtMD1lgh.jpg','https://image.tmdb.org/t/p/original/1vXD5HXqkhvsXFHE7KmCPZGPR1e.jpg','Nominated for 9 Oscars. 148 wins & 375 nominations total','$10,582,266','R')
,('Knives Out','29 Nov 2019',7.9,'130 minutes','English','Movie','When renowned crime novelist Harlan Thrombey (Christopher Plummer) is found dead at his estate just after his 85th birthday, the inquisitive and debonair Detective Benoit Blanc (Daniel Craig) is mysteriously enlisted to investigate. From Harlan''s disfunctional family to his devoted staff, Blanc sifts through a web of red herrings and self-serving lies to uncover the truth behind Harlan''s untimely death.','https://image.tmdb.org/t/p/original/pThyQovXQrw2m0s9x82twj48Jq4.jpg','https://image.tmdb.org/t/p/original/4HWAQu28e2yaWrtupFPGFkdNU7V.jpg','Nominated for 1 Oscar. 52 wins & 116 nominations total','$165,363,234','PG-13')
,('Chungking Express','14 Jul 1994',7.9,'102 minutes','Cantonese, Mandarin','Movie','Wong Kar-Wai''s movie about two love-struck cops is filmed in impressionistic splashes of motion and color. The first half deals with Cop 223, who has broken up with his girlfriend of five years. He purchases a tin of pineapples with an expiration date of May 1 each day for a month. By the end of that time, he feels that he will either be rejoined with his love or that it too will have expired forever. The second half shows Cop 663 dealing with his breakup with his flight attendant girlfriend. He talks to his apartment furnishings until he meets a new girl at a local lunch counter.','https://image.tmdb.org/t/p/original/43I9DcNoCzpyzK8JCkJYpHqHqGG.jpg','https://image.tmdb.org/t/p/original/vuglA60RqvpHK9rIcG8sXaiWw1L.jpg','8 wins & 19 nominations total','$600,200','PG-13')
,('The Pursuit of Happyness','15 Dec 2006',8,'117 minutes','English, Cantonese','Movie','Based on a true story about a man named Christopher Gardner. Gardner has invested heavily in a device known as a "bone density scanner". He feels like he has it made selling these devices. However, they do not sell well as they are marginally better than x-ray at a much higher price. As Gardner works to make ends meet, his wife leaves him and he loses his apartment. Forced to live out in the streets with his son, Gardner continues to sell bone density scanners while concurrently taking on an unpaid internship as a stockbroker, with slim chances for advancement to a paid position. Before he can receive pay, he needs to outshine the competition through 6 months of training, and to sell his devices to stay afloat.','https://image.tmdb.org/t/p/original/lBYOKAMcxIvuk9s9hMuecB9dPBV.jpg','https://image.tmdb.org/t/p/original/5jhG1lTgV0MS6tDkBMQSSitttTT.jpg','Nominated for 1 Oscar. 12 wins & 26 nominations total','$163,566,459','PG-13')
,('The Substance','18 Sep 2024',7.3,'141 minutes','English','Movie','Have you ever dreamed of a better version of yourself? You. Only better in every way. Seriously. You''ve got to try this new product. It''s called the Substance. It changed my life. It generates another you. A new, younger, more beautiful, more perfect you. And there''s only one rule: you share time. One week for you. One week for the new you. Seven days each. A perfect balance. Easy, right? If you respect the balance...what could possibly go wrong?','https://image.tmdb.org/t/p/original/cGm2qnmXx9tFabmzEIkJZjCJdQd.jpg','https://image.tmdb.org/t/p/original/t98L9uphqBSNn2Mkvdm3xSFCQyi.jpg','Won 1 Oscar. 133 wins & 278 nominations total','$17,539,788','R')
,('Joyland','18 Nov 2022',7.6,'126 minutes','Punjabi, Urdu','Movie','As the happily-patriarchal Rana family longs for the birth of a baby boy, the youngest of the Rana men secretly joins an erotic dance theatre and finds himself falling for a fiercely ambitious trans starlet. Their impossible love story slowly illuminates the entire Rana family''s desire for a sexual rebellion.','https://image.tmdb.org/t/p/original/7InKwVFgvIgfwuPKd0C3R9OeoN7.jpg','https://image.tmdb.org/t/p/original/aO4DsNW3YwldPl9CyChkWFLbFV8.jpg','18 wins & 19 nominations','$306,500',NULL)
,('Circus of Life','24 Jan 2020',7.6,'138 minutes','Urdu, Punjabi','Movie','A devout Muslim who writes composes, and even records hymns praising the Prophet, Muhammad Rahat Khawaja is a respected elderly man who works in real estate and takes care of his bedridden wife. One day, he attends the wedding of a friend''s son, where he inadvertently shows off a dance in front of his friends and family. His dance gets recorded and then uploaded to all social media platforms, which then also gets broadcasted on television. And the chaos begins to ensue in his quiet life. Other than his wife, no one else in the world understands Rahat''s circumstance. His daughters and neighbors criticize him, his friends turn their backs on him. Circus of Life provides a calm and detailed picture of challenging issues in a strict Muslim society and the search for the identity of an elderly man who gradually comes to realize his "minoritiness."','https://image.tmdb.org/t/p/original/in9zaAGE9aIw0DKtagJvsfqkknl.jpg','https://image.tmdb.org/t/p/original/r5oWoNpe4Ctd3MXXBVIQsmK0lP3.jpg',NULL,NULL,NULL)
,('The Godfather','24 Mar 1972',9.2,'175 minutes','English, Italian, Latin','Movie','The Godfather "Don" Vito Corleone is the head of the Corleone mafia family in New York. He is at the event of his daughter''s wedding. Michael, Vito''s youngest son and a decorated WWII Marine is also present at the wedding. Michael seems to be uninterested in being a part of the family business. Vito is a powerful man, and is kind to all those who give him respect but is ruthless against those who do not. But when a powerful and treacherous rival wants to sell drugs and needs the Don''s influence for the same, Vito refuses to do it. What follows is a clash between Vito''s fading old values and the new ways which may cause Michael to do the thing he was most reluctant in doing and wage a mob war against all the other mafia families which could tear the Corleone family apart.','https://image.tmdb.org/t/p/original/3bhkrj58Vtu7enYsRolD1fZdja1.jpg','https://image.tmdb.org/t/p/original/tmU7GeKVybMWFButWEGl2M4GeiP.jpg','Won 3 Oscars. 31 wins & 31 nominations total','$136,381,073','R')
,('Pulp Fiction','10 Sep 1994',8.9,'154 minutes','English, Spanish, French','Movie','Jules Winnfield (Samuel L. Jackson) and Vincent Vega (John Travolta) are two hitmen who are out to retrieve a suitcase stolen from their employer, mob boss Marsellus Wallace (Ving Rhames). Wallace has also asked Vincent to take his wife Mia (Uma Thurman) out a few days later when Wallace himself will be out of town. Butch Coolidge (Bruce Willis) is an aging boxer who is paid by Wallace to lose his fight. The lives of these seemingly unrelated people are woven together comprising of a series of funny, bizarre and uncalled-for incidents.','https://image.tmdb.org/t/p/original/vQWk5YBFWF4bZaofAbv0tShwBvQ.jpg','https://image.tmdb.org/t/p/original/suaEOtk1N1sgg2MTM7oZd2cfVp3.jpg','Won 1 Oscar. 69 wins & 72 nominations total','$107,928,762','R')
,('October','12 Apr 2018',7.6,'115 minutes','Hindi','Movie','Dan (Varun Dhawan) is living the life of any carefree 21 year old, revolving around a bunch of friends and fellow hotel interns who feed off each other''s everyday moments, their ups and downs. Shiuli (Banita Sandhu) is one such intern at the same hotel, who at times is at a receiving end of Dan''s audaciousness. Life goes on until a sudden turn of events smashes Dan and Shiuli''s lives together, into a bond that''s unlike any 21 year olds. The emotional connection between them goes through a metamorphoses that brings out a form of love that''s unlike any other eventually leading to an internal awakening. October is not a Love Story, but rather a story about love.','https://image.tmdb.org/t/p/original/nHUBPUwXkHinq2rIXnnCHsPylD1.jpg','https://image.tmdb.org/t/p/original/6Z3e850z4TNBUo4OviVRfwjK5O3.jpg',NULL,NULL,NULL)
,('Dune: Part One','22 Oct 2021',8,'155 minutes','English, Mandarin','Movie','A mythic and emotionally charged hero''s journey, "Dune" tells the story of Paul Atreides, a brilliant and gifted young man born into a great destiny beyond his understanding, who must travel to the most dangerous planet in the universe to ensure the future of his family and his people. As malevolent forces explode into conflict over the planet''s exclusive supply of the most precious resource in existence-a commodity capable of unlocking humanity''s greatest potential-only those who can conquer their fear will survive.','https://image.tmdb.org/t/p/original/d5NXSklXo0qyIYkgV94XAgMIckC.jpg','https://image.tmdb.org/t/p/original/jYEW5xZkZk2WTrdbMGAPFuBqbDc.jpg',NULL,NULL,'TV-14')
,('The Gentlemen','01 Jan 2020',7.8,'113 minutes','English, Russian, Spanish, Chinese','Movie','A talented American graduate of Oxford, using his unique skills, and audacity, creates a marijuana empire using the estates of impoverished British aristocrats. However, when he tries to sell his empire to a fellow American billionaire, a chain of events unfolds, involving blackmail, deception, mayhem and murder between street thugs, Russian oligarchs, Triad gangsters and gutter journalists.','https://image.tmdb.org/t/p/original/jtrhTYB7xSrJxR1vusu99nvnZ1g.jpg','https://image.tmdb.org/t/p/original/tintsaQ0WLzZsTMkTiqtMB3rfc8.jpg',NULL,NULL,NULL)
,('Up','28 May 2009',8.3,'96 minutes','English','Movie','As a boy, Carl Fredricksen wanted to explore South America and find the forbidden Paradise Falls. About 64 years later he gets to begin his journey along with Boy Scout Russell by lifting his house with thousands of balloons. On their journey, they make many new friends including a talking dog, and figure out that someone has evil plans. Carl soon realizes that this evildoer is his childhood idol.','https://image.tmdb.org/t/p/original/mFvoEwSfLqbcWwFsDjQebn9bzFe.jpg','https://image.tmdb.org/t/p/original/hGGC9gKo7CFE3fW07RA587e5kol.jpg',NULL,NULL,NULL)
,('Dragon Ball Daima',NULL,7.9,'25 minutes','Japanese','Series','Dragon Ball Daima revolves around Goku and his friends, who are turned into children due to a conspiracy. To make things right, they plan to head to a new world. The series is presented as a great Action adventure in an unknown and mysterious place.','https://image.tmdb.org/t/p/original/8tpLyWAmYhe1D0d62gV3CWFDu2f.jpg','https://image.tmdb.org/t/p/original/oUmWLyeko3kYdUr8DBLIsxwcugl.jpg',NULL,NULL,'TV-14')
,('Dragon Ball GT',NULL,6.8,'24 minutes','Japanese','Series',NULL,'https://image.tmdb.org/t/p/original/rLHhDpv6rrhuzBjNzaMRNv2fng.jpg','https://image.tmdb.org/t/p/original/vuaeYGDzKPATvJ1dP6AAziyriNl.jpg',NULL,NULL,'TV-PG')
,('My Hero Academia',NULL,8.2,'24 minutes','Japanese, English','Series','In a world populated with superhumans, the superhero-loving Izuku Midoriya is without power. However, after the Quirkless dreamer Izuku inherits the powers of the world''s best superhero, All Might, his hopes of becoming the top hero are now possible. Once enrolled in the high school for heroes, U.A., Izuku soon discovers being a hero is much more complicated than it appears.','https://image.tmdb.org/t/p/original/phuYuzqWW9ru8EA3HVjE9W2Rr3M.jpg','https://image.tmdb.org/t/p/original/6wSSyRNeF9vBJ1h29nuw3vG9hZI.jpg','29 wins & 44 nominations total',NULL,'TV-14')
,('Attack on Titan',NULL,9.1,'24 minutes','Japanese, English','Series','Humans are nearly exterminated by giant creatures called Titans. Titans are typically several stories tall, seem to have no intelligence, devour human beings and, worst of all, seem to do it for the pleasure rather than as a food source. A small percentage of humanity survived by walling themselves in a land protected by extremely high walls, even taller than the biggest of titans. Flash forward to the present, and mankind has not seen a titan in over 100 years. One day, 10 year old Eren and his childhood friend Mikasa witness something horrific as the city walls are destroyed by a colossal titan that appears out of thin air. As the smaller titans flood the city, the two kids watch in horror as Eren''s mother is eaten alive. Eren vows that he will murder every single titan and take revenge for all of mankind.','https://image.tmdb.org/t/p/original/hTP1DtLGFamjfu8WqjnuQdP1n4i.jpg','https://image.tmdb.org/t/p/original/rqbCbjB19amtOtFQbb3K2lgm2zv.jpg','40 wins & 88 nominations total',NULL,'TV-MA')
,('Naruto',NULL,8.4,'24 minutes','Japanese','Series','It is about a boy named Naruto Uzumaki, with a demon fox sealed within him. He is shunned and hated by both villagers and other ninja, and is labeled a freak and a danger to all around him. He overcomes these challenges through hard work and perseverance, and slowly earns the respect and appreciation of others. He finds friendship and love in those who believed in him when others would not, and together they work as a team to overcome the challenges they face and become true ninjas. It is a story of hope and love, of overcoming impossible odds, and of finding the value and beauty in even the darkest of times.','https://image.tmdb.org/t/p/original/xppeysfvDKVx775MFuH8Z9BlpMk.jpg','https://image.tmdb.org/t/p/original/xuJ0F9RfKvVSJNDg2usurQ9WvY5.jpg','1 win total',NULL,'TV-PG')
,('One Piece',NULL,9,'24 minutes','Japanese','Series','There once lived a pirate named Gol D. Roger. He obtained wealth, fame, and power to earn the title of Pirate King. When he was captured and about to be executed, he revealed that his treasure called One Piece was hidden somewhere at the Grand Line. This made all people set out to search and uncover the One Piece treasure, but no one ever found the location of Gol D. Roger''s treasure, and the Grand Line was too dangerous a place to overcome. Twenty-two years after Gol D. Roger''s death, a boy named Monkey D. Luffy decided to become a pirate and search for Gol D. Roger''s treasure to become the next Pirate King.','https://image.tmdb.org/t/p/original/cMD9Ygz11zjJzAovURpO75Qg7rT.jpg','https://image.tmdb.org/t/p/original/4Mt7WHox67uJ1yErwTBFcV8KWgG.jpg','6 wins & 13 nominations total',NULL,'TV-14')
,('Bleach',NULL,8.2,'24 minutes','Japanese','Series','High school student Kurosaki Ichigo is unlike any ordinary kid. Why? Because he can see ghosts. Ever since a young age, he''s been able to see spirits from the afterlife. Ichigo''s life completely changes one day when he and his two sisters are attacked by an evil, hungry and tormented spirit known as a Hollow. Right in the nick of time, Ichigo and his siblings are aided by a Shinigami (Death God) named Kuchiki Rukia, whose responsibility it is to send good spirits (Pluses) to the afterlife known as Soul Society, and to purify Hollows and send them up to Soul Society. But during the fight against the Hollow, Rukia is injured and must transfer her powers to Ichigo. With this newly acquired power, so begins Kurosaki Ichigo''s training and duty as a Shinigami to maintain the balance between the world of the living and the world of the dead...','https://image.tmdb.org/t/p/original/2EewmxXe72ogD0EaWM8gqa0ccIw.jpg','https://image.tmdb.org/t/p/original/o0NsbcIvsllg6CJX0FBFY8wWbsn.jpg','2 wins & 8 nominations total',NULL,'TV-14')
,('Breaking Bad',NULL,9.5,'45 minutes','English, Spanish','Series','Walter White is a chemistry genius but works as a chemistry teacher at a high school in Albuquerque, New Mexico. His life drastically changes when he''s diagnosed with stage III terminal lung cancer and given a prognosis of two years to live. To ensure that his pregnant wife and disabled teenage son have a financial future, he uses his chemistry background to create and sell the world''s finest crystal methamphetamine. To sell his signature "blue meth," he teams up with Jesse Pinkman, a former student of his. The meth makes them very rich very quickly, but it attracts the attention of his DEA brother-in-law, Hank. As Walter and Jesse''s status in the drug world escalates, Walter becomes a dangerous criminal, and Jesse becomes a hot-headed salesman. Hank is always hot on his tail, forcing Walter to devise new ways to cover his tracks.','https://image.tmdb.org/t/p/original/ineLOBPG8AZsluYwnkMpHRyu7L.jpg','https://image.tmdb.org/t/p/original/9faGSFi5jam6pDWGNd0p8JcJgXQ.jpg','Won 16 Primetime Emmys. 169 wins & 269 nominations total',NULL,'TV-MA')
,('Better Call Saul',NULL,9,'45 minutes','English, Spanish, Vietnamese','Series','Before Saul Goodman, he was Jimmy McGill. And if you''re calling Jimmy, you''re in real trouble. The prequel to "Breaking Bad" follows small-time attorney, Jimmy McGill, as he transforms into Walter White''s morally challenged lawyer, Saul Goodman.','https://image.tmdb.org/t/p/original/zjg4jpK1Wp2kiRvtt5ND0kznako.jpg','https://image.tmdb.org/t/p/original/hPea3Qy5Gd6z4kJLUruBbwAH8Rm.jpg','Nominated for 53 Primetime Emmys. 72 wins & 333 nominations total',NULL,'TV-MA')
,('After Life',NULL,8.4,'30 minutes','English','Series','Tony''s life is turned upside-down after his wife dies of breast cancer. He contemplates suicide, but instead decides to live long enough to punish the world for his wife''s death by saying and doing whatever he wants. Although he thinks of this as his "superpower," his plan is undermined when everyone around him tries to make him a better person.','https://image.tmdb.org/t/p/original/6eJf4h9XcvqK64vbx27EFlLVURm.jpg','https://image.tmdb.org/t/p/original/AeVleqwWBMkiliVw6lFZICTTMiO.jpg','5 wins & 8 nominations total',NULL,'TV-MA')
,('Ted Lasso',NULL,8.8,'30 minutes','English','Series','In a shock development struggling English Premier League team AFC Richmond hires American football coach Ted Lasso as its new manager. Lasso knows nothing about soccer/football. With unshakable enthusiasm and positivity he rises to the challenge but little known to him there are forces within the club that don''t want him to succeed.','https://image.tmdb.org/t/p/original/5fhZdwP1DVJ0FyVH6vrFdHwpXIn.jpg','https://image.tmdb.org/t/p/original/8rDij8tYynUfu2hMVXynAp2pSjY.jpg','Won 13 Primetime Emmys. 94 wins & 246 nominations total',NULL,'TV-MA')
,('Money Heist',NULL,8.2,'60 minutes','Spanish, Russian, Serbian, English','Series','To carry out the biggest heist in history, a mysterious man called The Professor recruits a band of eight robbers who have a single characteristic: none of them has anything to lose. Five months of seclusion memorizing every step, every detail, every probability culminate in eleven days locked up in the National Coinage and Stamp Factory of Spain, surrounded by police forces and with dozens of hostages in their power, to find out whether their suicide wager will lead to everything or nothing.','https://image.tmdb.org/t/p/original/reEMJA1uzscCbkpeRJeTT2bjqUp.jpg','https://image.tmdb.org/t/p/original/xGexTKCJDkl12dTW4YCBDXWb1AD.jpg','38 wins & 45 nominations total',NULL,'TV-MA')
,('Squid Game',NULL,8,'60 minutes','Korean, English, Urdu','Series','A story of people who fail at life for various reasons, but suddenly receive a mysterious invitation to participate in a survival game to win more than 38 million US dollars. The game takes place on an isolated island and the participants are locked up until there is a final winner. The story incorporates popular Korean children''s games from the 1970s and 1980s, such as squid game, the literal translation of its Korean name, which is a type of tag where offense and defense use a squid-shaped board drawn in the dirt.','https://image.tmdb.org/t/p/original/1QdXdRYfktUSONkl1oD5gc6Be0s.jpg','https://image.tmdb.org/t/p/original/2meX1nMdScFOoV4370rqHWKmXhY.jpg','Won 6 Primetime Emmys. 46 wins & 92 nominations total',NULL,'TV-MA')
,('The Office',NULL,9,'22 minutes','English, Spanish, German, French','Series','A mediocre paper company in the hands of Scranton, PA branch manager Michael Scott. This mockumentary follows the everyday lives of the manager and the employees he "manages." The crew follows the employees around 24/7 and captures their quite humorous and bizarre encounters as they will do what it takes to keep the company thriving.','https://image.tmdb.org/t/p/original/dg9e5fPRRId8PoBE0F6jl5y85Eu.jpg','https://image.tmdb.org/t/p/original/mLyW3UTgi2lsMdtueYODcfAB9Ku.jpg','Won 5 Primetime Emmys. 59 wins & 211 nominations total',NULL,'TV-14')
,('Friends',NULL,8.9,'22 minutes','English, Spanish, Italian, French, Dutch, Hebrew','Series','Ross Geller, Rachel Green, Monica Geller, Joey Tribbiani, Chandler Bing, and Phoebe Buffay are six twenty-somethings living in New York City. Over the course of 10 years and seasons, these friends go through life lessons, family, love, drama, friendship, and comedy.','https://image.tmdb.org/t/p/original/2koX1xLkpTQM4IZebYvKysFW1Nh.jpg','https://image.tmdb.org/t/p/original/l0qVZIpXtIo7km9u5Yqh0nKPOr5.jpg','Won 6 Primetime Emmys. 79 wins & 231 nominations total',NULL,'TV-14')
,('Stranger Things',NULL,8.6,'60 minutes','English','Series','In a small town where everyone knows everyone, a peculiar incident starts a chain of events that leads to a child''s disappearance, which begins to tear at the fabric of an otherwise-peaceful community. Dark government agencies and seemingly malevolent supernatural forces converge on the town, while a few of the locals begin to understand that more is going on than meets the eye.','https://image.tmdb.org/t/p/original/uOOtwVbSr4QDjAGIifLDwpb2Pdl.jpg','https://image.tmdb.org/t/p/original/2MaumbgBlW1NoPo3ZJO38A6v7OS.jpg','Won 12 Primetime Emmys. 114 wins & 323 nominations total',NULL,'TV-14')
,('Game of Thrones',NULL,9.2,'60 minutes','English','Series','In the mythical continent of Westeros, several powerful families fight for control of the Seven Kingdoms. As conflict erupts in the kingdoms of men, an ancient enemy rises once again to threaten them all. Meanwhile, the last heirs of a recently usurped dynasty plot to take back their homeland from across the Narrow Sea.','https://image.tmdb.org/t/p/original/1XS1oqL89opfnbLl8WnZY1O1uJx.jpg','https://image.tmdb.org/t/p/original/zZqpAXxVSBtxV9qPBcscfXBcL2w.jpg','Won 59 Primetime Emmys. 398 wins & 655 nominations total',NULL,'TV-MA')
,('House of the Dragon',NULL,8.3,'50 minutes','English','Series','The Targaryen dynasty is at the absolute apex of its power, with more than 10 dragons under their yoke. Most empires crumble from such heights. In the case of the Targaryens, their slow fall begins when King Viserys breaks with a century of tradition by naming his daughter Rhaenyra heir to the Iron Throne. But when Viserys later fathers a son, the court is shocked when Rhaenyra retains her status as his heir, and seeds of division sow friction across the realm.','https://image.tmdb.org/t/p/original/oxmdHR5Ka28HAJuMmS2hk5K6QQY.jpg','https://image.tmdb.org/t/p/original/etj8E2o0Bud0HkONVQPjyCkIvpv.jpg','Won 1 Primetime Emmy. 16 wins & 90 nominations total',NULL,'TV-MA')
,('Peaky Blinders',NULL,8.7,'60 minutes','English, Romanian, Irish, Italian, Yiddish, French','Series','Thomas Shelby and his brothers return to Birmingham after serving in the British Army during WWI. Shelby and his gang, the Peaky Blinders, control the city of Birmingham. However, Shelby''s ambitions extend beyond Birmingham, as he plans to build on the business empire he''s created, and dispatch anyone who gets in his way.','https://image.tmdb.org/t/p/original/vUUqzWa2LnHIVqkaKVlVGkVcZIW.jpg','https://image.tmdb.org/t/p/original/or7wKwv1IT6LEOktt395O5qi7e.jpg','Won 1 BAFTA Award25 wins & 56 nominations total',NULL,'TV-MA')
,('Black Mirror',NULL,8.7,'60 minutes','English','Series','Set in a world only minutes from our own, "Black Mirror", a UK and USA non-hosted anthology series; unveils how modern technologies can backfire and be used against their makers, every episode set in a slightly different reality with different characters combating different types of technologies.','https://image.tmdb.org/t/p/original/5UaYsGZOFhjFDwQh6GuLjjA1WlF.jpg','https://image.tmdb.org/t/p/original/38aCLy0BdFbOAIEfuDladoITHN0.jpg','Won 6 Primetime Emmys. 46 wins & 135 nominations total',NULL,'TV-MA')
,('The Crown',NULL,8.6,'60 minutes','English','Series','This show focuses on Queen Elizabeth II as a young newlywed faced with leading the world''s most famous monarchy while forging a relationship with legendary Prime Minister Sir Winston Churchill. The British Empire is in decline, the political world is in disarray, but a new era is dawning. Peter Morgan''s masterfully-researched scripts reveal the Queen''s private journey behind the public fa√ßade with daring frankness. Prepare to see into the coveted world of power and privilege behind the locked doors of Westminster and Buckingham Palace.','https://image.tmdb.org/t/p/original/1DDE0Z2Y805rqfkEjPbZsMLyPwa.jpg','https://image.tmdb.org/t/p/original/8VXhcrl5z2I1zEU9X3pkkNrZlD.jpg','Won 24 Primetime Emmys. 170 wins & 451 nominations total',NULL,'TV-MA')
,('Sherlock',NULL,9.1,'90 minutes','English','Series','In this modernized version of the Conan Doyle characters, using his detective plots, Sherlock Holmes lives in early-21st-century London and acts more cocky towards Scotland Yard''s detective inspector Lestrade because he''s actually less confident. Doctor Watson is now a fairly young veteran of the Afghan war, less adoring and more active.','https://image.tmdb.org/t/p/original/cIfGAkpvWD2zxHrXzhv3uptYbyV.jpg','https://image.tmdb.org/t/p/original/hmLTIRtVyTHShJl2Wb8LHmvUgJm.jpg','Won 9 Primetime Emmys. 95 wins & 185 nominations total',NULL,'TV-14')
,('Westworld',NULL,8.4,'60 minutes','English','Series','This science-fiction Western series from Jonathan Nolan and Lisa Joy was inspired by Michael Crichton''s Westworld (1973) and is set at a Wild-West theme park created by Dr. Robert Ford (Sir Anthony Hopkins) with human-like androids, where guests are encouraged to indulge their fantasies and desires.','https://image.tmdb.org/t/p/original/8MfgyFHf7XEboZJPZXCIDqqiz6e.jpg','https://image.tmdb.org/t/p/original/yGNnjoIGOdQy3douq60tULY8teK.jpg','Won 7 Primetime Emmys. 57 wins & 214 nominations total',NULL,'TV-MA')
,('True Detective',NULL,8.9,'60 minutes','English','Series','In 2012, Louisiana State Police Detectives Rust Cohle and Martin Hart are brought in to revisit a homicide case they worked in 1995. As the inquiry unfolds in present day through separate interrogations, the two former detectives narrate the story of their investigation, reopening unhealed wounds, and drawing into question their supposed solving of a bizarre ritualistic murder in 1995. The timelines braid and converge in 2012 as each man is pulled back into a world they believed they''d left behind. In learning about each other and their killer, it becomes clear that darkness lives on both sides of the law.','https://image.tmdb.org/t/p/original/cuV2O5ZyDLHSOWzg3nLVljp1ubw.jpg','https://image.tmdb.org/t/p/original/82qpvU7AzT9D8oC02fIceb5KAz8.jpg','Won 6 Primetime Emmys. 42 wins & 174 nominations total',NULL,'TV-MA')
,('The Boys',NULL,8.6,'60 minutes','English','Series','The world''s most powerful superheroes (''Supes'') are secretly bending society to its whims, until the underdog team ''The Boys'', victims of the ''Supes'', conjure up a plan to take down ''The Seven'' and ''Vought International'' once and for all. Fighting a never ending conspiracy of corporate espionage, deep-cutting secrets and nigh-Godly figures, ''The Boys'' will do whatever it takes to save the world from its corrupt ''superheroes'' before they become unstoppable--or die trying.','https://image.tmdb.org/t/p/original/2zmTngn1tYC1AvfnrFLhxeD82hz.jpg','https://image.tmdb.org/t/p/original/7cqKGQMnNabzOpi7qaIgZvQ7NGV.jpg','Won 1 Primetime Emmy. 23 wins & 90 nominations total',NULL,'TV-MA')
,('Fargo',NULL,8.8,'60 minutes','English, German, Korean, Spanish, American Sign Language, French, Ukrainian, Hebrew, Russian','Series','The all new "true crime" case of Fargo''s new chapter travels back to 1979 in Sioux Falls, South Dakota and Luverne, Minnesota, where a young State Police Officer Lou Solverson, recently back from Vietnam, investigates a case involving a local crime gang and a major Mob syndicate. Helping him piece things together is his father-in-law, Sheriff Hank Larsson. The investigation will lead them to a colorful cast of characters that includes Karl Weathers, the town lawyer of Luverne, Minnesota. A Korean War vet, Karl is a flowery drunk blessed with the gift of gab and the eloquence of a true con artist. Joe Bulo, the front man for the northern expansion of a Kansas City crime syndicate. The new face of corporate crime, Joe''s bringing a Walmart mentality to small town America. His number two is Mike Milligan. Part enforcer, part detective, Mike is always smiling - but the joke is usually on you. Bulo and his crew have their sights set on the Gerhardt crime family in Fargo, currently led by matriarch Floyd Gerhardt. With her husband at death''s door, Floyd takes over the family business, frustrating her eldest son, Dodd Gerhardt. An impatient hothead with a cruel streak to match his ambitions, Dodd can''t wait for both his parents to die so he can take over and expand their business from kingdom to empire. Bear Gerhardt is the middle son, an intimidatingly large man who, although inarticulate, is the most decent of his clan. Rye Gerhardt, the youngest of the Gerhardt clan, views himself as a big shot, but in reality he''s just a small dog who barks big.','https://image.tmdb.org/t/p/original/6U9CPeD8obHzweikFhiLhpc7YBT.jpg','https://image.tmdb.org/t/p/original/nDOIsgCYZqEMvomSR6t9QUIPZJS.jpg','Won 2 Oscars. 84 wins & 58 nominations total','$24,611,975','R')
,('Dark',NULL,8.7,'60 minutes','German','Series','The first German production from the world''s leading Internet TV Network is set in a present-day German town where the disappearance of two young children exposes the double lives and fractured relationships among four families. In 10 hour-long episodes, the story takes on a surprising twist that ties back to the same town in 1986.','https://image.tmdb.org/t/p/original/apbrbWs8M9lyOpJYU5WXrpFbk1Z.jpg','https://image.tmdb.org/t/p/original/3jDXL4Xvj3AzDOF6UH1xeyHW8MH.jpg','8 wins & 27 nominations total',NULL,'TV-MA')
,('Ozark',NULL,8.5,'60 minutes','English','Series','The Byrdes and their teenage kids Charlotte and Jonah look like, and mostly are, an ordinary family with ordinary lives. Except that husband/father Marty, a Chicago financial advisor, also serves as the top money-launderer for Mexico''s second-largest drug cartel. When things go awry, he must uproot his family from the skyscrapers of Chicago and relocate to the lazy lake region of the Missouri Ozarks.','https://image.tmdb.org/t/p/original/pCGyPVrI9Fzw6rE1Pvi4BIXF6ET.jpg','https://image.tmdb.org/t/p/original/gD830J0sf5gEeZvzkRVPdGxJmSR.jpg','Won 4 Primetime Emmys. 30 wins & 203 nominations total',NULL,'TV-MA')
,('Succession',NULL,8.8,'60 minutes','English','Series','The Roy family controls the biggest media and entertainment company in the world. As they fight for control of the company, and each other, their lack of morals is exposed at every turn. This family has no redeeming character values, and neither does any person attached to them. Watch them as they fight for the front seat on the bus to hell.','https://image.tmdb.org/t/p/original/z0XiwdrCQ9yVIr4O0pxzaAYRxdW.jpg','https://image.tmdb.org/t/p/original/bcdUYUFk8GdpZJPiSAas9UeocLH.jpg','Won 19 Primetime Emmys. 178 wins & 307 nominations total',NULL,'TV-MA')
,('Narcos',NULL,8.7,'50 minutes','English, Spanish','Series','Narcos tells the true-life story of the growth and spread of cocaine drug cartels across the globe and attendant efforts of law enforcement to meet them head on in brutal, bloody conflict. It centers around the notorious Colombian cocaine kingpin Pablo Escobar (Wagner Moura) and Steve Murphy (Holbrook), a DEA agent sent to Colombia on a U.S. mission to capture him and ultimately kill him.','https://image.tmdb.org/t/p/original/rTmal9fDbwh5F0waol2hq35U4ah.jpg','https://image.tmdb.org/t/p/original/bT7pArYmcE91iCTec5H7pjrVbSu.jpg','Nominated for 3 Primetime Emmys. 8 wins & 20 nominations total',NULL,'TV-MA')
,('Mindhunter',NULL,8.6,'60 minutes','English','Series','Two FBI agents, fighting the departmental stigma of backroom boys - those who try to complicate the status quo of simple Means, Motive, Opportunity (MMO) of crime-solving with academics - work to develop an innovative investigative field incorporating psychology, anthropology and sociology as a method to reveal the motive. They acknowledge classic crime-solving - MMO - as no longer sufficient because criminality is becoming more complicated as Motive graduates from need and greed to inexplicable and irrational reasons. They theorize applying deeper psychological evaluation will posit new questions. Simply, asking Why will lead to the Who. This series focuses on the development by two men, two agents, of a new criminal field and does so through story lines of visiting the sociopathic mind.','https://image.tmdb.org/t/p/original/fbKE87mojpIETWepSbD5Qt741fp.jpg','https://image.tmdb.org/t/p/original/a906PH7CDmSOdS7kmnAgdWk5mhv.jpg','Nominated for 2 Primetime Emmys. 5 wins & 37 nominations total',NULL,'TV-MA')
,('The Witcher',NULL,7.9,'60 minutes','English','Series','The Witcher is a fantasy drama web television series created by Lauren Schmidt Hissrich for Netflix. It is based on the book series of the same name by Polish writer Andrzej Sapkowski. The Witcher follows the story of Geralt of Rivia, a solitary monster hunter, who struggles to find his place in a world where people often prove more wicked than monsters and beasts. But when destiny hurtles him toward a powerful sorceress, and a young princess with a special gift, the three must learn to navigate independently the increasingly volatile Continent.','https://image.tmdb.org/t/p/original/cZ0d3rtvXPVvuiX22sP79K3Hmjz.jpg','https://image.tmdb.org/t/p/original/dQOphbONxlpPsKo30araFr0CYMO.jpg','Nominated for 4 Primetime Emmys. 9 wins & 37 nominations total',NULL,'TV-MA')
,('Mad Men',NULL,8.7,'45 minutes','English','Series','The professional and personal lives of those who work in advertising on Madison Avenue - self-coined "mad men" - in the 1960s are presented. The stories focus on those at one of the avenue''s smaller firms, Sterling Cooper, and its various incarnations over the decade. At the heart of these stories is Donald Draper, the creative genius of the company. That professional creative brilliance belies the fact of a troubled childhood, one that he would rather forget and not let anyone know about except for a select few, but one that shaped who he is as an adult and as an ad man in the need not only to sell products but sell himself to the outside world. His outward confidence also masks many insecurities as evidenced through his many vices, such as excessive smoking, drinking and womanizing - the latter despite being a family man - and how he deals with the aftermath of some of the negative aspects of his life.','https://image.tmdb.org/t/p/original/7v8iCNzKFpdlrCMcqCoJyn74Nsa.jpg','https://image.tmdb.org/t/p/original/ljOiRmGg96ltbNaCaxUkjdXyPjK.jpg','Won 16 Primetime Emmys. 166 wins & 450 nominations total',NULL,'TV-MA')
,('Lost',NULL,8.3,'45 minutes','English, Portuguese, Spanish, Arabic, French, Korean, German, Latin, Russian, Japanese','Series','The past, present, and future lives of surviving Oceanic Flight 815 passengers are dramatically intertwined as a fight for survival ensues in a quest for answers after crashlanding on a mysterious island. Each discovery prompts yet more secrets, as the hastily-formed colony search for a way off the island, or is this their home?','https://image.tmdb.org/t/p/original/og6S0aTZU6YUJAbqxeKjCa3kY1E.jpg','https://image.tmdb.org/t/p/original/yUOFocKDW7MCC5isx4FK8A68QFp.jpg','Won 10 Primetime Emmys. 118 wins & 418 nominations total',NULL,'TV-14')
,('Prison Break',NULL,8.3,'44 minutes','English, Spanish, Arabic','Series','An innocent man is framed for the homicide of the Vice President''s brother and scheduled to be executed at a super-max penitentiary, thus it''s up to his younger brother to save him with his genius scheme: install himself in the same prison by holding up a bank and, as the final month ticks away, launch the escape plan step-by-step to break the both of them out, with his full-body tattoo acting as his guide; a tattoo which hides the layout of the prison facility and necessary clues vital to the escape.','https://image.tmdb.org/t/p/original/5E1BhkCgjLBlqx557Z5yzcN0i88.jpg','https://image.tmdb.org/t/p/original/7w165QdHmJuTHSQwEyJDBDpuDT7.jpg','Nominated for 1 Primetime Emmy. 8 wins & 32 nominations total',NULL,'TV-14')
,('The Mandalorian',NULL,8.6,'40 minutes','English','Series','After the stories of Jango and Boba Fett, another warrior emerges in the Star Wars universe. The Mandalorian is set after the fall of the Empire and before the emergence of the First Order. We follow the travails of a lone gunfighter in the outer reaches of the galaxy far from the authority of the New Republic.','https://image.tmdb.org/t/p/original/eU1i6eHXlzMOlEq0ku1Rzq7Y4wA.jpg','https://image.tmdb.org/t/p/original/9zcbqSxdsRMZWHYtyCd1nXPr2xq.jpg','Won 15 Primetime Emmys. 62 wins & 162 nominations total',NULL,'TV-14')
,('Dexter',NULL,8.6,'60 minutes','English, Spanish','Series','He''s smart, he''s good looking, and he''s got a great sense of humor. He''s Dexter Morgan, everyone''s favorite serial killer. As a Miami forensics expert, he spends his days solving crimes, and nights committing them. But Dexter lives by a strict code of honor that is both his saving grace and lifelong burden. Torn between his deadly compulsion and his desire for true happiness, Dexter is a man in profound conflict with the world and himself. Golden Globe winner Michael C. Hall stars in the hit SHOWTIME Original Series.','https://image.tmdb.org/t/p/original/q8dWfc4JwQuv3HayIZeO84jAXED.jpg','https://image.tmdb.org/t/p/original/aSGSxGMTP893DPMCvMl9AdnEICE.jpg','Won 4 Primetime Emmys. 56 wins & 202 nominations total',NULL,'TV-MA')
,('How I Met Your Mother',NULL,8.3,'23 minutes','English, Persian, Chinese','Series','Ted Mosby sits down with his kids, to tell them the story of how he met their mother. The story is told through memories of his friends Marshall, Lily, Robin, and Barney Stinson. All legendary 9 seasons lead up to the moment of Ted''s final encounter with "the one."','https://image.tmdb.org/t/p/original/b34jPzmB0wZy7EjUZoleXOl2RRI.jpg','https://image.tmdb.org/t/p/original/9YteO4VWteiPmEbWYJRAeBTQZPD.jpg','Won 10 Primetime Emmys. 29 wins & 102 nominations total',NULL,'TV-14')
,('Brooklyn Nine-Nine',NULL,8.4,'22 minutes','English','Series','Captain Ray Holt takes over Brooklyn''s 99th precinct, which includes Detective Jake Peralta, a talented but carefree detective who''s used to doing whatever he wants. The other employees of the 99th precinct include Detective Amy Santiago, Jake''s over achieving and competitive partner; Detective Rosa Diaz, a tough and kept to herself coworker; Detective Charles Boyle, Jake''s best friend who also has crush on Rosa; Detective Sergeant Terry Jeffords, who was recently taken off the field after the birth of his twin girls; and Gina Linetti, the precinct''s sarcastic administrator.','https://image.tmdb.org/t/p/original/hgRMSOt7a1b8qyQR68vUixJPang.jpg','https://image.tmdb.org/t/p/original/9AeiA1XtP5sel2tAf9LaGeUjhDb.jpg','Won 2 Primetime Emmys. 21 wins & 138 nominations total',NULL,'TV-14')
,('The Big Bang Theory',NULL,8.1,'22 minutes','English, Hindi, Italian, Russian, Mandarin, Klingon','Series','Leonard Hofstadter and Sheldon Cooper are both brilliant physicists working at Cal Tech in Pasadena, California. They are colleagues, best friends, and roommates, although in all capacities their relationship is always tested primarily by Sheldon''s regimented, deeply eccentric, and non-conventional ways. They are also friends with their Cal Tech colleagues mechanical engineer Howard Wolowitz and astrophysicist Rajesh Koothrappali. The foursome spend their time working on their individual work projects, playing video games, watching science-fiction movies, or reading comic books. As they are self-professed nerds, all have little or no luck with women. When Penny, a pretty woman and an aspiring actress from Omaha, moves into the apartment across the hall from Leonard and Sheldon''s, Leonard has another aspiration in life, namely to get Penny to be his girlfriend.','https://image.tmdb.org/t/p/original/ooBGRQBdbGzBxAVfExiO8r7kloA.jpg','https://image.tmdb.org/t/p/original/sccDflItNho4OiHkzpiDxB2fUFw.jpg','Won 10 Primetime Emmys. 79 wins & 257 nominations total',NULL,'TV-PG')
,('Parks and Recreation',NULL,8.6,'22 minutes','English','Series','Leslie Knope, a mid-level bureaucrat in an Indiana Parks and Recreation Department, hopes to beautify her town (and boost her own career) by helping local nurse Ann Perkins turn an abandoned construction site into a community park. However, what should be a fairly simple project is stymied at every turn by oafish bureaucrats, selfish neighbors, governmental red tape, and a myriad of other challenges. Leslie''s colleague Tom Haverford, who delights in exploiting his position for personal gain, is as likely to undermine her efforts as to help her, while her boss, Ron Swanson, is adamantly opposed to government in any form, even though he''s a bureaucrat.','https://image.tmdb.org/t/p/original/dDuzrl9rUIBYieZjqmtNCdncrmZ.jpg','https://image.tmdb.org/t/p/original/v7FPlZuuwJZ6YwJggf3Jx5pZNAz.jpg','Nominated for 14 Primetime Emmys. 36 wins & 182 nominations total',NULL,'TV-14')
,('Community',NULL,8.5,'22 minutes','English','Series','A former lawyer attends a community college when it is discovered he faked his Bachelor''s degree. In an attempt to get with a student in his Spanish class, he forms a Spanish study group. To his surprise, more people attend the study group and the group of misfits form an unlikely community.','https://image.tmdb.org/t/p/original/3KUjDt8XY7w2Ku70UE0SECmv1zP.jpg','https://image.tmdb.org/t/p/original/OylSdzVezjwGLYM0w73mUPNHM4.jpg','Won 1 Primetime Emmy. 24 wins & 90 nominations total',NULL,'TV-14')
,('Mr. Robot',NULL,8.5,'45 minutes','English, Swedish, Danish, Chinese, Persian, Spanish, Samoan, Arabic, German','Series','Elliot is a brilliant introverted young programmer who works as a cyber-security engineer by day and vigilante hacker by night. He also happens to be suffering from a strange condition similar to schizophrenia which he futilely tries to keep under control by regularly taking both legal and illegal drugs and visiting his therapist. When a strange feisty young woman named Darlene and a secretive middle-aged man calling himself Mr. Robot, who claims to be the mysterious leader of an underground hacking group known as F-Society, offer Elliot a chance to take his vigilantism to the next level and help them take down E-Corp, the corrupt multi-national financial company that Elliot works for and likes to call Evil Corp, Elliot finds himself at the crossroads. Mr. Robot, who has personal reasons for wanting to take down E-Corp, also reveals that he already has one ally, an even more mysterious, secretive and highly dangerous shadowy hacking group known only as Dark Army. Meanwhile, Elliot''s childhood and only friend, Angela, who blames E-Corp for the death of their parents, tries to take down E-Corp legally by joining their ranks and trying to dig up evidence of their corruption from the inside. A wild card in this scheme becomes Tyrell Wellick, an unhinged psychopathic E-Corp yuppie, originally from Scandinavia, who has a very unusual relationship with his dominant and ambitious wife Joanna. After many twists and turns, Mr. Robot''s plan is finally put in motion - with catastrophic (un)intended results. But that''s just the end of the beginning of the real story.','https://image.tmdb.org/t/p/original/kv1nRqgebSsREnd7vdC2pSGjpLo.jpg','https://image.tmdb.org/t/p/original/uJUe985oIuRiD3hmHQYskIMc2WU.jpg','Won 3 Primetime Emmys. 23 wins & 89 nominations total',NULL,'TV-MA')
,('Hannibal',NULL,8.5,'45 minutes','English','Series','A talented but unstable FBI profiler named Will Graham is brought in to find serial murderers. Jack Crawford pairs him with the astute psychiatrist Dr. Hannibal Lecter because his unique capacity for empathy with them compromises his sanity. Will has no idea that Lecter is a crafty cannibalistic killer who plays tricks on him and the FBI. As their twisted relationship develops, Lecter drives Will''s sanity to the breaking point, erasing the distinction between hunter and hunted and ultimately compelling Will to face the darkness within him and the true nature of the man he believed to be his confidant.','https://image.tmdb.org/t/p/original/pbV2eLnKSIm1epSZt473UYfqaeZ.jpg','https://image.tmdb.org/t/p/original/vlG182ZY2WMzD5bjFZNnhyvv5V4.jpg','9 wins & 25 nominations total','$165,092,268','R')
,('The Umbrella Academy',NULL,7.8,'60 minutes','English','Series','On the same day in October 1989, forty-three infants are inexplicably born to random, unconnected women who showed no signs of pregnancy the day before. Seven are adopted by Sir Reginald Hargreeves, a billionaire Wessk r industrialist, who creates The Umbrella Academy and prepares his "children" to save the world. But not everything went according to plan. In their teenage years, the family fractured and the team disbanded. Now almost thirty years old, the six surviving members reunite upon the news of Hargreeves'' passing. Luther, Diego, Allison, Klaus, Vanya and Number Five work together to solve a mystery surrounding their father''s death. But the estranged family once again begins to come apart due to their divergent personalities and abilities, not to mention the imminent threat of a global apocalypse.','https://image.tmdb.org/t/p/original/qhcwrnnCnN8NE1N6XXKHFmveJR9.jpg','https://image.tmdb.org/t/p/original/7sqFEDDmK1hG5m92upolcfQxy7R.jpg','Nominated for 7 Primetime Emmys. 13 wins & 62 nominations total',NULL,'TV-14')
,('The Last of Us',NULL,8.7,'50 minutes','English, Indonesian','Series','20 years after modern civilization has been destroyed, Joel, a hardened survivor, is hired to smuggle Ellie, a 14-year-old girl, out of an oppressive quarantine zone. What starts as a small job soon becomes a brutal heartbreaking journey as they both must traverse the U.S. and depend on each other for survival.','https://image.tmdb.org/t/p/original/dmo6TYuuJgaYinXBPjrgG9mB5od.jpg','https://image.tmdb.org/t/p/original/lY2DhbA7Hy44fAKddr06UrXWWaQ.jpg','Won 8 Primetime Emmys. 92 wins & 132 nominations total',NULL,'TV-MA')
,('Arrow',NULL,7.5,'42 minutes','English, Greek, Arabic, Russian, Chinese, Spanish, Japanese','Series','After many years in a sheltered rich-boy life, Oliver Queen is stranded on an island after his father''s yacht crashes and must learn to survive on his own. Five years later he is found alive and well after he was presumed to be dead. After he returns to his hometown of Starling City, he begins his crusade to rid it of nasty villains, drug dealers, mob bosses, and criminals by becoming an arrow-shooting vigilante.','https://image.tmdb.org/t/p/original/u8ZHFj1jC384JEkTt3vNg1DfWEb.jpg','https://image.tmdb.org/t/p/original/vNnLAKmoczRlNarxyGrrw0KSOeX.jpg','22 wins & 89 nominations total',NULL,'TV-14')
,('The Flash',NULL,7.5,'43 minutes','English','Series','Barry Allen was struck by lightning and fell into a coma. When he awakens from it 9 months later, he meets Cisco Ramon, Harrison Wells, and Caitlin Snow, and later he realizes that he that he has powers and how it had been caused by the explosion of the particle accelerator.','https://image.tmdb.org/t/p/original/yZevl2vHQgmosfwUdVNzviIfaWS.jpg','https://image.tmdb.org/t/p/original/gFkHcIh7iE5G0oVOgpmY8ONQjhl.jpg','Nominated for 1 Primetime Emmy. 31 wins & 100 nominations total',NULL,'TV-PG')
,('Smallville',NULL,7.5,'60 minutes','English','Series','After a meteor shower bursts from the heavens, raining destruction on the unsuspecting citizens of Smallville, years pass, and the healing process leaves the town''s inhabitants with scars and secrets. From the ashes of tragedy, a popular yet awkward teen attempts to decipher the meaning of his life and his clouded past. As he struggles with the transition from boyhood to adulthood, Clark finds that his strength and strange abilities set him uncomfortably apart from his peers.','https://image.tmdb.org/t/p/original/dc9a9n4g9Ibs485t5eBtyNG0mcr.jpg','https://image.tmdb.org/t/p/original/4wVq9ICc4MI2XcssrumpCOhKLpI.jpg','Won 3 Primetime Emmys. 35 wins & 155 nominations total',NULL,'TV-PG')
,('Heroes',NULL,7.5,'45 minutes','English, Japanese, Spanish','Series','People all over the U.S and the world start to realize they have special abilities, like telekinesis, healing abilities, flying powers, time travel, invisibility, and the ability to absorb other''s abilities. One man, known as Sylar, wants to gain all the power of these "heroes" so he can be the most powerful and evolved human of all, and stops at nothing to gruesomely kill these people. In order to protect themselves from him, these people must help one another before Sylar can destroy them all, while they each deal with problems of their own.','https://image.tmdb.org/t/p/original/lf0TcOkheYUZKpeh7c8lqJHNk5O.jpg','https://image.tmdb.org/t/p/original/zoetbPF7jYY0jjY5js3x6r1QjSW.jpg','Won 1 Primetime Emmy. 31 wins & 108 nominations total',NULL,'TV-14')
,('Daredevil: Born Again',NULL,8.6,'60 minutes','English','Series','Matt Murdock, a blind lawyer with heightened abilities is fighting for justice through his bustling law firm, while former mob boss Wilson Fisk pursues his own political endeavors in New York. When their past identities begin to emerge, both men find themselves on an inevitable collision course.','https://image.tmdb.org/t/p/original/9lLuhV703HGCbnz6FxnqCwIwzAZ.jpg','https://image.tmdb.org/t/p/original/hrsRczdsAHBLTDzlIqt82bxY0Tt.jpg','Nominated for 5 Primetime Emmys. 10 wins & 43 nominations total',NULL,'TV-MA')
,('Jessica Jones',NULL,7.8,'56 minutes','English','Series','Ever since her short-lived stint as a superhero ended in tragedy, Jessica Jones has been rebuilding her personal life and career as a hot-tempered, sardonic private detective in Hell''s Kitchen, New York City. Plagued by self-loathing and a wicked case of PTSD, Jessica battles demons from within and without, using her extraordinary abilities as an unlikely champion for those in need. Especially if they''re willing to cut her a check.','https://image.tmdb.org/t/p/original/paf9wL3mOW9LT3ZjRxXqJcjeMEv.jpg','https://image.tmdb.org/t/p/original/g9ju2o4LioYYOyihBvf9lVX8XL.jpg','Won 1 Primetime Emmy. 12 wins & 27 nominations total',NULL,'TV-MA')
,('Luke Cage',NULL,7.2,'55 minutes','English, Spanish, Polish','Series','After a sabotaged experiment leaves him with super strength and unbreakable skin, Luke Cage becomes a fugitive trying to rebuild his life in modern-day Harlem, New York City. But he is soon pulled out of the shadows and must fight a battle for the heart of his city--forcing him to confront a past he had tried to bury.','https://image.tmdb.org/t/p/original/6R62oGGufhsf6DiMknCi047N0b7.jpg','https://image.tmdb.org/t/p/original/9VNvlBE0IVFBuybIAA6BlOVMtCv.jpg','Won 1 Primetime Emmy. 6 wins & 26 nominations total',NULL,'TV-MA')
,('Iron Fist',NULL,6.4,'55 minutes','English, Mandarin, Japanese, Russian, Korean','Series','Danny Rand returns to New York City after being missing for years, trying to reconnect with his past and his family legacy. He fights against the criminal element corrupting his world around him with his incredible kung-fu mastery and ability to summon the awesome power of the fiery Iron Fist.','https://image.tmdb.org/t/p/original/4l6KD9HhtD6nCDEfg10Lp6C6zah.jpg','https://image.tmdb.org/t/p/original/xHCfWGlxwbtMeeOnTvxUCZRGnkk.jpg','2 nominations',NULL,'TV-MA')
,('The Defenders',NULL,7.2,'50 minutes','English, Japanese, Mandarin','Series','Marvel''s "The Defenders," follows Daredevil, Jessica Jones, Luke Cage and Iron Fist; a quartet of singular heroes with one common goal--to save New York City. This is the story of four solitary figures, burdened with their own personal challenges, who realize they just might be stronger when teamed together.','https://image.tmdb.org/t/p/original/49XzINhH4LFsgz7cx6TOPcHUJUL.jpg','https://image.tmdb.org/t/p/original/72jj9y2Ejeub0mycZvkrPfT59sW.jpg','Nominated for 1 Primetime Emmy. 11 nominations total',NULL,'TV-MA')
,('Titans',NULL,7.5,'45 minutes','English','Series','Titans follows young heroes from across the DC Universe as they come of age and find belonging in a gritty take on the classic Teen Titans franchise. Dick Grayson and Rachel Roth, a special young girl possessed by a strange darkness, get embroiled in a conspiracy that could bring Hell on Earth. Joining them along the way are the hot-headed Starfire and lovable Beast Boy. Together they become a surrogate family and team of heroes.','https://image.tmdb.org/t/p/original/8e6QiSexmYKaiHGPvbhaFMmQEhc.jpg','https://image.tmdb.org/t/p/original/remQq0nfQoxY9fVglGGegHZjFxx.jpg','5 wins & 16 nominations total',NULL,'TV-MA')
,('Gotham',NULL,7.8,'42 minutes','English, Russian, Italian, French, Spanish, Arabic','Series','In crime ridden Gotham City, Thomas and Martha Wayne are murdered before young Bruce Wayne''s eyes. Although Gotham City Police Department detectives, James Gordon, and his cynical partner, Harvey Bullock, seem to solace''s the case quickly, things are not so simple. Inspired by Bruce''s traumatized desire for justice, Gordon vows to find it amid Gotham''s corruption. Thus begins Gordon''s lonely quest that would set him against his own comrades and the underworld with their own deadly rivalries and mysteries. In the coming wars, innocence will be lost and compromises will be made as some criminals will fall as casualties while others will rise as super villains. All the while, young Bruce observes this war with a growing obsession that would one day drive him to seek his own justice against the evil of Gotham as The Batman.','https://image.tmdb.org/t/p/original/wt3uwxSKbMg5ZNJBUOrsJoDnNWX.jpg','https://image.tmdb.org/t/p/original/825wlJ7RN0S9QWyPuGVVc8eeTa2.jpg','Won 1 Primetime Emmy. 7 wins & 62 nominations total',NULL,'TV-14')
,('Supernatural',NULL,8.4,'44 minutes','English','Series','John Winchester raised his two sons Sam and Dean to hunt and kill all things that go "bump in the night" after his wife Mary was murdered by an evil supernatural being when the boys were little. 22 years later the brothers set out on a journey, fighting evil along the way, to find their recently-missing father; when they finally do he reveals he knows what demon killed their mother and has found a way to track and kill it. Meanwhile, Sam develops frightening abilities such as seeing visions of people dying before it actually happens. These visions are somehow connected to the demon that murdered his mother and its mysterious plans that seem to be all about Sam. When their father dies striking a deal with that very same demon, the brothers determine to finish his crusade. But disturbing revelations about Sam''s part in the demon''s apocalyptic plan are presented when John''s dying last words to Dean are revealed.','https://image.tmdb.org/t/p/original/KoYWXbnYuS3b0GyQPkbuexlVK9.jpg','https://image.tmdb.org/t/p/original/lirPqYLTtd6XZqGn4cS1wiesTq0.jpg','Nominated for 3 Primetime Emmys. 37 wins & 126 nominations total',NULL,'TV-14')
,('Lucifer',NULL,8,'45 minutes','English','Series','Lucifer Morningstar, bored from his sulking life in hell, comes to live in Los Angeles. While there, he helps humanity with its miseries through his experience and telepathic abilities to bring people''s deepest desires and thoughts out of them. While meeting with a Detective in his nightclub (Lux), a shootout involving him and the Detective leads him to become an LAPD consultant who tries to punish people for their crimes through law and justice.','https://image.tmdb.org/t/p/original/ekZobS8isE6mA53RAiGDG93hBxL.jpg','https://image.tmdb.org/t/p/original/wbiPjTWpZMIB8ffBq7HvzAph4Ft.jpg','Nominated for 1 Primetime Emmy. 2 wins & 20 nominations total',NULL,'TV-14')
,('American Horror Story',NULL,7.9,'60 minutes','English','Series','Physical and psychological horrors affect a decomposing family, workers and residents of an insane asylum, a coven of witches, a cast of circus freaks, the employees and guests at a struggling hotel, a family who moved into a mysterious farmhouse, the members of a small suburb in Michigan, the surviving members of the Apocalypse and the counselors of a creepy summer camp in this haunting anthology series, focusing on the themes of infidelity, sanity, oppression, discrimination, addiction and exploitation.','https://image.tmdb.org/t/p/original/5LLG9bjq0i7V5N4UfRhnab8zHK4.jpg','https://image.tmdb.org/t/p/original/a4doyPOabvQor0RGkWdhVENAR3G.jpg','Won 17 Primetime Emmys. 132 wins & 413 nominations total',NULL,'TV-MA')
,('The Penguin',NULL,8.6,'58 minutes','English','Series',NULL,'https://image.tmdb.org/t/p/original/vOWcqC4oDQws1doDWLO7d3dh5qc.jpg','https://image.tmdb.org/t/p/original/qq36sU5xH581RiNEkookMQ9D7yp.jpg','14 wins & 34 nominations total',NULL,'TV-MA')
,('The Sopranos',NULL,9.2,'60 minutes','English, Italian, Russian','Series','An innovative look at the life of fictional Mafia Capo Tony Soprano, this serial is presented largely first person, but additional perspective is conveyed by the intimate conversations Tony has with his psychotherapist. We see Tony at work, at home, and in therapy. Moments of black comedy intersperse this aggressive, adult drama, with adult language, and extreme violence.','https://image.tmdb.org/t/p/original/rTc7ZXdroqjkKivFPvCPX0Ru7uw.jpg','https://image.tmdb.org/t/p/original/4QxoeC76pGZYlNmMXCRWb2GtWyd.jpg','Won 21 Primetime Emmys. 126 wins & 312 nominations total',NULL,'TV-MA');



GO



INSERT INTO Movies(Title,ReleaseDate,IMDB_Rating,MovieLength,Language,Type,Synopsis,MoviePosterLink,MovieBackdropLink,Awards,BoxOffice,MPAA_Rating) VALUES
('A Minecraft Movie','02 Apr 2025','5.9','101 minutes','English','Movie','Four misfits find themselves struggling with ordinary problems when they are suddenly pulled through a mysterious portal into the Overworld, a bizarre, cubic wonderland that thrives on imagination. To get back home, they''ll have to master this world while embarking on a magical quest with an unexpected, expert craftier. Together, their adventure will challenge all five to be bold and to reconnect with the qualities that make each of them uniquely creative-the very skills they need to thrive back in the real world.','https://image.tmdb.org/t/p/original/iPPTGh2OXuIv6d7cwuoPkw8govp.jpg','https://image.tmdb.org/t/p/original/2Nti3gYAX513wvhp8IiLL6ZDyOm.jpg',NULL,'$200,361,733','PG')
,('Novocaine','12 Mar 2025','6.5','110 minutes','English','Movie',NULL,'https://image.tmdb.org/t/p/original/xmMHGz9dVRaMY6rRAlEX4W0Wdhm.jpg','https://image.tmdb.org/t/p/original/sNx1A3822kEbqeUxvo5A08o4N7o.jpg',NULL,'$19,861,854','R')
,('Mickey 17','28 Feb 2025','6.9','137 minutes','English','Movie','Adapted from the novel Mickey7 by Edward Ashton, this stars Robert Pattinson as an "expendable" - a disposable crew member on a space mission, selected for dangerous tasks because his body can be reprinted if he dies, with his memories largely intact. With one regeneration, though, things go very wrong.','https://image.tmdb.org/t/p/original/edKpE9B5qN3e559OuMCLZdW1iBZ.jpg','https://image.tmdb.org/t/p/original/hNA73rnG4PjSwgojaC2gbO1f8Rt.jpg',NULL,'$45,537,252','R')
,('I Want to Talk','22 Nov 2024','7.1','122 minutes','Hindi','Movie','A middle aged man''s peaceful life goes topsy- turvy when he is diagnosed with a serious life threatening disease. This sudden development changes his perspective towards life and over time brings warmth in his relationship with his teen aged daughter.','https://image.tmdb.org/t/p/original/rqzv36dIy15ZdJvud02mYKKCRyT.jpg','https://image.tmdb.org/t/p/original/uUWSjtMgt5hh73pB3GrNBv7FFLd.jpg',NULL,NULL,NULL)
,('The Mehta Boys','06 Feb 2025','7.1','116 minutes','Hindi','Movie',NULL,'https://image.tmdb.org/t/p/original/ezZWkcI8FOQmJj6aPAADV7dg12.jpg','https://image.tmdb.org/t/p/original/nmQAWG0F3pmRPnHjkVAEdSuV9eI.jpg','1 win total',NULL,NULL)
,('Heretic','01 Nov 2024','7','111 minutes','English','Movie','Two young missionaries are forced to prove their faith when they knock on the wrong door. Greeted by a diabolical Mr. Reed (Hugh Grant), the religious women are drawn into a deadly game of cat-and-mouse, pulled further inside the strange man''s house.','https://image.tmdb.org/t/p/original/fr96XzlzsONrQrGfdLMiwtQjott.jpg','https://image.tmdb.org/t/p/original/ag66gJCiZ06q1GSJuQlhGLi3Udx.jpg','Nominated for 1 BAFTA Award29 nominations total','$27,986,380','R')
,('Speak No Evil','11 Sep 2024','6.8','110 minutes','English','Movie','When an American family is invited to spend the weekend at the idyllic country estate of a charming British family they befriended on vacation, what begins as a dream holiday soon warps into a snarled psychological nightmare. As the weekend progresses, they realize that a strange side lies within the family who invited them: the untrammeled hospitality of the charismatic, alpha-male estate owner masks an unspeakable darkness.','https://image.tmdb.org/t/p/original/6NwAlU6ZH6ua3sYpFAUpUnoKUmi.jpg','https://image.tmdb.org/t/p/original/1fL2S8LKxCVE9KoPRBXeagmBtex.jpg','4 nominations total','$36,931,420','R')
,('Joker: Folie √† Deux','04 Oct 2024','5.2','138 minutes','English','Movie','Arthur Fleck, now incarcerated at Arkham State Hospital, who encounters Harleen Quinzel, a fellow patient who becomes dangerously obsessed with his Joker persona. Their shared psychosis fuels a destructive and increasingly chaotic relationship, blurring the lines between reality and fantasy. The film delves deeper into Arthur''s mental state, exploring the complexities of his condition and the enduring power of his iconic villainous persona.','https://image.tmdb.org/t/p/original/zPOOyw6HBb5Qo6uaWJ5UxrBR6Ll.jpg','https://image.tmdb.org/t/p/original/7aDM1Rba57BeXr0jWRa3kBgEDUz.jpg','7 wins & 19 nominations total','$58,300,287','R')
,('Beetlejuice Beetlejuice','04 Sep 2024','6.6','105 minutes','English, Italian, French, Spanish','Movie','After an unexpected family tragedy, three generations of the Deetz family return home to Winter River. Still haunted by Beetlejuice, Lydia''s life is turned upside down when her rebellious teenage daughter, Astrid, discovers the mysterious model of the town in the attic and the portal to the Afterlife is accidentally opened. With trouble brewing in both realms, it''s only a matter of time until someone says Beetlejuice''s name three times and the mischievous demon returns to unleash his very own brand of mayhem.','https://image.tmdb.org/t/p/original/kKgQzkUCnQmeTPkyIwHly2t6ZFI.jpg','https://image.tmdb.org/t/p/original/xi1VSt3DtkevUmzCx2mNlCoDe74.jpg','1 win & 39 nominations total','$294,100,435','PG-13')
,('Beetlejuice','30 Mar 1988','7.5','92 minutes','English','Movie','Adam and Barbara are a normal couple...who happen to be dead. They have given their precious time to decorate their house and make it their own, but unfortunately a family is moving in, and not quietly. Adam and Barbara try to scare them out, but end up becoming the main attraction to the money making family. They call upon Beetlejuice to help, but Beetlejuice has more in mind than just helping.','https://image.tmdb.org/t/p/original/nnl6OWkyPpuMm595hmAxNW3rZFn.jpg','https://image.tmdb.org/t/p/original/yRKyJJYIzfeiVDHBe4LXguPQCvD.jpg','Won 1 Oscar. 7 wins & 11 nominations total','$74,664,632','PG')
,('Deadpool & Wolverine','24 Jul 2024','7.6','128 minutes','English, French, Spanish','Movie','In this multiverse story Deadpool is approached by a man named Paradox who intends on vaporizing his entire universe because apparently it''s not supposed to go on living without the now deceased hero Wolverine. Deadpool kidnaps another version of Wolverine to replace but this only results in Paradox banishing both Deadpool and Wolverine.','https://image.tmdb.org/t/p/original/8cdWjvZQUExUUTzyp4t6EDMubfO.jpg','https://image.tmdb.org/t/p/original/by8z9Fe8y7p4jo2YlW2SZDnptyT.jpg','29 wins & 78 nominations total','$363,070,709','R')
,('Longlegs','10 Jul 2024','6.6','101 minutes','English','Movie','FBI Agent Lee Harker is a gifted new recruit assigned to the unsolved case of an elusive serial killer. As the case takes complex turns, unearthing evidence of the occult, Harker discovers a personal connection to the merciless killer and must race against time to stop him before he claims the lives of another innocent family.','https://image.tmdb.org/t/p/original/1EwNyiiNFd863H4e8nWEzutnZD7.jpg','https://image.tmdb.org/t/p/original/bizhlTVjifYQUu4Xrdt7m3TYr7d.jpg','6 wins & 20 nominations total','$74,346,140','R')
,('A Quiet Place','03 Apr 2018','7.5','90 minutes','American Sign Language, English','Movie','In a devastated Earth overrun by myriads of invincible extraterrestrial predators, the Abbotts struggle to survive in the desolate death trap of New York City. In this muffled dystopia, utter silence may offer a chance to stay alive, as even the slightest noise can attract the deadly invaders. However, despite twelve months of relentless terror, the resilient Abbotts remain unbroken, mastering the art of survival. But now, more than ever, they must live by one rule: don''t make a sound or suffer the consequences.','https://image.tmdb.org/t/p/original/nAU74GmpUk7t5iklEp3bufwDq4n.jpg','https://image.tmdb.org/t/p/original/roYyPiQDQKmIKUEhO912693tSja.jpg','Nominated for 1 Oscar. 38 wins & 129 nominations total','$188,024,361','PG-13')
,('A Quiet Place Part II','20 May 2021','7.2','97 minutes','English, American Sign Language','Movie','Armed with bitter knowledge of the invading creatures'' fatal weakness, a grief-stricken Evelyn Abbott suddenly finds herself with two teens, a newborn son, and no place to hide. And now, 474 days after the all-out alien attack in A Quiet Place (2018), the Abbotts must do the impossible. As the resilient survivors embark on a life-threatening quest to find civilisation, Evelyn must expand beyond the boundaries and venture into her backyard''s eerily quiet, hostile territory. But hoping for a miracle won''t cut it. This time, the enemy is everywhere.','https://image.tmdb.org/t/p/original/4q2hz2m8hubgvijz8Ez0T2Os2Yv.jpg','https://image.tmdb.org/t/p/original/AsqUSUqXrK8JfH8WEQnCXVbIAv6.jpg','Nominated for 1 BAFTA Award14 wins & 44 nominations total','$160,072,261','PG-13')
,('A Quiet Place: Day One','26 Jun 2024','6.3','99 minutes','American Sign Language, English','Movie','After the events and revelations of ''A Quiet Place'' and ''A Quiet Place: Part 2'' it is time to go back to ''Day One''. Following Sam (Lupita Nyong''o) as she''s on a group trip in New York City, everything is going fine, until the invasion that sends the world into silence begins. Can the city stay quiet and can Sam and Eric (Joseph Quin), a new unlikely friend, make it somewhere safe? But no matter what happens, don''t make a sound and you might just find out what happens in ''A Quiet Place: Day One''.','https://image.tmdb.org/t/p/original/hU42CRk14JuPEdqZG3AWmagiPAP.jpg','https://image.tmdb.org/t/p/original/6XjMwQTvnICBz6TguiDKkDVHvgS.jpg','2 wins & 9 nominations total','$138,930,553','PG-13')
,('Flow','29 Aug 2024','7.9','85 minutes','None','Movie','The world seems to be coming to an end, teeming with the vestiges of a human presence. Cat is a solitary animal, but as its home is devastated by a great flood, he finds refuge on a boat populated by various species, and will have to team up with them despite their differences. In the lonesome boat sailing through mystical overflowed landscapes, they navigate the challenges and dangers of adapting to this new world.','https://image.tmdb.org/t/p/original/imKSymKBK7o73sajciEmndJoVkR.jpg','https://image.tmdb.org/t/p/original/b3mdmjYTEL70j7nuXATUAD9qgu4.jpg','Won 1 Oscar. 54 wins & 72 nominations total','$4,781,272','PG')
,('Anora','17 Oct 2024','7.5','139 minutes','English, Russian, Armenian','Movie','Anora, a young stripper from Brooklyn, gets her chance at a Cinderella story when she meets and impulsively marries the son of an oligarch. Once the news reaches Russia, her fairytale is threatened as the parents set out for New York to get the marriage annulled.','https://image.tmdb.org/t/p/original/7MrgIUeq0DD2iF7GR6wqJfYZNeC.jpg','https://image.tmdb.org/t/p/original/kEYWal656zP5Q2Tohm91aw6orlT.jpg','Won 5 Oscars. 150 wins & 272 nominations total','$20,474,295','R')
,('The Apprentice','09 Oct 2024','7.1','122 minutes','English, Hebrew','Movie','1970s New York: determined to emerge from his powerful father''s shadow and make a name for himself in Manhattan real estate, aspiring mogul Donald Trump is in the earliest days of his career when he encounters the man who will become one of the most important figures in his life: political fixer Roy M. Cohn. Seeing promise in young Donald, the influential attorney--who secured espionage convictions against Julius and Ethel Rosenberg and investigated suspected Communists alongside Senator Joseph McCarthy--teaches his new acolyte how to amass wealth and power through deception, intimidation, and media manipulation. The rest is history.','https://image.tmdb.org/t/p/original/zxA7bL9qOnU49NXIqpnyJlRvkqs.jpg','https://image.tmdb.org/t/p/original/kv9xVrxfLpudBLyYf1QvLCpUQuy.jpg','Nominated for 2 Oscars. 4 wins & 41 nominations total','$4,001,904','R')
,('Once Upon a Time... in Hollywood','16 Aug 2019','7.6','161 minutes','English, Italian, Spanish, German','Movie','Quentin Tarantino''s Once Upon a Time... in Hollywood visits 1969 Los Angeles, where everything is changing, as TV star Rick Dalton (Leonardo DiCaprio) and his longtime stunt double Cliff Booth (Brad Pitt) make their way around an industry they hardly recognize anymore. The ninth film from the writer-director features a large ensemble cast and multiple storylines in a tribute to the final moments of Hollywood''s golden age.','https://image.tmdb.org/t/p/original/8j58iEBw9pOXFD2L0nt0ZXeHviB.jpg','https://image.tmdb.org/t/p/original/xwgBHC2FgoIrQitl8jZwXXdsR9u.jpg','Won 2 Oscars. 147 wins & 384 nominations total','$142,502,728','R')
,('Dumb Money','20 Sep 2023','6.9','105 minutes','English','Movie','It is the ultimate David vs. Goliath tale, based on the insane true story of everyday people who flipped the script on Wall Street and got rich by turning GameStop (the video-game store) into the world''s hottest company. In the middle of everything is regular guy Keith Gill (Paul Dano), who starts it all by sinking his life savings into the stock and posting about it. When his social posts start blowing up, so does his life, and so do the lives of everyone following him. As a stock tip becomes a movement, everyone gets rich--until the billionaires fight back, and both sides find their worlds turned upside-down.','https://image.tmdb.org/t/p/original/e9u7luSxFKOZgPTB9XHFnPArGdP.jpg','https://image.tmdb.org/t/p/original/dTOQaHP4PjDXU2JwDF6UYqGqRT0.jpg','1 win & 2 nominations total','$13,925,356','R')
,('The Big Short','29 Jan 2016','7.8','130 minutes','English','Movie','Three separate but parallel stories of the U.S mortgage housing crisis of 2005 are told. Michael Burry, an eccentric ex-physician turned one-eyed Scion Capital hedge fund manager, has traded traditional office attire for shorts, bare feet and a Supercuts haircut. He believes that the US housing market is built on a bubble that will burst within the next few years. Autonomy within the company allows Burry to do largely as he pleases, so Burry proceeds to bet against the housing market with the banks, who are more than happy to accept his proposal for something that has never happened in American history. The banks believe that Burry is a crackpot and therefore are confident in that they will win the deal. Jared Vennett with Deutschebank gets wind of what Burry is doing and, as an investor believes he too can cash in on Burry''s beliefs. An errant telephone call to FrontPoint Partners gets this information into the hands of Mark Baum, an idealist who is fed up with the corruption in the financial industry. Baum and his associates, who work at an arms length under Morgan Stanley, decide to join forces with Vennett despite not totally trusting him. In addition to Burry''s information, they further believe that most of the mortgages are overrated by the bond agencies, with the banks collating all the sub-prime mortgages under AAA packages. Charlie Geller and Jamie Shipley, who are minor players in a $30 million start-up garage company called Brownfield, get a hold of Vennett''s prospectus on the matter. Wanting in on the action but not having the official clout to play, they decide to call an old "friend", retired investment banker Ben Rickert, to help out. All three of these groups work on the premise that the banks are stupid and don''t know what''s going on, while for them to win, the general economy has to lose, which means the suffering of the general investor who trusts the financial institutions. That latter aspect may not sit well with Baum. Some of these assumptions may be incorrect and may be far more manipulative than they could have ever imagined, which in turn may throw curves into the process.','https://image.tmdb.org/t/p/original/isuQWbJPbjybBEWdcCaBUPmU0XO.jpg','https://image.tmdb.org/t/p/original/i7UCf0ysjbYYaqcSKUox9BJz4Kp.jpg','Won 1 Oscar. 37 wins & 81 nominations total','$70,259,870','R')
,('1408','22 Jun 2007','6.8','104 minutes','English','Movie','Author Mike Enslin specializes in paranormal investigations writing books along the line of the 10 best haunted hotels in America and so on. He receives an anonymous postcard in the mail telling him not to stay in room 1408 at the Dolphin Hotel in New York City. His attempts to make a reservation there are unsuccessful and he is told that it isn''t available - ever. His research reveals that there have been a number of very strange deaths in that room dating as far back as the hotel''s opening 95 years ago. The hotel is forced to accept him but the manager, Gerald Olin, begs him not to stay there. In his opinion, the room is evil and no one has ever been able to stay in there for more than an hour. Enslin scoffs at the warning and is soon in the room - from which he soon becomes desperate to leave.','https://image.tmdb.org/t/p/original/yE9MCW7ZNxSw5SC1TMqm51pMBIV.jpg','https://image.tmdb.org/t/p/original/e6GXJOyRSFsGOwGHnG1TmLuqN9N.jpg','4 wins & 12 nominations total','$71,985,628','PG-13')
,('Conclave','25 Oct 2024','7.4','120 minutes','English, Italian, Spanish, Latin','Movie','Cardinal Lawrence (Ralph Fiennes) is tasked with running this covert process after the unexpected death of the beloved Pope. Once the Catholic Church''s most powerful leaders have gathered from around the world and are locked together in the Vatican halls, Lawrence uncovers a trail of deep secrets left in the dead Pope''s wake--secrets which could shake the foundations of the Church.','https://image.tmdb.org/t/p/original/m5x8D0bZ3eKqIVWZ5y7TnZ2oTVg.jpg','https://image.tmdb.org/t/p/original/1YMrOtrW7b4pL2lfD8UciZPOJGs.jpg','Won 1 Oscar. 87 wins & 318 nominations total','$32,580,655','PG')
,('Dev.D','06 Feb 2009','7.9','144 minutes','Hindi','Movie','Dev who, after spurning Paro''s love due to a misunderstanding, turns to drugs and vodka for solace. Paro moves on but Dev still is in remorse. He meets Chanda, a prostitute with problems of her own. Dev likes her but his penchant for self-destruction prevents him and Chanda from truly getting together. He also meets sleazy people like Chunni, Chanda''s pimp who drags Dev further into self-destruction to further his own needs.','https://image.tmdb.org/t/p/original/A2SILF5dOBrAJU52DlmMyR5xzDx.jpg','https://image.tmdb.org/t/p/original/rACXg4zadOTEQKceu0zViohXwCb.jpg','12 wins & 27 nominations','$18,613','Not Rated')
,('Get Away','06 Dec 2024','5.3','86 minutes','English','Movie',NULL,'https://image.tmdb.org/t/p/original/ser6ZCKHMXhQISKULYCxz6Saf3I.jpg','https://image.tmdb.org/t/p/original/b6H9dBlLEkAXo3qprUuMJrjztFe.jpg','1 nomination total','$179,897','R')
,('We Live in Time','10 Oct 2024','7','108 minutes','English','Movie','Almut (Florence Pugh) and Tobias (Andrew Garfield) are brought together in a surprise encounter that changes their lives. Through snapshots of their life together -- falling for each other, building a home, becoming a family -- a difficult truth is revealed that rocks its foundation. As they embark on a path challenged by the limits of time, they learn to cherish each moment of the unconventional route their love story has taken, in filmmaker John Crowley''s decade-spanning, deeply moving romance.','https://image.tmdb.org/t/p/original/oeDNBgnlGF6rnyX1P1K8Vl2f3lW.jpg','https://image.tmdb.org/t/p/original/4t8IXJF4umwCfbdpeKLvlN3zkKp.jpg',NULL,'$24,690,031','R')
,('Juror #2','30 Oct 2024','7','114 minutes','English','Movie',NULL,'https://image.tmdb.org/t/p/original/ugQkpGajKFQ8eyOEhGheR0HfWQ.jpg','https://image.tmdb.org/t/p/original/9Qq8InnodUYs8zdam8Zj967i6RO.jpg',NULL,NULL,NULL)
,('A Real Pain','01 Nov 2024','7.1','90 minutes','English, Polish','Movie','"A Real Pain" follows mismatched cousins David (Jesse Eisenberg) and Benji (Kieran Culkin) as they reunite for a tour through Poland to honor their beloved grandmother, but their adventure takes a dark turn when the odd couple''s old tensions resurface against the backdrop of their family history.','https://image.tmdb.org/t/p/original/67xRIXm5TxXRT4nV2V4AEJ9yq2d.jpg','https://image.tmdb.org/t/p/original/nGC3ZkXEcjGbqAAonS1xn6gaNpb.jpg','Won 1 Oscar. 66 wins & 90 nominations total','$8,344,978','R')
,('Y2K','06 Dec 2024','4.8','91 minutes','English','Movie',NULL,'https://image.tmdb.org/t/p/original/qndubIQalyxBJI5EBNZKGXEX74q.jpg','https://image.tmdb.org/t/p/original/aoqJHtjzpbgoujhDO9R88gL3Kmf.jpg','1 nomination total','$4,446,596','R')
,('Zombieland: Double Tap','09 Oct 2019','6.7','99 minutes','English','Movie','One long decade after the post-apocalyptic events in Zombieland (2009), the resilient quartet of survivors--the tough-as-nails zombie exterminator, Tallahassee; his rule-making comrade, Columbus; the free-spirited huntress, Wichita, and her younger sister, Little Rock--find themselves in the bosom of a now-derelict White House. However, in a rabid world still overrun by multitudes of walking dead and mutated strains of evolved animated corpses, a premeditated separation will send the team back to square one, searching, once more, for the promised land. Now, all hope rests on Babylon: an entirely organic commune of blissful vegetarian pacifists who love to party. Is this the end of the road?','https://image.tmdb.org/t/p/original/dtRbVsUb5O12WWO54SRpiMtHKC0.jpg','https://image.tmdb.org/t/p/original/jCCdt0e8Xe9ttvevD4S3TSMNdH.jpg','6 nominations total','$73,123,082','R')
,('Venom: The Last Dance','2024','6','110 minutes','English','Movie','In Venom: The Last Dance, Tom Hardy returns as Venom, one of Marvel''s greatest and most complex characters, for the final film in the trilogy. Eddie and Venom are on the run. Hunted by both of their worlds and with the net closing in, the duo are forced into a devastating decision that will bring the curtains down on Venom and Eddie''s last dance.','https://image.tmdb.org/t/p/original/vGXptEdgZIhPg3cGlc7e8sNPC2e.jpg','https://image.tmdb.org/t/p/original/3V4kLQg0kSqPLctI5ziYWabAZYF.jpg','1 win & 4 nominations total','$139,755,882','PG-13')
,('Spirited Away','20 Jul 2001','8.6','124 minutes','Japanese, English','Movie','The fanciful adventures of a ten-year-old girl named Chihiro, who discovers a secret world when she and her family get lost and venture through a hillside tunnel. When her parents undergo a mysterious transformation, Chihiro must fend for herself as she encounters strange spirits, assorted creatures and a grumpy sorceress who seeks to prevent her from returning to the human world.','https://image.tmdb.org/t/p/original/39wmItIWsg5sZMyRUHLkWBcuVCM.jpg','https://image.tmdb.org/t/p/original/6oaL4DP75yABrd5EbC4H2zq5ghc.jpg','Won 1 Oscar. 58 wins & 31 nominations total','$15,205,725','PG')
,('Blackmail','05 Apr 2018','7.1','138 minutes','Hindi','Movie','Dev Kaushal is a full time working man with an unexcited life on the requests of his friend Anand.He decides to surprise his wife Reena in order to make it exciting.But when he reaches home to surprise her he is shocked to see his wife with her boyfriend Ranjeet.Dev then decides to blackmail him and extort money from or else he will tell about his secret affair to his wife Dolly.','https://image.tmdb.org/t/p/original/apt3peZIUjd56Rkt0HGxp6EaxKe.jpg','https://image.tmdb.org/t/p/original/oXuu7LYV1ztNotZvvOJchqBgl8Z.jpg','4 nominations total',NULL,'Not Rated')
,('After Hours','16 Aug 1985','7.6','97 minutes','English','Movie','A meek word processor in New York impulsively travels downtown to Soho for date with an attractive, but apparently disturbed young woman, and finds himself trapped in a nightmarishly surreal vortex of improbable coincidences and farcical circumstances.','https://image.tmdb.org/t/p/original/3eLTAg0A7Ae66D5dkn4c7akpR39.jpg','https://image.tmdb.org/t/p/original/38zhXIWXlWDzwI8gRJOf5ISyGFc.jpg','Nominated for 1 BAFTA Award3 wins & 10 nominations total','$10,609,321','R')
,('Arrival','10 Nov 2016','7.9','116 minutes','English, Mandarin, Russian','Movie','Linguistics professor Louise Banks leads an elite team of investigators when gigantic spaceships touchdown in 12 locations around the world. As nations teeter on the verge of global war, Banks and her crew must race against time to find a way to communicate with the extraterrestrial visitors. Hoping to unravel the mystery, she takes a chance that could threaten her life and quite possibly all of mankind.','https://image.tmdb.org/t/p/original/x2FJsf1ElAgr63Y3PNPtJrcmpoe.jpg','https://image.tmdb.org/t/p/original/hNCqkXbWd40eftqSdjq8TmV7Mqr.jpg','Won 1 Oscar. 71 wins & 268 nominations total','$100,546,139','PG-13')
,('The Boy and the Heron','14 Jul 2023','7.4','124 minutes','Japanese','Movie','From the legendary Studio Ghibli and Academy Award¬Æ-winning director Hayao Miyazaki (Spirited Away) comes a new critically-acclaimed fantasy adventure. After losing his mother during the war, young Mahito moves to his family''s estate in the countryside. There, a series of mysterious events lead him to a secluded and ancient tower, home to a mischievous gray heron. When Mahito''s new stepmother disappears, he follows the gray heron into the tower, and enters a fantastic world shared by the living and the dead. As he embarks on an epic journey with the heron as his guide, Mahito must uncover the secrets of this world, and the truth about himself. Featuring the voices of Christian Bale, Dave Bautista, Gemma Chan, Willem Dafoe, Karen Fukuhara, Mark Hamill, Robert Pattinson and Florence Pugh.','https://image.tmdb.org/t/p/original/f4oZTcfGrVTXKTWg157AwikXqmP.jpg','https://image.tmdb.org/t/p/original/75nSb1fbWooipwcSU5bUttiOriI.jpg','Won 1 Oscar. 35 wins & 89 nominations total','$46,832,867','PG-13')
,('Furiosa: A Mad Max Saga','22 May 2024','7.5','148 minutes','English','Movie','As the world fell, young Furiosa is snatched from the Green Place of Many Mothers and falls into the hands of a great Biker Horde led by the Warlord Dementus. Sweeping through the Wasteland they come across the Citadel presided over by The Immortan Joe. While the two Tyrants war for dominance, Furiosa must survive many trials as she puts together the means to find her way home.','https://image.tmdb.org/t/p/original/iADOJ8Zymht2JPMoy3R7xceZprc.jpg','https://image.tmdb.org/t/p/original/wNAhuOZ3Zf84jCIlrcI6JhgmY5q.jpg','26 wins & 128 nominations total','$67,475,791','R')
,('I Saw the TV Glow','17 May 2024','5.8','100 minutes','English','Movie','Teenager Owen is just trying to make it through life in the suburbs, when his classmate introduces him to a mysterious late-night TV show-one which conveys a vision of a supernatural world beneath their own. In the pale glow of the television, Owen''s view of reality begins to crack.','https://image.tmdb.org/t/p/original/hS4GYkYpN1rfl4GIxyc02sCyfAj.jpg','https://image.tmdb.org/t/p/original/sNBnCmF1ueoERa4uW5kh929KkRO.jpg','6 wins & 61 nominations total','$5,017,817','PG-13')
,('My Neighbor Totoro','16 Apr 1988','8.1','86 minutes','Japanese','Movie','Excited about reuniting with their ailing mother, close-knit sisters Satsuki and Mei embark on an exciting adventure when they move with their loving professor father to a new house in the verdant countryside of 1950s summer Japan. Now, nothing can stop them. And with mum in the hospital, the girls have all the time in the world to explore nature and the dense adjacent forest, the home of bashful mystical creatures only children can see. Under the clear blue sky''s cloudless bliss and the bright yellow sun''s promise of a luminous future, nothing can blemish the young sisters'' flawless fantasy--not even life''s trying times. After all, mother is getting better. Then, one radiant morning, as the shimmering green leaves of the towering camphor trees swayed in the soft morning breeze, the wide-eyed siblings stumbled upon a Totoro. But who is the enchanting visitor? Will the rotund neighbour, with his fluffy fur and mysterious eyes, be the girls'' forever friend?','https://image.tmdb.org/t/p/original/rtGDOeG9LzoerkDGZF9dnVeLppL.jpg','https://image.tmdb.org/t/p/original/6O1mOoTXuc1WqjKd2R7MFQHZ7Eb.jpg','5 wins & 2 nominations total','$2,250,213','G')
,('Civil War','10 Apr 2024','7','109 minutes','English','Movie','Civil War is a 2024 dystopian thriller film written and directed by Alex Garland. It follows a team of journalists traveling from New York City to Washington, D.C. during a civil war fought across the United States between an authoritarian federal government and several regional factions.','https://image.tmdb.org/t/p/original/sh7Rg8Er3tFcN9BpKIPOMvALgZd.jpg','https://image.tmdb.org/t/p/original/en3GU5uGkKaYmSyetHV4csHHiH3.jpg','7 wins & 64 nominations total','$68,756,072','R')
,('The Holdovers','10 Nov 2023','7.9','133 minutes','English','Movie','Nobody likes teacher Paul Hunham (Giamatti) -- not his students, not his fellow faculty, not the headmaster, who all find his pomposity and rigidity exasperating. With no family and nowhere to go over Christmas holiday in 1970, Paul remains at school to supervise students unable to journey home. After a few days, only one student holdover remains -- a trouble-making 15-year-old named Angus, a good student whose bad behavior always threatens to get him expelled. Joining Paul and Angus is head cook Mary (Randolph)- who caters to sons of privilege and whose own son was recently lost in Vietnam. These three very different shipwrecked people form an unlikely Christmas family sharing comic misadventures during two very snowy weeks in New England. The real journey is how they help one another understand that they are not beholden to their past-they can choose their own futures.','https://image.tmdb.org/t/p/original/VHSzNBTwxV8vh7wylo7O9CLdac.jpg','https://image.tmdb.org/t/p/original/A99WMiz0ASpH9coOFrxSEuwTWx0.jpg','Won 1 Oscar. 137 wins & 212 nominations total','$20,355,375','R')
,('Challengers','18 Apr 2024','7','131 minutes','English, Romanian','Movie','From visionary filmmaker Luca Guadagnino, "Challengers" stars Zendaya as Tashi Duncan, a former tennis prodigy turned coach and a force of nature who makes no apologies for her game on and off the court. Married to a champion on a losing streak (Mike Faist of "West Side Story"), Tashi''s strategy for her husband''s redemption takes a surprising turn when he must face off against the washed-up Patrick (Josh O''Connor of The Crown)--his former best friend and Tashi''s former boyfriend. As their pasts and presents collide, and tensions run high, Tashi must ask herself what winning will cost.','https://image.tmdb.org/t/p/original/H6vke7zGiuLsz4v4RPeReb9rsv.jpg','https://image.tmdb.org/t/p/original/4CcUgdiGe83MeqJW1NyJVmZqRrF.jpg','82 wins & 155 nominations total','$50,119,408','R')
,('Godzilla x Kong: The New Empire','27 Mar 2024','6','115 minutes','English','Movie','The new installment in the Monsterverse puts the mighty Kong and the fearsome Godzilla against a colossal deadly threat hidden within our world that threatens the existence of their species and our very own, as well as diving deep into the mysteries of Skull Island and beyond. Delving straight into the origins of Hollow Earth, this film will explore the ancient Titan battle that brought man and monster together forever.','https://image.tmdb.org/t/p/original/z1p34vh7dEOnLDmyCrlUVLuoDzd.jpg','https://image.tmdb.org/t/p/original/lLh39Th5plbrQgbQ4zyIULsd0Pp.jpg','3 wins & 5 nominations total','$196,350,016','PG-13')
,('Lost Ladies','01 Mar 2024','8.4','122 minutes','Hindi','Movie','Set in 2001, somewhere in rural India, #LaapataaLadies is about the adventures of two young brides who get lost from the same train. The chaos that ensues is both funny and moving; and sparks an unexpected series of events that lead them into a journey of immense discovery; about themselves, womanhood and life itself.','https://image.tmdb.org/t/p/original/yXt07MYeiyQRzS69PMHy0BPjCGP.jpg','https://image.tmdb.org/t/p/original/uUVXEEyMsyWxrcbmAppUCYg6egV.jpg','6 wins & 7 nominations total',NULL,'TV-14')
,('Citizen Kane','06 Jun 1941','8.3','119 minutes','English, Italian','Movie','A group of reporters are trying to decipher the last word ever spoken by Charles Foster Kane, the millionaire newspaper tycoon: "Rosebud." The film begins with a news reel detailing Kane''s life for the masses, and then from there, viewers are shown flashbacks from Kane''s life. As the reporters investigate further, the viewers see a display of a fascinating man''s rise to fame, and how he eventually fell off the top of the world.','https://image.tmdb.org/t/p/original/sav0jxhqiH0bPr2vZFU0Kjt2nZL.jpg','https://image.tmdb.org/t/p/original/ruF3Lmd4A8MHbnEBE6lxPMbsHGL.jpg','Won 1 Oscar. 16 wins & 13 nominations total','$1,627,530','PG')
,('Late Night with the Devil','19 Mar 2024','7','93 minutes','English','Movie','October 31, 1977. Johnny Carson rival Jack Delroy hosts a syndicated talk show ''Night Owls'' that has long been a trusted companion to insomniacs around the country. A year after the tragic death of Jack''s wife, ratings have plummeted. Desperate to turn his fortunes around, Jack plans a Halloween special like no other, unaware he is about to unleash evil into the living rooms of America.','https://image.tmdb.org/t/p/original/mu8LRWT9GHkfiyHm7kgxT6YNvMW.jpg','https://image.tmdb.org/t/p/original/umyOinNa6vqqnqoVc9QqzyaapUz.jpg','8 wins & 32 nominations total','$10,001,000','R')
,('Under the Silver Lake','08 Aug 2018','6.5','139 minutes','English','Movie','Sam (Andrew Garfield) is a disenchanted 33-year-old who discovers a mysterious woman, Sarah (Riley Keough), frolicking in his apartment''s swimming pool. When she vanishes, Sam embarks on a surreal quest across Los Angeles to decode the secret behind her disappearance, leading him into the murkiest depths of mystery, scandal and conspiracy in the City of Angels.','https://image.tmdb.org/t/p/original/771Ey73LqsE9ORJhQCI25rgMXS2.jpg','https://image.tmdb.org/t/p/original/gXbcj4taNuDsKjavcm9UrzfyYxd.jpg','3 wins & 9 nominations total','$46,083','R')
,('12 Angry Men','10 Apr 1957','9','96 minutes','English','Movie','The defense and the prosecution have rested, and the jury is filing into the jury room to decide if a young man is guilty or innocent of murdering his father. What begins as an open-and-shut case of murder soon becomes a detective story that presents a succession of clues creating doubt, and a mini-drama of each of the jurors'' prejudices and preconceptions about the trial, the accused, AND each other. Based on the play, all of the action takes place on the stage of the jury room.','https://image.tmdb.org/t/p/original/ow3wq89wM8qd5X7hWKxiRfsFf9C.jpg','https://image.tmdb.org/t/p/original/bxgTSUenZDHNFerQ1whRKplrMKF.jpg','Nominated for 3 Oscars. 16 wins & 12 nominations total',NULL,'Approved')
,('Children of Heaven','1997','8.2','89 minutes','Persian','Movie','Zahra''s shoes are gone; her older brother Ali lost them. They are poor, there are no shoes for Zahra until they come up with an idea: they will share one pair of shoes, Ali''s. School awaits. Will the plan succeed?','https://image.tmdb.org/t/p/original/jWqh1CJWAEcxckMRrf6ARhIEh0R.jpg','https://image.tmdb.org/t/p/original/9W250lyDDC3P9AgW5ZKGRj7R2Pv.jpg','Nominated for 1 Oscar. 18 wins & 5 nominations total','$933,933','PG')
,('Ricky Stanicky','07 Mar 2024','6.2','113 minutes','English','Movie','When three childhood best friends pull a prank that goes wrong, they invent the imaginary Ricky Stanicky to get them out of trouble. Twenty years after creating this "friend", Dean, JT, and Wes (Zac Efron, Andrew Santino, and Jermaine Fowler) still use the nonexistent Ricky as a handy alibi for their immature behavior. When their spouses and partners get suspicious and demand to finally meet the fabled Mr. Stanicky, the guilty trio decide to hire washed-up actor and raunchy celebrity impersonator "Rock Hard" Rod (John Cena) to bring him to life. But when Rod takes his role of a lifetime too far, they begin to wish they''d never invented Ricky in the first place.','https://image.tmdb.org/t/p/original/oJQdLfrpl4CQsHAKIxd3DJqYTVq.jpg','https://image.tmdb.org/t/p/original/wfdHCilp8cNPK7tK4jLgdUT7703.jpg','1 nomination total',NULL,'R')
,('Fargo','22 Mar 1996','8.1','98 minutes','English','Movie','Jerry works in his father-in-law''s car dealership and has gotten himself in financial problems. He tries various schemes to come up with money needed for a reason that is never really explained. It has to be assumed that his huge embezzlement of money from the dealership is about to be discovered by father-in-law. When all else falls through, plans he set in motion earlier for two men to kidnap his wife for ransom to be paid by her wealthy father (who doesn''t seem to have the time of day for son-in-law). From the moment of the kidnapping, things go wrong and what was supposed to be a non-violent affair turns bloody with more blood added by the minute. Jerry is upset at the bloodshed, which turns loose a pregnant sheriff from Brainerd, MN who is tenacious in attempting to solve the three murders in her jurisdiction.','https://image.tmdb.org/t/p/original/rUjUCT6GvFS475sKJVfHWZUdnv5.jpg','https://image.tmdb.org/t/p/original/747dgDfL5d8esobk7h4odaOFhUq.jpg','Won 2 Oscars. 84 wins & 58 nominations total','$24,611,975','R')
,('Burn After Reading','12 Sep 2008','7','96 minutes','English','Movie','Osbourne Cox, a Balkan expert, resigned from the CIA because of a drinking problem, so he begins a memoir. His wife wants a divorce and expects her lover, Harry, a philandering State Department marshal, to leave his wife. A CD-ROM falls out of a gym bag at a Georgetown fitness center. Two employees there try to turn it into cash: Linda, who wants money for cosmetic surgery, and Chad, an amiable goof. Information on the disc leads them to Osbourne who rejects their sales pitch; then they visit the Russian embassy. To sweeten the pot, they decide they need more of Osbourne''s secrets. Meanwhile, Linda''s boss likes her, and Harry''s wife leaves for a book tour. All roads lead to Osbourne''s house.','https://image.tmdb.org/t/p/original/jdwSkQu3XirmX18MNj8CqFWsCk.jpg','https://image.tmdb.org/t/p/original/mLFJ6BooWWbKLM9hevV1ZpfWfl4.jpg','Nominated for 3 BAFTA 8 wins & 32 nominations total','$60,355,347','R')
,('Lisa Frankenstein','07 Feb 2024','6.1','101 minutes','English','Movie','After suffering an unspeakable tragedy, Lisa finds herself at a new school her senior year in 1989, struggling to fit in, despite her "sister" Taffy trying to get her to conform to her more typical cheerleader vibe. When a freak accident reanimates a corpse from the abandoned cemetery where she was spending time, she must keep his arrival a secret from her family and classmates, all while deciding how much she wants to help him, and at what cost.','https://image.tmdb.org/t/p/original/jAW7ZdIm4HLKB3g15uMOWYNdU8r.jpg','https://image.tmdb.org/t/p/original/tsDoiLwZyAbYewoIUDJKk1SJzTF.jpg','4 nominations total','$9,774,285','PG-13')
,('Poor Things','08 Dec 2023','7.8','141 minutes','English, French, Portuguese','Movie','From filmmaker Yorgos Lanthimos and producer Emma Stone comes the incredible tale and fantastical evolution of Bella Baxter (Stone), a young woman crafted by the brilliant and unorthodox scientist Dr. Godwin Baxter (Willem Dafoe) using an infant''s brain and her dead mother''s body. Under Baxter''s protection, Bella is eager to learn. Hungry for the worldliness she is lacking, Bella runs off with Duncan Wedderburn (Mark Ruffalo), a slick and debauched lawyer, on a whirlwind adventure across the continents. Free from the prejudices of her times, Bella experiences sexual liberation and a desire for equality.','https://image.tmdb.org/t/p/original/kCGlIMHnOm8JPXq3rXM6c5wMxcT.jpg','https://image.tmdb.org/t/p/original/zh6IdheEYinU4TPtorWsjx6qPQE.jpg','Won 4 Oscars. 122 wins & 424 nominations total','$34,553,225','R')
,('White Chicks','23 Jun 2004','5.8','109 minutes','English','Movie','After an unsuccessful mission, FBI agents Kevin and Marcus Copeland fall into disgrace at the agency. They decide to work undercover on an abduction case disguised as Brittany and Tiffany Wilson, the vain, spoiled white daughters of a tycoon.','https://image.tmdb.org/t/p/original/aHTUpo45qy9QYIOnVITGGqLoVcA.jpg','https://image.tmdb.org/t/p/original/85k0kaoRgGmF6ACq0M61AFxhjLN.jpg','3 wins & 13 nominations total','$70,831,760','PG-13')
,('The Zone of Interest','14 Dec 2023','7.3','105 minutes','German, Polish, Yiddish','Movie','German-occupied Poland, summer of 1943. More than anything, Hedwig, an indefatigable mother of five, wants to keep her well-organised life as is. After all, she has worked her fingers to the bone to create a fragrant slice of paradise to raise her children, and nothing will change that. If only her husband, the distinguished SS officer and Auschwitz commander Rudolf Hoess, weren''t always burdened by his duties. But perfection is a fleeting illusion. As the oblivious life of the commandant''s wife unravels in cloudless bliss, Rudolf finds himself swamped with work, saddled with testing a new ventilation design and overseeing the installation of a highly effective Topf and Sons multi-muffle, non-stop incineration oven system. Indeed, it''s hard to imagine that just a hair''s breadth away from the peaceful and idyllic H√∂ss household, the unimaginable horrors of the Final Solution were unfolding in full swing. And as noisome fumes and muffled, blood-curdling noises blemish Hedwig''s verdant utopia, a question emerges. When evil becomes banal and apathy requires no effort, what separates man from beast?','https://image.tmdb.org/t/p/original/hUu9zyZmDd8VZegKi1iK1Vk0RYS.jpg','https://image.tmdb.org/t/p/original/aPQsU3yLDUOhLJYnSqkhKRkQTAw.jpg','Won 2 Oscars. 67 wins & 185 nominations total','$8,659,464','PG-13')
,('Anyone But You','15 Dec 2023','6.1','103 minutes','English','Movie','In the aftermath of a captivating first encounter, Bea and Ben discover that their initial fiery passion has inexplicably dwindled to frosty misunderstanding. However, fate intervenes: Thrown together again at a dreamy Australian wedding, they opt for a charade of coupledom. But sparks reignite amid the sun-kissed scenery, forcing them to confront their true feelings and embrace a second chance at love.','https://image.tmdb.org/t/p/original/5qHoazZiaLe7oFBok7XlUhg96f2.jpg','https://image.tmdb.org/t/p/original/j9eOeLlTGoHoM8BNUJVNyWmIvCi.jpg','1 win & 4 nominations total','$88,319,668','R')
,('The Iron Claw','21 Dec 2023','7.6','132 minutes','English','Movie','The true story of the inseparable Von Erich brothers, who made history in the intensely competitive world of professional wrestling in the early 1980s. Through tragedy and triumph, under the shadow of their domineering father and coach, the brothers seek larger-than-life immortality on the biggest stage in sports.','https://image.tmdb.org/t/p/original/lsdismtCDga4vsKnmliz0h7CaZT.jpg','https://image.tmdb.org/t/p/original/4l65BWqJBl7hBwdIwp2nQdwsOuw.jpg','3 wins & 39 nominations total','$35,070,296','R')
,('Paris, Texas','23 Aug 1984','8.1','145 minutes','English, Spanish','Movie','After an absence of 4 years, Travis Henderson suddenly reappears in a deserted part of south Texas. His brother Walt fetches him and he is soon reunited with his son Hunter. He can''t really explain why he''s been away or why he''s suddenly reappeared. Walt has been raising Travis'' son Hunter and it takes a while for the two of them to get reacquainted. They eventually set off together to find Jane, Travis'' wife and Hunter''s mother. She is found working in a peep show in Houston but a happy family reunion isn''t in the cards.','https://image.tmdb.org/t/p/original/mYYdCi54E2xVbUxCr03tMookv9Z.jpg','https://image.tmdb.org/t/p/original/pAKpSMrCv9HQdMKvIdLgTdpKh5f.jpg','Won 1 BAFTA Award16 wins & 12 nominations total','$2,422,082','R')
,('Taste of Cherry','10 Oct 1997','7.7','95 minutes','Persian','Movie','Middle-aged Mr.Badii is planning to commit suicide and desperately seeks anyone to assist him - he has already dug out the grave in the mountains, but the assistant will have to bury him when he will do the deed. He asks Kurd soldier, Afghan seminarian, but everyone refuses by some reason. Finally he finds an old Turkish taxidermist, who has a sick son and previously attempted suicide himself, and he agrees to assist Badii.','https://image.tmdb.org/t/p/original/u6GYH4HyR0BVwpqFuTOc2g4KB1L.jpg','https://image.tmdb.org/t/p/original/44SNTCSZTdbF5bzgUy4IfPV3DUq.jpg','3 wins & 5 nominations',NULL,'Not Rated')
,('The Irishman','14 Nov 2019','7.8','209 minutes','English, Italian, Latin, Spanish, German','Movie','Frank "The Irishman" Sheeran is a man with a lot on his mind. The former labor union high official and hitman, learned to kill serving in Italy during the Second World War. He now looks back on his life and the hits that defined his mob career, maintaining connections with the Bufalino crime family. In particular, the part he claims to have played in the disappearance of his life-long friend, Jimmy Hoffa, the former president of the International Brotherhood of Teamsters, who mysteriously vanished in late July 1975 at the age of 62.','https://image.tmdb.org/t/p/original/mbm8k3GFhXS0ROd9AD1gqYbIFbM.jpg','https://image.tmdb.org/t/p/original/1RDto0tLo8Fhq7OcwgDaM7nECb7.jpg','Nominated for 10 Oscars. 73 wins & 359 nominations total',NULL,'R')
,('Sinners','16 Apr 2025','8.2','137 minutes','English','Movie','From Ryan Coogler-director of "Black Panther" and "Creed"-and starring Michael B. Jordan comes a new vision of fear: "Sinners." Trying to leave their troubled lives behind, twin brothers (Jordan) return to their hometown to start again, only to discover that an even greater evil is waiting to welcome them back.','https://image.tmdb.org/t/p/original/xqqi8PCAR4uzo9MEZu9Q7BhX2tu.jpg','https://image.tmdb.org/t/p/original/oUgVgGaNqV9Y0Zdyjc1kCpzIe4G.jpg','4 wins & 5 nominations',NULL,NULL)
,('The Accountant','13 Oct 2016','7.3','128 minutes','English, Indonesian, French','Movie','Christian Wolff is a math savant with more affinity for numbers than people. Behind the cover of a small-town CPA office, he works as a freelance accountant for some of the world''s most dangerous criminal organizations. With the Treasury Department''s Crime Enforcement Division, run by Ray King, starting to close in, Christian takes on a legitimate client: a state-of-the-art robotics company where an accounting clerk has discovered a discrepancy involving millions of dollars. But as Christian uncooks the books and gets closer to the truth, it is the body count that starts to rise.','https://image.tmdb.org/t/p/original/fceheXB5fC4WrLVuWJ6OZv9FXYr.jpg','https://image.tmdb.org/t/p/original/dTGECn8He16tZeBHQTLf6rVydE8.jpg','3 wins & 5 nominations total','$86,260,045','R')
,('Whiplash','15 Oct 2014','8.5','106 minutes','English','Movie','Nineteen-year-old Andrew Niemann wants to be the greatest jazz drummer in the world, in a league with Buddy Rich. This goal is despite not coming from a pedigree of greatest, musical or otherwise, with Jim, his high-school-teacher father, being a failed writer. Andrew is starting his first year at Shaffer Conservatory of Music, the best music school in the United States. At Shaffer, being the best means being accepted to study under Terence Fletcher and being asked to play in his studio band, which represents the school at jazz competitions. Based on their less than positive first meeting, Andrew is surprised that Fletcher asks him to join the band, albeit in the alternate drummer position which he is more than happy to do initially. Andrew quickly learns that Fletcher operates on fear and intimidation, never settling for what he considers less than the best each and every time. Being the best in Fletcher''s mind does not only entail playing well, but knowing that you''re playing well and if not what you''re doing wrong. His modus operandi creates an atmosphere of fear and of every man or woman for him/herself within the band. Regardless, Andrew works hard to be the best. He has to figure out his life priorities and what he is willing to sacrifice to be the best. The other question becomes how much emotional abuse he will endure by Fletcher to reach that greatness, which he may believe he can only achieve with the avenues opened up by Fletcher.','https://image.tmdb.org/t/p/original/7fn624j5lj3xTme2SgiLCeuedmO.jpg','https://image.tmdb.org/t/p/original/fRGxZuo7jJUWQsVg9PREb98Aclp.jpg','Won 3 Oscars. 99 wins & 144 nominations total','$14,003,391','R')
,('Fight Club','15 Oct 1999','8.8','139 minutes','English','Movie','A nameless first-person narrator attends support groups in an attempt to subdue his emotional state and relieve his insomniac state. When he meets Marla, another fake attendee of support groups, his life seems to become a little more bearable. However, when he associates himself with Tyler he is dragged into an underground fight club and soap-making scheme. Together the two men spiral out of control and engage in competitive rivalry for love and power.','https://image.tmdb.org/t/p/original/pB8BM7pdSp6B6Ih7QZ4DrQ3PmJK.jpg','https://image.tmdb.org/t/p/original/hZkgoQYus5vegHoetLkCJzb17zJ.jpg','Nominated for 1 Oscar. 12 wins & 38 nominations total','$37,030,102','R')
,('Seven','22 Sep 1995','8.6','127 minutes','English','Movie','Taking place in a nameless city, Se7en follows the story of two homicide detectives tracking down a sadistic serial killer (Kevin Spacey) who chooses his victims according to the seven deadly sins. Brad Pitt stars as Detective David Mills, a hopeful but naive rookie who finds himself partnered with veteran Detective William Somerset (Morgan Freeman). Together they trace the killer''s every step, witnessing the aftermath of his horrific crimes one by one as the victims pile up in rapid succession, all the while moving closer to a gruesome fate neither of them could have predicted.','https://image.tmdb.org/t/p/original/191nKfP0ehp3uIvWqgPbFmI4lv9.jpg','https://image.tmdb.org/t/p/original/p1PLSI5Nw2krGxD7X4ulul1tDAk.jpg','Nominated for 2 Oscars. 5 wins & 9 nominations total','$820,278','Not Rated')
,('Nosferatu','25 Dec 2024','7.2','132 minutes','English, Romanian, Romany, Russian, Latin, German','Movie','Wisborg, Germany, 1838. Saddled by his superior with the urgent task of sealing a land deal, newlywed estate agent Thomas Hutter reluctantly abandons his worried wife, Ellen, in hopes of securing his position in the firm. However, the mesmerising sight of lustrous gold is a deadly trap; as the ambitious young realtor arrives at the mysterious Count Orlok''s isolated castle in the Carpathian Alps, the ghastly embodiment of pure horror begins to haunt Ellen''s unspoken nocturnal imaginings. With the light succumbing to darkness, who can ease the suffocating stranglehold of ancient evil? After all, few have gazed into the abyss and lived to tell the tale. Can willing sacrifice rid Wisborg of the Nosferatu?','https://image.tmdb.org/t/p/original/5qGIxdEO841C0tdY8vOdLoRVrr0.jpg','https://image.tmdb.org/t/p/original/fYnEbgoNCxW9kL0IgOgtJb9JTBU.jpg','Nominated for 4 Oscars. 59 wins & 184 nominations total','$95,608,235','R')
,('Goodfellas','12 Sep 1990','8.7','145 minutes','English, Italian, Hebrew, Yiddish','Movie','Henry Hill might be a small time gangster, who may have taken part in a robbery with Jimmy Conway and Tommy De Vito, two other gangsters who might have set their sights a bit higher. His two partners could kill off everyone else involved in the robbery, and slowly start to think about climbing up through the hierarchy of the Mob. Henry, however, might be badly affected by his partners'' success, but will he consider stooping low enough to bring about the downfall of Jimmy and Tommy?','https://image.tmdb.org/t/p/original/aKuFiU82s5ISJpGZp7YkIr3kCUd.jpg','https://image.tmdb.org/t/p/original/7TF4p86ZafnxFuNqWdhpHXFO244.jpg','Won 1 Oscar. 45 wins & 38 nominations total','$46,909,721','R')
,('Us','20 Mar 2019','6.8','116 minutes','English','Movie','In order to get away from their busy lives, the Wilson family takes a vacation to Santa Cruz, California with the plan of spending time with their friends, the Tyler family. On a day at the beach, their young son Jason almost wanders off, causing his mother Adelaide to become protective of her family. That night, four mysterious people break into Adelaide''s childhood home where they''re staying. The family is shocked to find out that the intruders look like them, only with grotesque appearances.','https://image.tmdb.org/t/p/original/ux2dU1jQ2ACIMShzB3yP93Udpzc.jpg','https://image.tmdb.org/t/p/original/sC0b8iPUHfZdD8kseLiHw3N8gkp.jpg','86 wins & 135 nominations total','$175,084,580','R')
,('American Psycho','13 Apr 2000','7.6','102 minutes','English, Spanish, Cantonese','Movie','It''s the late 1980s. Twenty-seven year old Wall Streeter Patrick Bateman travels among a closed network of the proverbial beautiful people, that closed network in only they able to allow others like themselves in in a feeling of superiority. Patrick has a routinized morning regimen to maintain his appearance of attractiveness and fitness. He, like those in his network, are vain, narcissistic, egomaniacal and competitive, always having to one up everyone else in that presentation of oneself, but he, unlike the others, realizes that, for himself, all of these are masks to hide what is truly underneath, someone/something inhuman in nature. In other words, he is comprised of a shell resembling a human that contains only greed and disgust, greed in wanting what others may have, and disgust for those who do not meet his expectations and for himself in not being the first or the best. That disgust ends up manifesting itself in wanting to rid the world of those people, he not seeing them as people but only of those characteristics he wants to rid.','https://image.tmdb.org/t/p/original/9uGHEgsiUXjCNq8wdq4r49YL8A1.jpg','https://image.tmdb.org/t/p/original/rRwD4MoBlkBXWQ6PDnbKRSU5dDu.jpg','7 wins & 11 nominations total','$15,070,285','R')
,('The Batman','01 Mar 2022','7.8','176 minutes','English, Spanish, Latin, Italian','Movie','Two years of nights have turned Bruce Wayne into a nocturnal animal. But as he continues to find his way as Gotham''s dark knight Bruce is forced into a game of cat and mouse with his biggest threat so far, a manic killer known as "The Riddler" who is filled with rage and determined to expose the corrupt system whilst picking off all of Gotham''s key political figures. Working with both established and new allies, Bruce must track down the killer and see him brought to justice, while investigating his father''s true legacy and questioning the effect that he has had on Gotham so far as "The Batman."','https://image.tmdb.org/t/p/original/74xTEgt7R36Fpooo50r9T25onhq.jpg','https://image.tmdb.org/t/p/original/rvtdN5XkWAfGX6xDuPL6yYS2seK.jpg','Nominated for 3 Oscars. 39 wins & 185 nominations total','$369,345,583','PG-13')
,('Taxi Driver','09 Feb 1976','8.2','114 minutes','English, Spanish','Movie','Travis Bickle is an ex-Marine and Vietnam War veteran living in New York City. As he suffers from insomnia, he spends his time working as a taxi driver at night, watching porn movies at seedy cinemas during the day, or thinking about how the world, New York in particular, has deteriorated into a cesspool. He''s a loner who has strong opinions about what is right and wrong with mankind. For him, the one bright spot in humanity is Betsy, a worker on the presidential nomination campaign of Senator Charles Palantine. After an incident, he believes he has to do whatever he needs to make the world a better place.','https://image.tmdb.org/t/p/original/ekstpH614fwDX8DUln1a2Opz0N8.jpg','https://image.tmdb.org/t/p/original/6aoyUbvu0419XLKLIMoH0TkEicH.jpg','Nominated for 4 Oscars. 22 wins & 21 nominations total','$28,262,574','R')
,('Get Out','24 Feb 2017','7.8','104 minutes','English, Swahili','Movie','Chris and his girlfriend Rose go upstate to visit her parents for the weekend. At first, Chris reads the family''s overly accommodating behavior as nervous attempts to deal with their daughter''s interracial relationship, but as the weekend progresses, a series of increasingly disturbing discoveries lead him to a truth that he never could have imagined.','https://image.tmdb.org/t/p/original/tFXcEccSQMf3lfhfXKSU9iRBpa3.jpg','https://image.tmdb.org/t/p/original/o8dPH0ZSIyyViP6rjRX1djwCUwI.jpg','Won 1 Oscar. 154 wins & 214 nominations total','$176,196,665','R')
,('The Menu','16 Nov 2022','7.2','107 minutes','English, Spanish','Movie','Expecting nothing less than the best of everything haute cuisine has to offer, a group of ultra-wealthy gastronomes with a demanding palate arrive at the Hawthorn: an exclusive culinary temple run by highly regarded gourmet chef Julian Slowik. And prepared for an exquisite multiple-course meal and the experience of a lifetime, obsessive epicurean Tyler and his unimpressed plus-one Margot enter the private minimalist restaurant. At last, the long wait is over. However, no one knows that the cryptic genius in the kitchen has big plans for tonight. After all, the imperious culinary artist has been stretching the boundaries of taste and fine dining for decades. Now, the host can finally unveil his magnum opus. But is the blas√© clientele ready for Julian''s creative madness?','https://image.tmdb.org/t/p/original/fPtUgMcLIboqlTlPrq0bQpKK8eq.jpg','https://image.tmdb.org/t/p/original/mSyQoValhBsJdq3JNGXJww2Q5yL.jpg','2 wins & 66 nominations total','$38,501,125','R')
,('Shutter Island','18 Feb 2010','8.2','138 minutes','English, German','Movie','In 1954, up-and-coming U.S. marshal Teddy Daniels is assigned to investigate the disappearance of a patient from Boston''s Shutter Island Ashecliffe Hospital. He''s been pushing for an assignment on the island for personal reasons, but before long he thinks he''s been brought there as part of a twisted plot by hospital doctors whose radical treatments range from unethical to illegal to downright sinister. Teddy''s shrewd investigating skills soon provide a promising lead, but the hospital refuses him access to records he suspects would break the case wide open. As a hurricane cuts off communication with the mainland, more dangerous criminals "escape" in the confusion, and the puzzling, improbable clues multiply, Teddy begins to doubt everything - his memory, his partner, even his own sanity.','https://image.tmdb.org/t/p/original/nrmXQ0zcZUL8jFLrakWc90IR8z9.jpg','https://image.tmdb.org/t/p/original/rbZvGN1A1QyZuoKzhCw8QPmf2q0.jpg','11 wins & 66 nominations total','$128,012,934','R')
,('No Hard Feelings','15 Jun 2023','6.3','103 minutes','English','Movie','Maddie thinks she''s found the answer to her financial troubles when she discovers an intriguing job listing: wealthy helicopter parents looking for someone to "date" their introverted 19-year-old son, Percy, and bring him out of his shell before he leaves for college. But awkward Percy proves to be more of a challenge than she expected, and time is running out before she loses it all.','https://image.tmdb.org/t/p/original/gD72DhJ7NbfxvtxGiAzLaa0xaoj.jpg','https://image.tmdb.org/t/p/original/rRcNmiH55Tz0ugUsDUGmj8Bsa4V.jpg','1 win & 10 nominations total','$50,452,282','R')
,('Scarface','09 Dec 1983','8.3','170 minutes','English, Spanish','Movie','Tony Montana manages to leave Cuba during the Mariel exodus of 1980. He finds himself in a Florida refugee camp but his friend Manny has a way out for them: undertake a contract killing and arrangements will be made to get a green card. He''s soon working for drug dealer Frank Lopez and shows his mettle when a deal with Colombian drug dealers goes bad. He also brings a new level of violence to Miami. Tony is protective of his younger sister but his mother knows what he does for a living and disowns him. Tony is impatient and wants it all however, including Frank''s empire and his mistress Elvira Hancock. Once at the top however, Tony''s outrageous actions make him a target and everything comes crumbling down.','https://image.tmdb.org/t/p/original/iQ5ztdjvteGeboxtmRdXEChJOHh.jpg','https://image.tmdb.org/t/p/original/1qM2BYNE11Viby8ImC9LC00DgDr.jpg','8 nominations total','$45,967,303','R')
,('Heat','15 Dec 1995','8.3','170 minutes','English, Spanish','Movie','Hunters and their prey--Neil and his professional criminal crew hunt to score big money targets (banks, vaults, armored cars) and are, in turn, hunted by Lt. Vincent Hanna and his team of cops in the Robbery/Homicide police division. A botched job puts Hanna onto their trail while they regroup and try to put together one last big ''retirement'' score. Neil and Vincent are similar in many ways, including their troubled personal lives. At a crucial moment in his life, Neil disobeys the dictum taught to him long ago by his criminal mentor--''Never have anything in your life that you can''t walk out on in thirty seconds flat, if you spot the heat coming around the corner''--as he falls in love. Thus the stage is set for the suspenseful ending....','https://image.tmdb.org/t/p/original/umSVjVdbVwtx5ryCA2QXL44Durm.jpg','https://image.tmdb.org/t/p/original/X7zKxmyrVmYCfcyvDgVLH8iNzA.jpg','15 nominations total','$67,436,818','R')
,('Jurassic Park','15 Apr 1994','8.2','127 minutes','English, Spanish','Movie','On Isla Nublar, a new park has just been built with genetically engineered dinosaurs. Tragedy strikes when one of the workers is killed by a velociraptor. The founder of the park, John Hammond, (Sir Richard Attenborough) requests Paleontologist Dr. Alan Grant (Sam Neill) and his assistant, Dr. Ellie Sattler (Laura Dern) to come to the park and ensure that it is safe. Also joining them are Hammond''s lawyer Donald Gennaro (Martin Ferrero) and chaotician Dr. Ian Malcolm (Jeff Goldblum). When they reach the island, they are amazed to discover that Hammond has created living dinosaurs. However, at the same time, they all have their doubts. Later, Hammond''s grandchildren Lex and Tim (Ariana Richards and Joseph Mazzello) join the group in a tour of the park. Sattler leaves the tour to take care of an ill triceratops. Soon the power in the park is shut down by computer systems geek Dennis Nedry (Wayne Knight), who wishes to steal embryos from the park to sell to a secret buyer. In the process, many dinosaurs escape their paddocks, including the deadly Tyrannosaurus Rex, who, during a thunderstorm, escapes his paddock and attacks the children, and eats Gennaro. Malcolm is injured and Grant and the children are then lost in the park. Meanwhile, Hammond, Sattler, and the rest of the operations team learn that Nedry (who in the meantime has been killed) has locked up the computer system to cover his tracks. They attempt to get power back in the park in order to escape the island. After shutting down the system, then restoring it, the group realizes that velociraptors are also on the loose, and are now on the hunt for the visitors.','https://image.tmdb.org/t/p/original/fjTU1Bgh3KJu4aatZil3sofR2zC.jpg','https://image.tmdb.org/t/p/original/79bJL9ydAMYVltuNTt4VhxORqIz.jpg','Won 3 Oscars. 44 wins & 28 nominations total','$407,185,075','PG-13')
,('Hereditary','07 Jun 2018','7.3','127 minutes','English, Spanish','Movie','When Ellen, the matriarch of the Graham family, passes away, her daughter''s family begins to unravel cryptic and increasingly terrifying secrets about their ancestry. The more they discover, the more they find themselves trying to outrun the sinister fate they seem to have inherited. Making his feature debut, writer-director Ari Aster unleashes a nightmare vision of a domestic breakdown that exhibits the craft and precision of a nascent auteur, transforming a familial tragedy into something ominous and deeply disquieting, and pushing the horror movie into chilling new terrain with its shattering portrait of heritage gone to hell.','https://image.tmdb.org/t/p/original/4GFPuL14eXi66V96xBWY73Y9PfR.jpg','https://image.tmdb.org/t/p/original/gJbTXKNTL6O7r7PzF6ZRkJGBlPp.jpg','52 wins & 113 nominations total','$44,069,456','R')
,('Pearl','16 Sep 2022','7','103 minutes','English, German','Movie','Trapped on her family''s isolated farm, Pearl must tend to her ailing father under the bitter and overbearing watch of her devout mother. Lusting for a glamorous life like she''s seen in the movies, Pearl finds her ambitions, temptations, and repressions all colliding in this origin story of X''s iconic villain.','https://image.tmdb.org/t/p/original/z5uIG81pXyHKg7cUFIu84Wjn4NS.jpg','https://image.tmdb.org/t/p/original/8rmx3Wh6fQdSL2nzTmdFn9thcK8.jpg','19 wins & 64 nominations total','$9,423,445','R')
,('The Shining','23 May 1980','8.4','146 minutes','English','Movie','After landing a job as an off-season caretaker, Jack Torrance, an aspiring author and recovering alcoholic, drags his wife Wendy and gifted son Danny to snow-covered Colorado''s secluded Overlook Hotel. However, writer''s block prevents Jack from pursuing a new writing career. Everything has its time, however. First, the manager must give Jack a grand tour. Then, Mr Hallorann, the facility''s aging chef, chats with Danny about rare psychic gifts. The mysterious employee also warns the boy about the cavernous hotel''s abandoned rooms. Room 237, especially, is off-limits. That''s all very well, but Jack is gradually losing his mind. After all, strange occurrences and blood-chilling visions have trapped the family in a silent gargantuan prison hammered by endless snowstorms. And now, incessant voices inside Jack''s head demand sacrifice. However, is Jack capable of murder?','https://image.tmdb.org/t/p/original/xazWoLealQwEgqZ89MLZklLZD3k.jpg','https://image.tmdb.org/t/p/original/mmd1HnuvAzFc4iuVJcnBrhDNEKr.jpg','6 wins & 9 nominations total','$45,634,352','R')
,('Saltburn','16 Nov 2023','7','131 minutes','English','Movie','Struggling to find his place at Oxford University, student Oliver Quick finds himself drawn into the world of the charming and aristocratic Felix Catton, who invites him to Saltburn, his eccentric family''s sprawling estate, for a summer never to be forgotten.','https://image.tmdb.org/t/p/original/zGTfMwG112BC66mpaveVxoWPOaB.jpg','https://image.tmdb.org/t/p/original/obiRaOMHKnRai2edJG8cIHK6qkR.jpg','Nominated for 5 BAFTA 15 wins & 108 nominations total','$11,425,829','R')
,('Lost in Translation','03 Oct 2003','7.7','102 minutes','English, Japanese, German, French','Movie','Middle-aged American movie star Bob Harris is in Tokyo to film a personal endorsement Suntory whiskey ad solely for the Japanese market. He is past his movie star prime, but his name and image still have enough cachet for him to have gotten this lucrative $2 million job. He has an unsatisfying home life where his wife Lydia follows him wherever he goes - in the form of messages and faxes - for him to deal with the minutiae of their everyday lives, while she stays at home to look after their kids. Staying at the same upscale hotel is fellow American, twenty-something recent Yale Philosophy graduate Charlotte, her husband John, an entertainment still photographer, who is on assignment in Japan. As such, she is largely left to her own devices in the city, especially when his job takes him out of Tokyo. Both Bob and Charlotte are feeling lost by their current situations, which are not helped by the cultural barriers they feel in Tokyo, those cultural barriers extending far beyond just not knowing the language. After a few chance encounters in the hotel, they end up spending much of their time hanging out together, each helping the other deal with their feelings of loss in their current lives. The friendship that develops between the two, which is not always a bump-free one, may be just for this specific place and time, but it may also have long lasting implications.','https://image.tmdb.org/t/p/original/4k4Yz08WGfbu8ITIjaG99XTeco8.jpg','https://image.tmdb.org/t/p/original/6ITVHoipvxAS8luzKtHTbPaHLtT.jpg','Won 1 Oscar. 97 wins & 133 nominations total','$44,585,453','R')
,('Sing Sing','02 Aug 2024','7.7','107 minutes','English','Movie','Divine G (Colman Domingo), imprisoned at Sing Sing for a crime he didn''t commit, finds purpose by acting in a theatre group alongside other incarcerated men, including wary newcomer (Clarence Maclin), in this stirring true story of resilience, humanity, and the transformative power of art, starring an unforgettable ensemble cast of formerly incarcerated actors.','https://image.tmdb.org/t/p/original/s0TPyI8QlMiktEiq3JVhea0zFhM.jpg','https://image.tmdb.org/t/p/original/CZyMhVVpraYDptLpYXxXjgAuCH.jpg','Nominated for 3 Oscars. 68 wins & 203 nominations total','$3,110,476','R')
,('MaXXXine','04 Jul 2024','6.2','103 minutes','English','Movie','Los Angeles, 1985. With the elusive Night Stalker''s killing spree gripping the city by fear, fiercely ambitious adult film star Maxine Minx nails a make-or-break audition in the glitzy movie capital of America. But just as her star begins to rise, six years after surviving the merciless massacre in X (2022), a shady private detective threatens to snatch away Maxine''s precious ticket to mainstream stardom. Now, the bloody stains of a dark past scream for closure. Can the televangelist''s daughter secure her place in the spotlight, or will Maxine become a sad statistic along with Hollywood''s every other dead starlet?','https://image.tmdb.org/t/p/original/ArvoFK6nlouZRxYmtIOUzKIrg90.jpg','https://image.tmdb.org/t/p/original/qOdR46ymkVXuhnpnL2cBdjqjvnA.jpg','6 nominations total','$15,097,632','R')
,('Drive','15 Sep 2011','7.8','100 minutes','English, Spanish','Movie','This action drama follows a mysterious man who has multiple jobs as a garage mechanic, a Hollywood stuntman and a getaway driver seems to be trying to escape his shady past as he falls for his neighbor - whose husband is in prison and who''s looking after her child alone. Meanwhile, his garage mechanic boss is trying to set up a race team using gangland money, which implicates our driver as he is to be used as the race team''s main driver. Our hero gets more than he bargained for when he meets the man who is married to the woman he loves.','https://image.tmdb.org/t/p/original/602vevIURmpDfzbnv5Ubi6wIkQm.jpg','https://image.tmdb.org/t/p/original/9ly9pxGwiB6g5lIZXou2HKXl7ua.jpg','Nominated for 1 Oscar. 79 wins & 180 nominations total','$35,061,555','R')
,('Psycho','17 Aug 1960','8.5','109 minutes','English','Movie','Phoenix office worker Marion Crane is fed up with the way life has treated her. She has to meet her lover Sam in lunch breaks, and they cannot get married because Sam has to give most of his money away in alimony. One Friday, Marion is trusted to bank forty thousand dollars by her employer. Seeing the opportunity to take the money and start a new life, Marion leaves town and heads towards Sam''s California store. Tired after the long drive and caught in a storm, she gets off the main highway and pulls into the Bates Motel. The motel is managed by a quiet young man called Norman who seems to be dominated by his mother.','https://image.tmdb.org/t/p/original/yz4QVqPx3h1hD1DfqqQkCq3rmxW.jpg','https://image.tmdb.org/t/p/original/uif5fUshJrXyyDzfpzp1DLw3N0S.jpg','Nominated for 4 Oscars. 8 wins & 14 nominations total','$32,000,000','R')
,('Ponyo','19 Jul 2008','7.6','101 minutes','Japanese, English','Movie','The son of a sailor, 5-year-old Sosuke lives a quiet life on an oceanside cliff with his mother Lisa. One fateful day, he finds a beautiful goldfish trapped in a bottle on the beach and upon rescuing her, names her Ponyo. But she is no ordinary goldfish. The daughter of a masterful wizard and a sea goddess, Ponyo uses her father''s magic to transform herself into a young girl and quickly falls in love with Sosuke, but the use of such powerful sorcery causes a dangerous imbalance in the world. As the moon steadily draws nearer to the earth and Ponyo''s father sends the ocean''s mighty waves to find his daughter, the two children embark on an adventure of a lifetime to save the world and fulfill Ponyo''s dreams of becoming human.','https://image.tmdb.org/t/p/original/yp8vEZflGynlEylxEesbYasc06i.jpg','https://image.tmdb.org/t/p/original/shqLeIkqPAAXM8iT6wVDiXUYz1p.jpg','12 wins & 20 nominations total','$16,543,471','G')
,('There Will Be Blood','25 Jan 2008','8.2','158 minutes','English, American Sign Language','Movie','The intersecting life stories of Daniel Plainview and Eli Sunday in early twentieth century California is presented. Miner turn oilman Daniel Plainview is a driven man who will do whatever it takes to achieve his goals. He works hard but he also takes advantage of those around him at their expense if need be. His business partner is his son H.W., who in reality he "acquired" when H.W.''s biological single father, who worked on one of Daniel''s rigs, got killed in a workplace accident. Daniel is deeply protective of H.W. if only for what H.W. brings to the partnership. Eli Sunday is one in a pair of twins, whose family farm Daniel purchases for the major oil deposit located on it. Eli, the local preacher and a self-proclaimed faith healer, wants the money from the sale of the property to finance his own church. The lives of the two competitive men often clash as Daniel pumps oil off the property and tries to acquire all the surrounding land at bargain prices to be able to build a pipeline to the coast, and as Eli tries to build his own religious empire.','https://image.tmdb.org/t/p/original/nuZDiX8okojcwkStdaMjA9LUQAT.jpg','https://image.tmdb.org/t/p/original/9UAKA6ceZi6TgQwTAAMt7DWwYPI.jpg','Won 2 Oscars. 114 wins & 138 nominations total','$40,222,514','R')
,('Grave of the Fireflies','16 Apr 1988','8.5','88 minutes','Japanese','Movie','The story of Seita and Setsuko, two young Japanese siblings, living in the declining days of World War II. When an American firebombing separates the two children from their parents, the two siblings must rely completely on one another while they struggle to fight for their survival.','https://image.tmdb.org/t/p/original/k9tv1rXZbOhH7eiCk378x61kNQ1.jpg','https://image.tmdb.org/t/p/original/tDFvXn4tane9lUvFAFAUkMylwSr.jpg','3 wins total','$516,962','Not Rated')
,('Weathering with You','19 Jul 2019','7.5','112 minutes','Japanese','Movie','Weathering with You is a Japanese animated romantic fantasy film. It follows a 16-year-old high school boy, Hodaka Morishima, who runs away from his troubled rural home to Tokyo, and later befriends Hina Amano, an orphaned girl who has the ability to control the weather.','https://image.tmdb.org/t/p/original/qgrk7r1fV4IjuoeiGS5HOhXNdLJ.jpg','https://image.tmdb.org/t/p/original/jFK8BOPL6ZeWyjMVWX8ajsTTinp.jpg','6 wins & 14 nominations total','$8,056,636','PG-13')
,('Dead Poets Society','09 Jun 1989','8.1','128 minutes','English, Latin','Movie','Painfully shy Todd Anderson has been sent to the school where his popular older brother was valedictorian. His roommate, Neil Perry, although exceedingly bright and popular, is very much under the thumb of his overbearing father. The two, along with their other friends, meet Professor Keating, their new English teacher, who tells them of the Dead Poets Society, and encourages them to go against the status quo. Each does so in his own way, and is changed for life.','https://image.tmdb.org/t/p/original/hmGAF5NDoYB6S39UONevjHCESOI.jpg','https://image.tmdb.org/t/p/original/hpzQHv8cA7j2Dn2CphOFYmllXzj.jpg','Won 1 Oscar. 20 wins & 19 nominations total','$95,860,116','PG')
,('The Queen''s Gambit',NULL,'8.5','60 minutes','English, French, Spanish, Russian','Series','Nine year-old orphan Beth Harmon is quiet, sullen, and by all appearances unremarkable. That is, until she plays her first game of chess. Her senses grow sharper, her thinking clearer, and for the first time in her life she feels herself fully in control. By the age of sixteen, she''s competing for the U.S. Open championship. But as Beth hones her skills on the professional circuit, the stakes get higher, her isolation grows more frightening, and the thought of escape becomes all the more tempting. Based on the book by Walter Tevis.','https://image.tmdb.org/t/p/original/zU0htwkhNvBQdVSIKB9s6hgVeFK.jpg','https://image.tmdb.org/t/p/original/34OGjFEbHj0E3lE2w0iTUVq0CBz.jpg','Won 11 Primetime Emmys. 58 wins & 53 nominations total',NULL,'TV-MA')
,('Whisper of the Heart','15 Jul 1995','7.8','111 minutes','Japanese','Movie','Tama New Town, Tokyo, 1994. Intrigued by the mysterious bibliophile who reads the same books as her, 14-year-old daydreamer Shizuku has a life-changing encounter with a strange alley cat instead. And just like that, the passionate teenager embarks on an exciting quest to find her purpose in life. After all, the world is a wondrous place filled with out-of-the-way antique shops, enthusiastic violin makers, and magical feline mentors. However, as Shizuku tries to juggle school and ambition, looking for inspiration and opportunity in unexpected places, a question arises. Will talented Shizuku ever find the courage to listen to her heart''s gentle whisper?','https://image.tmdb.org/t/p/original/5FROLD8zpWFs9ja7aYho1uOMJHg.jpg','https://image.tmdb.org/t/p/original/rphor0XQcYO4CQoQ6auaQm3UPap.jpg',NULL,'$498,156','G')
,('Suzume','11 Nov 2022','7.6','122 minutes','Japanese, English','Movie','Suzume, a 17-year-old girl who lives in a quiet town in Kyushu, meets a young man on a journey "looking for doors." Suzume follows him to a dilapidated building in the mountains and finds a free-standing, undisturbed door as if "it" alone were saved from devastation. Suzume feels drawn by an invisible power and reaches out to the door. Soon, doors all over Japan start opening one after another. The doors that opened must be closed to shut out calamity that lies on the other side. The places she wanders into have a sky where all hours of the day seem to blend together. Beckoned by the mysterious doors, Suzume''s "journey of closing doors" begins.','https://image.tmdb.org/t/p/original/oNbCAM3UVJamxRFd5hUt686aqb2.jpg','https://image.tmdb.org/t/p/original/4tdV5AeojEdbvn6VpeQrbuDlmzs.jpg','3 wins & 30 nominations total','$10,932,037','PG')
,('Ruby Sparks','06 Sep 2012','7.2','104 minutes','English, French','Movie','Calvin is a genius novelist who begins to type a new novel on his manual typewriter about Ruby, his dream girl. He can''t believe his eyes, because the next day, Ruby becomes a real person, and they begin to have a beautiful relationship together. If the relationship isn''t perfect, all Calvin has to do is simply type the words on the page and Ruby''s actions change to what he needs.','https://image.tmdb.org/t/p/original/zELurt0GVRkR5X5ymuk7KXUxhC8.jpg','https://image.tmdb.org/t/p/original/yJYFp97trLmcNAQb5A4SXXhNJU4.jpg','1 win & 11 nominations total','$2,540,106','R')
,('Mean Girls','30 Apr 2004','7.1','97 minutes','English, German, Vietnamese, Swahili','Movie','Lindsay Lohan stars as Cady Heron, a 16 year old homeschooled girl who not only makes the mistake of falling for Aaron Samuels (Jonathan Bennett), the ex-boyfriend of queenbee Regina George (Rachel McAdams), but also unintentionally joins The Plastics, led by Regina herself. Join Cady as she learns that high school life can and will be really tough.','https://image.tmdb.org/t/p/original/alKvY5LuVcXraRBfi5UtVV8Ii6Y.jpg','https://image.tmdb.org/t/p/original/nP3y0TkR6XniFs9J53qQkg4Bnnk.jpg','7 wins & 25 nominations total','$86,058,055','PG-13')
,('Insidious: The Red Door','05 Jul 2023','5.5','107 minutes','English','Movie','In Insidious: The Red Door, the original cast from the horror franchise is back for the final chapter of the Lambert family''s terrifying saga, with Patrick Wilson (also making his directorial debut), Ty Simpkins, Rose Byrne and Andrew Astor. To put their demons to rest once and for all, Josh and a college-aged Dalton must go deeper into The Further than ever before, facing their family''s dark past and a host of new and more horrifying terrors that lurk behind the red door.','https://image.tmdb.org/t/p/original/d07phJqCx6z5wILDYqkyraorDPi.jpg','https://image.tmdb.org/t/p/original/i2GVEvltEu3BXn5crBSxgKuTaca.jpg','2 nominations total','$82,156,962','PG-13')
,('A Haunting in Venice','15 Sep 2023','6.5','103 minutes','English, Italian, French, Latin','Movie','In eerie, post-World War II Venice on All Hallows'' Eve, Hercule Poirot is now retired and living in self-imposed exile in the world''s most glamorous city. But when Poirot reluctantly attends a s√©ance at a decaying, haunted palazzo, one of the guests is murdered, thrusting the detective into a sinister world of shadows and secrets.','https://image.tmdb.org/t/p/original/l6iwxT0NbVw6QiF08YTIuTnXS82.jpg','https://image.tmdb.org/t/p/original/qB9wshRySHgN2MibLOlsW6YalqD.jpg','6 wins & 4 nominations total','$42,471,412','PG-13')
,('Soul','29 Nov 2020','8','100 minutes','English, Korean, Inuktitut','Movie','Joe is a middle-school band teacher whose life hasn''t quite gone the way he expected. His true passion is jazz and he''s good. But when he travels to another realm to help someone find their passion, he soon discovers what it means to have soul.','https://image.tmdb.org/t/p/original/pEz5aROvfy5FBW1OTlrDO3VryWO.jpg','https://image.tmdb.org/t/p/original/4JNggqfyJWREqb0enzpUMbvIniV.jpg','Won 2 Oscars. 126 wins & 94 nominations total','$946,154','PG')
,('It Chapter Two','04 Sep 2019','6.5','169 minutes','English, North American Indian, Spanish','Movie','Defeated by members of the Losers'' Club, the evil clown Pennywise returns 27 years later to terrorize the town of Derry, Maine, once again. Now adults, the childhood friends have long since gone their separate ways. But when people start disappearing, Mike Hanlon calls the others home for one final stand. Damaged by scars from the past, the united Losers must conquer their deepest fears to destroy the shape-shifting Pennywise -- now more powerful than ever.','https://image.tmdb.org/t/p/original/zfE0R94v1E8cuKAerbskfD3VfUt.jpg','https://image.tmdb.org/t/p/original/6LVSrgm83UYWlrLTCVGmWhFKYO0.jpg','7 wins & 34 nominations total','$211,622,525','R')
,('Ready Player One','28 Mar 2018','7.4','140 minutes','English, Japanese','Movie','In the year 2045, the real world is a harsh place. The only time Wade Watts (Tye Sheridan) truly feels alive is when he escapes to the OASIS, an immersive virtual universe where most of humanity spends their days. In the OASIS, you can go anywhere, do anything, be anyone--the only limits are your own imagination. The OASIS was created by the brilliant and eccentric James Halliday (Mark Rylance), who left his immense fortune and total control of the Oasis to the winner of a three-part contest he designed to find a worthy heir. When Wade conquers the first challenge of the reality-bending treasure hunt, he and his friends--The High Five--are hurled into a fantastical universe of discovery and danger to save the OASIS.','https://image.tmdb.org/t/p/original/pU1ULUq8D3iRxl1fdX2lZIzdHuI.jpg','https://image.tmdb.org/t/p/original/dbrLfmFNFEJWv8rLnjpgCKlXWSy.jpg','Nominated for 1 Oscar. 11 wins & 57 nominations total','$137,715,350','PG-13')
,('The Conjuring 2','01 Jul 2016','7.3','134 minutes','English','Movie','In 1977 Enfield, the paranormal investigators, Lorraine and Ed Warren, travel to London to help the Hodgsons. After sensing her daughter to be possessed, and her four children haunted by supernatural happenings, Peggy Hodgson asks for help when a malicious entity takes possession of the second eldest child, Janet. However, there''s something more threatening, not only for the inhabitants but also for the investigator-couple; something that they couldn''t even imagine.','https://image.tmdb.org/t/p/original/zEqyD0SBt6HL7W9JQoWwtd5Do1T.jpg','https://image.tmdb.org/t/p/original/3tMV2dYmvxMr511fD7Ap79tRFls.jpg','4 wins & 13 nominations total','$102,516,140','R')
,('Annabelle','14 Oct 2014','5.5','99 minutes','English','Movie','John Form has found the perfect gift for his expectant wife, Mia - a beautiful, rare vintage doll in a pure white wedding dress. But Mia''s delight with Annabelle doesn''t last long. On one horrific night, their home is invaded by members of a satanic cult, who violently attack the couple. Spilled blood and terror are not all they leave behind. The cultists have conjured an entity so malevolent that nothing they did will compare to the sinister conduit to the damned that is now... Annabelle.','https://image.tmdb.org/t/p/original/yLsuU2P2SpDYFwtZQ7dtfVAf6TE.jpg','https://image.tmdb.org/t/p/original/eLPXcqgJPCEOf2cMwyTEXejRhrC.jpg','3 wins & 7 nominations total','$84,284,252','R')
,('Titanic','14 Aug 1998','7.9','194 minutes','English, Swedish, Italian, French','Movie','84 years later, a 100 year-old woman named Rose DeWitt Bukater tells the story to her granddaughter Lizzy Calvert, Brock Lovett, Lewis Bodine, Bobby Buell and Anatoly Mikailavich on the Keldysh about her life set in April 10th 1912, on a ship called Titanic when young Rose boards the departing ship with the upper-class passengers and her mother, Ruth DeWitt Bukater, and her fianc√©, Caledon Hockley. Meanwhile, a drifter and artist named Jack Dawson and his best friend Fabrizio De Rossi win third-class tickets to the ship in a game. And she explains the whole story from departure until the death of Titanic on its first and last voyage April 15th, 1912 at 2:20 in the morning.','https://image.tmdb.org/t/p/original/9xjZS2rlVxm8SFx8kPC3aIGCOYQ.jpg','https://image.tmdb.org/t/p/original/sCzcYW9h55WcesOqA12cgEr9Exw.jpg','Won 11 Oscars. 126 wins & 83 nominations total','$674,354,882','PG-13')
,('Borat','01 Nov 2006','7.4','84 minutes','English, Romanian, Hebrew, Polish, Armenian','Movie','Borat Sagdiyev is a TV reporter of a popular show in Kazakhstan as Kazakhstan''s sixth most famous man and a leading journalist. He is sent from his home to America by his government to make a documentary about American society and culture. Borat takes a course in New York City to understand American humor. While watching Baywatch on TV, Borat discovers how beautiful their women are in the form of C. J. Parker, who was played by actress Pamela Anderson who hails from Malibu, California. He decides to go on a cross-country road trip to California in a quest to make her his wife and take her back to his country. On his journey Borat and his producer encounter a country full of strange and wonderful Americans, real people in real chaotic situations with hysterical consequences.','https://image.tmdb.org/t/p/original/kfkyALfD4G1mlBJI1lOt2QCra4i.jpg','https://image.tmdb.org/t/p/original/kt0Ku4cTQUZe4KyZiWC6HsWCbcS.jpg','Nominated for 1 Oscar. 20 wins & 34 nominations total','$128,505,958','R')
,('Borat Subsequent Moviefilm','23 Oct 2020','6.6','95 minutes','English, Bulgarian, Hebrew, Romanian, Croatian','Movie','Fourteen long years after the culture shock he experienced in Borat (2006), Kazakh reporter Borat Sagdiyev has been called to Premier Nursultan Nazarbayev''s office for a life-or-death task. To redeem himself and salvage the reputation of the glorious nation of Kazakhstan, Borat must now return to President Donald Trump''s America to deliver an exceptional gift to Vice President Mike Pence. Instead, Borat''s newfound 15-year-old daughter Tutar enters the picture, forcing a change of plans. As now-famous Borat takes a deep dive into U.S. politics, the father and daughter learn a thing or two about feminism, racism, and an insidious, lethal virus called COVID-19. Will Borat, Kazakhstan''s fourth-best journalist, carry out his mission?','https://image.tmdb.org/t/p/original/3L1Ml5RWjFVfVq3rQENvgFymT0U.jpg','https://image.tmdb.org/t/p/original/3Ysvp4ODDC6sucdQ9quHWkMiKED.jpg','Nominated for 2 Oscars. 38 wins & 66 nominations total',NULL,'R')
,('Django Unchained','25 Dec 2012','8.5','165 minutes','English, German, French, Italian','Movie','In 1858, a bounty-hunter named King Schultz seeks out a slave named Django and buys him because he needs him to find some men he is looking for. After finding them, Django wants to find his wife, Broomhilda, who along with him were sold separately by his former owner for trying to escape. Schultz offers to help him if he chooses to stay with him and be his partner. Eventually they learn that she was sold to a plantation in Mississippi. Knowing they can''t just go in and say they want her, they come up with a plan so that the owner will welcome them into his home and they can find a way.','https://image.tmdb.org/t/p/original/bV0rWoiRo7pHUTQkh6Oio6irlXO.jpg','https://image.tmdb.org/t/p/original/2oZklIzUbvZXXzIFzv7Hi68d6xf.jpg','Won 2 Oscars. 58 wins & 158 nominations total','$162,805,434','R')
,('Jackie Brown','25 Dec 1997','7.5','154 minutes','English','Movie','The middle-aged stewardess Jackie Brown smuggles money from Mexico to Los Angeles for the arms dealer Ordell Robbie. When she gets caught by the agents Ray Nicolet and Mark Dargus with ten thousand dollars and cocaine in her purse, they propose a deal to her to help them to arrest Ordell in exchange of her freedom. Meanwhile Ordell asks the 56-year-old Max Cherry, who runs a bail bond business, to release Jackie Brown with the intention of eliminating her. Jackie suspects of Ordell''s intention and plots a complicated confidence game with Max to steal half a million dollars from Ordell.','https://image.tmdb.org/t/p/original/rOUx7qg4KmEh1juEDwqzbDSL1Nr.jpg','https://image.tmdb.org/t/p/original/re28cBV9sL4zmMHGrzi7MANA1PT.jpg','Nominated for 1 Oscar. 9 wins & 24 nominations total','$39,673,162','R')
,('The Hateful Eight','29 Jan 2016','7.8','168 minutes','English, Spanish, French, Persian','Movie','Some time after the Civil War, a stagecoach hurtles through the wintry Wyoming landscape. Bounty hunter John Ruth and his fugitive captive Daisy Domergue race towards the town of Red Rock, where Ruth will bring Daisy to justice. Along the road, they encounter Major Marquis Warren (an infamous bounty hunter) and Chris Mannix (a man who claims to be Red Rock''s new sheriff). Lost in a blizzard, the bunch seeks refuge at Minnie''s Haberdashery. When they arrive they are greeted by unfamiliar faces: Bob, who claims to be taking care of the place while Minnie is gone; Oswaldo Mobray, the hangman of Red Rock; Joe Gage, a cow puncher; and confederate general Sanford Smithers. As the storm overtakes the mountainside, the eight travelers come to learn that they might not make it to Red Rock after all...','https://image.tmdb.org/t/p/original/jIywvdPjia2t3eKYbjVTcwBQlG8.jpg','https://image.tmdb.org/t/p/original/7gfDVfaw0VaIkUGiEH13o3TIC7A.jpg','Won 1 Oscar. 46 wins & 116 nominations total','$54,117,416','R')
,('Argylle','31 Jan 2024','5.6','139 minutes','English','Movie','Elly Conway, an introverted spy novelist who seldom leaves her home, is drawn into the real world of espionage when the plots of her books get a little too close to the activities of a sinister underground syndicate. When Aidan, a spy, shows up to save her (he says) from being kidnapped or killed--or both, Elly and her beloved cat Alfie are plunged into a covert world where nothing and nobody is what it seems.','https://image.tmdb.org/t/p/original/siduVKgOnABO4WH4lOwPQwaGwJp.jpg','https://image.tmdb.org/t/p/original/lrAarolYTHaRKT3eL5cVukG0pR7.jpg','6 nominations total','$45,207,275','PG-13')
,('Unbreakable','22 Nov 2000','7.3','106 minutes','English','Movie','David Dunn (Willis) is taking a train from New York City back home to Philadelphia after a job interview that didn''t go well when his car jumps the tracks and collides with an oncoming engine, with David the only survivor among the 131 passengers on board. Astoundingly, David is not only alive, he hardly seems to have been touched. As David wonders what has happened to him and why he was able to walk away, he encounters a mysterious stranger, Elijah Prince (Samuel L. Jackson), who explains to David that there are a certain number of people who are "unbreakable" -- they have remarkable endurance and courage, a predisposition toward dangerous behavior, and feel invincible but also have strange premonitions of terrible events. Is David "unbreakable"? And if he is, what are the physical and psychological ramifications of this knowledge?','https://image.tmdb.org/t/p/original/mLuehrGLiK5zFCyRmDDOH6gbfPf.jpg','https://image.tmdb.org/t/p/original/A7CYNTa3fWyU0t207XiecgriQv5.jpg','2 wins & 16 nominations total','$95,011,339','PG-13')
,('Glass','16 Jan 2019','6.6','129 minutes','English, Spanish','Movie','After pursuing Kevin Wendell Crumb and the multiple identities that reside within, David Dunn finds himself locked in a mental hospital alongside his archenemy, Elijah Price. The trio must now contend with a psychiatrist, who is out to prove they do not actually possess superhuman abilities.','https://image.tmdb.org/t/p/original/svIDTNUoajS8dLEo7EosxvyAsgJ.jpg','https://image.tmdb.org/t/p/original/iRJnw5OpueLhrYMnCxdydogVHUg.jpg','2 wins & 15 nominations total','$111,048,468','PG-13')
,('Eyes Wide Shut','16 Jul 1999','7.5','159 minutes','English','Movie','After his wife, Alice, tells him about her sexual fantasies, William Harford sets out for a night of sexual adventure. After several less than successful encounters, he meets an old friend, Nick Nightingale--now a musician--who tells him of strange sex parties where he is required to play the piano blindfolded. All the men at the party are costumed and wear masks while the women are all young and beautiful. Harford manages to find an appropriate costume and heads out to the party. Once there, however, he is warned by someone who recognizes him, despite the mask, that he is in great danger. He manages to extricate himself, but the threats prove to be quite real and sinister.','https://image.tmdb.org/t/p/original/knEIz1eNGl5MQDbrEAVWA7iRqF9.jpg','https://image.tmdb.org/t/p/original/vYA4qUPWY0EbjpcIXAL4h4pVmTC.jpg','12 wins & 30 nominations total','$55,691,208','TV-MA')
,('Top Gun','16 May 1986','7','109 minutes','English','Movie','US Navy Lieutenant Pete Mitchell, call sign Maverick--an impetuous, daredevil pilot ace--is accepted into Top Gun, Miramar''s elite Fighter School. But there, the impulsive young pilot will have to compete with the best of the best, including Iceman, a brilliant and highly competitive fellow student. Now, Mitchell must give his all; however, his father''s mysterious and untimely demise still haunts him. Can Maverick prove his worth to Charlie, the flying school''s no-nonsense astrophysics instructor? Will he be able to suppress his wild nature to win the prestigious Top Gun Trophy?','https://image.tmdb.org/t/p/original/xUuHj3CgmZQ9P2cMaqQs4J0d4Zc.jpg','https://image.tmdb.org/t/p/original/jILeJ60zPpIjjJHGSmIeY4eO30t.jpg','Won 1 Oscar. 11 wins & 9 nominations total','$180,258,178','PG')
,('Edge of Tomorrow','12 Jun 2014','7.9','113 minutes','English','Movie','An alien race has hit the Earth in an unrelenting assault, unbeatable by any military unit in the world. Major William Cage (Cruise) is an officer who has never seen a day of combat when he is unceremoniously dropped into what amounts to a suicide mission. Killed within minutes, Cage now finds himself inexplicably thrown into a time loop-forcing him to live out the same brutal combat over and over, fighting and dying again...and again. But with each battle, Cage becomes able to engage the adversaries with increasing skill, alongside Special Forces warrior Rita Vrataski (Blunt). And, as Cage and Vrataski take the fight to the aliens, each repeated encounter gets them one step closer to defeating the enemy!','https://image.tmdb.org/t/p/original/uUHvlkLavotfGsNtosDy8ShsIYF.jpg','https://image.tmdb.org/t/p/original/4V1yIoAKPMRQwGBaSses8Bp2nsi.jpg','11 wins & 38 nominations total','$100,206,256','PG-13')
,('Tropic Thunder','13 Aug 2008','7.1','107 minutes','English, Mandarin','Movie','Action movie star Tugg Speedman is on the downslide of his professional career. He wants to be considered a serious actor, but his latest serious role as the title character in "Simple Jack" resulted in negative reviews and ridicule. Comedian Jeff Portnoy is best known for his leading roles in sophomoric comedies, and may be less well known for his rampant drug use. Five time Oscar winner Kirk Lazarus is a serious method actor, who immerses himself in whatever the role. On location in southeast Vietnam, they are the stars of "Tropic Thunder", based on Vietnam war veteran ''Four Leaf'' Tayback''s memoirs of his rescue during the war, that rescue which was considered a near suicide mission for the assigned army force and resulted in him losing both hands. For his role, Caucasian Australian Lazarus even went through a controversial surgical skin dying procedure so that he could convincingly play a black man. Production is not going well since rookie director Damien Cockburn is unable to control the prima-donna attitude of his three stars. Cockburn and Tayback decide that the five primary actors - Speedman, Portnoy, Lazarus, rapper Alpa Chino, and newcomer Kevin Sandusky - need to work together as a unit as did their real life characters. The five are placed in the middle of the jungle, and with only a map and their prop machine guns in hand, are asked to work together to battle through the stunt pyrotechnics in their way. What none of the seven of them know is that they have been dropped into a real life drug war led by the Flaming Dragons. It isn''t until Speedman is captured by the Flaming Dragons and tortured that they all realize that what they believed was make believe gunfire and land mines was actually real life. As the four actors try to figure out what to do concerning Speedman''s situation, all five go through their own journey of self-discovery. Meanwhile, the movie''s megalomaniacal profanity spewing producer Les Grossman and Speedman''s faithful agent Rick Peck argue about what to do about Speedman''s situation. And Tayback inadvertently shows a little of his true self.','https://image.tmdb.org/t/p/original/zAurB9mNxfYRoVrVjAJJwGV3sPg.jpg','https://image.tmdb.org/t/p/original/4pLi4QMm0MZ9TSoF3l8qQmY9HNO.jpg','Nominated for 1 Oscar. 10 wins & 47 nominations total','$110,515,313','R')
,('Zoolander','28 Sep 2001','6.5','90 minutes','English','Movie','Derek Zoolander is VH1''s three time male model of the year, but when Hansel wins the award instead, Zoolander''s world becomes upside down. His friends disappear, his father is disappointed in him, and he feels that he''s not good as a model anymore. But when evil fashion guru Mugatu hires Zoolander, he thinks his life has turned back round again, that is until he finds out that Mugatu has actually brainwashed him to kill the Prime Minister of Malaysia. Can Zoolander and his new friends find out how to prevent the incident before it''s too late?','https://image.tmdb.org/t/p/original/1IOLMlNKSoo3FToVGYV1PjE3ehn.jpg','https://image.tmdb.org/t/p/original/n7EH9nyYzQfAD4j6599fFWuQxDG.jpg','1 win & 11 nominations total','$45,172,250','R')
,('Meet the Parents','06 Oct 2000','7','108 minutes','English, Thai, Spanish, Hebrew, French','Movie','Madly in love with charming schoolteacher Pam, Greg Focker, an unambitious Chicago nurse and chronic underachiever, wants to make a good impression on her father, Jack, more than anything. And, in the following 48 hours, against the backdrop of a hectic weekend at her parents'' house, Greg will have to put his skills to good use and, hopefully, charm his way out of trouble. However, there is one tiny detail: Jack has a knack for uncovering the truth, and Greg has been quite economical with it. Under those circumstances, will he ever get Jack''s approval? Above all, is love blind?','https://image.tmdb.org/t/p/original/5tXJ9ctuyEOMUFLaeqRisbXowWs.jpg','https://image.tmdb.org/t/p/original/qcVrlyPFlPgCsmzorvELvpJN9Be.jpg','Nominated for 1 Oscar. 7 wins & 15 nominations total','$166,244,045','PG-13')
,('Meet the Fockers','22 Dec 2004','6.3','115 minutes','English, Spanish, Hebrew','Movie','Having managed to enter the longed-for "circle of trust" after the events in Meet the Parents (2000), Greg Focker invites the straight-laced Byrnes family to meet mum and dad, the eccentric Fockers. However, as conservative Jack and Dina finally get to meet the uninhibited, cool parents Bernie and Roz, rivalries and secrets emerge, and someone learns a new word. But there''s still something fishy about Greg. Will Jack resort to using his infallible contraptions to get to the bottom of Greg''s suspicious behaviour?','https://image.tmdb.org/t/p/original/59fXm6N2x7QSbvt6BaBxTNBXGL8.jpg','https://image.tmdb.org/t/p/original/46V7HxPbdGBhlw5w2hT0I2ZD8kl.jpg','2 wins & 7 nominations total','$279,261,160','PG-13')
,('Zoolander 2','19 Feb 2016','4.7','101 minutes','English, Italian, Spanish','Movie','After many years of being separated from modeling and each other, Derek and Hansel are dragged back into the fashion world in Rome. After being humiliated on the runway by the people behind the scenes, Derek and Hansel decide to quit the business . . . until retired swimsuit model, Valentina, drags them back in with questions about recent celebrity deaths. Soon after, Derek also realizes out that the son who was taken from him is in Rome, and is much dismayed to find that Derek, Jr. is fat. And smart. Regardless, Derek, Sr. continues his mission with Hansel, which leads them to the fashion-model legends of "Adam, Eve, and Steve", and the "Chosen One". Who is that person? Why do the models drink the Chosen One''s blood? Will Derek''s and Hansel''s careers resume?','https://image.tmdb.org/t/p/original/n8AJzALlTPBwe9Tkv3tdxbiAr9i.jpg','https://image.tmdb.org/t/p/original/xCldMtZS1aGhxxWhtKOBQl2mrvB.jpg','7 wins & 17 nominations total','$28,848,693','PG-13')
,('Little Fockers','22 Dec 2010','5.5','98 minutes','English, Ukrainian','Movie','It has taken 10 years, two little Fockers with wife Pam, and countless hurdles for Greg to finally get in with his tightly wound father-in-law, Jack. After the cash-strapped dad takes a job moonlighting for a drug company, however, Jack''s suspicions about his favorite male nurse come roaring back. When Greg and Pam''s entire clan--including Pam''s lovelorn ex, Kevin (Owen Wilson)--descends for the twins'' birthday party, Greg must prove to the skeptical Jack that he''s fully capable as the man of the house. But with all the misunderstandings, spying, and covert missions, will Greg pass Jack''s final test and become the family''s next patriarch, or will the circle of trust be broken for good?','https://image.tmdb.org/t/p/original/90mwPRNMmX9RUGVgKMJMJNQnYX8.jpg','https://image.tmdb.org/t/p/original/sLDoVwrzmKNdiBmykPSxaJA7uQh.jpg','3 wins & 5 nominations total','$148,438,600','PG-13')
,('The Heartbreak Kid','04 Oct 2007','5.9','116 minutes','English, Spanish','Movie','Eddie is forty, owns a sporting-goods store, and is still single. After watching his ex-fianc√©e walk down the aisle, he meets Lila, an environmental researcher, who seems too good to be true. Pressured by his father and best friend, Eddie pops the question and marries Lila after only 6 weeks. However, as he almost instantly discovers, his new bride is a nightmare with more baggage than he can handle. She''s immature, foolish, a monster in bed, owes a tremendous amount of money to various sources, and as it turns out, is only a volunteer and doesn''t actually have a job. While on their honeymoon in Cabo, Eddie meets Miranda, a down-to-earth lacrosse coach who is visiting with her family. Sparks fly, and Eddie falls for her. Now comes the tricky part of breaking off his marriage to crazy Lila, all while keeping the truth from Miranda about why he''s in Cabo in the first place...','https://image.tmdb.org/t/p/original/bVWM0L3DqFpNE3Yt49WjAgTQUc0.jpg','https://image.tmdb.org/t/p/original/oC4LniL98rnmvW52FizMqzD5QzX.jpg','1 win total','$36,787,257','R')
,('Vice','25 Dec 2018','7.2','132 minutes','English, Arabic','Movie','Governor George W. Bush of Texas, picks Dick Cheney, the CEO of Halliburton Company, to be his Republican running mate in the 2000 presidential election. No stranger to politics, Cheney''s impressive resume includes stints as White House Chief of Staff, House Minority Whip, and Defense Secretary. When Bush wins by a narrow margin, Cheney begins to use his newfound power to help reshape the country and the world.','https://image.tmdb.org/t/p/original/1gCab6rNv1r6V64cwsU4oEr649Y.jpg','https://image.tmdb.org/t/p/original/aHcNu3tYihvkL45CrXTFY4YfrfF.jpg','Won 1 Oscar. 35 wins & 139 nominations total','$47,836,282','R')
,('Knocked Up','01 Jun 2007','6.9','129 minutes','English','Movie','When Alison Scott is promoted in E. Television, she goes to a night-club to celebrate with her older married sister Debbie. Alison meets the pothead reckless Ben Stone and while having a small talk with Ben, Debbie''s husband Pete calls her to tell that their daughter has chicken pox. Debbie leaves the place but Alison stays with Ben, drinking and dancing along all night; completely wasted, they end up having a one night stand. Ben does not use a condom and eight weeks later, Alison discovers that she is pregnant. She calls Ben and they decide to try to stay together and have the baby. However, Ben needs to grow up first to raise a family of his own.','https://image.tmdb.org/t/p/original/b4OaXw2MW97VvIiZE0Sbn1NfxSh.jpg','https://image.tmdb.org/t/p/original/lavWAUXVe7vHlKhZEGmfVLaVd4S.jpg','8 wins & 26 nominations','$148,768,917','R')
,('Get Smart','19 Jun 2008','6.5','110 minutes','English, Russian, Punjabi, Arabic','Movie','CONTROL agents Maxwell Smart and 99 travel around the globe to save the world from a plot of terrorism from KAOS. Along the way, both agents learn about life and other things from each other that could them in the future. They also meet other people along the way that could help them save the world.','https://image.tmdb.org/t/p/original/sZUjbtUS8qxXp4mj90evnqPJqX7.jpg','https://image.tmdb.org/t/p/original/9SZ4OxZVYRfTn0qCvoQq0pPLISn.jpg','3 wins & 6 nominations total','$130,319,208','PG-13')
,('Foxcatcher','20 Nov 2014','7','134 minutes','English, French','Movie','Based on true events, Foxcatcher tells the dark and fascinating story of the unlikely and ultimately tragic relationship between an eccentric multi-millionaire and two champion wrestlers. When Olympic Gold Medal winning wrestler Mark Schultz (Channing Tatum) is invited by wealthy heir John Du Pont (Steve Carell) to move on to the Du Pont estate and help form a team to train for the 1988 Seoul Olympics at his new state-of-the-art training facility, Schultz jumps at the opportunity, hoping to focus on his training and finally step out of the poverty stricken situation Olympic caliber athletes like he and his revered brother, Dave (Mark Ruffalo). Driven by hidden needs, Du Pont sees backing Schultz''s bid for Gold and the chance to "coach" a world-class wrestling team as an opportunity to gain the elusive respect of his peers and, more importantly, his disapproving mother (Vanessa Redgrave). Trapped in Du Pont''s majestic but suffocating world, Mark comes to see his benefactor as an egotistical, arrogant, and selfish megalomaniac and grows increasingly contemptuous. Though initially supportive, Du Pont''s mercurial personality turns and he begins to lure Mark into an unhealthy lifestyle that threatens to undermine his training. Soon Du Pont''s erratic behavior and threatening psychological game-play begin to erode the athlete''s environment, stability, and motivation. Meanwhile Du Pont becomes fixated on Dave, who exudes the confidence Du Pont lacks. Du Pont eventually realizes he is unable to buy the respect he so desperately desires from the world''s greatest wrestlers. Fueled by Du Pont''s increasing paranoia and alienation from the brothers, the trio is propelled towards a tragedy no one could have foreseen.','https://image.tmdb.org/t/p/original/w6Sl079QtUcQ9dVQ2RP6aN9NBXx.jpg','https://image.tmdb.org/t/p/original/tT8vexYdyHG0nHyXQkhzt8tbFkt.jpg','Nominated for 5 Oscars. 12 wins & 81 nominations total','$12,096,300','R')
,('This Is the End','12 Jun 2013','6.6','107 minutes','English, Spanish','Movie','All Jay Baruchel expected coming to LA was a fun time with Seth Rogen with all the wild partying to have both by themselves and at James Franco''s housewarming party. Suddenly, the Rapture hits and the Biblical Apocalypse has begun. Now, Jay and Seth are desperately sheltering in James'' house for rescue along with a few other friends. Together, they must band together to attempt to survive the end of the world, only for Jay to find that they are all too dumb and superficial to do it until they discover the only way out.','https://image.tmdb.org/t/p/original/7Wdc3etyBJA4432TYtz6n9GQd1c.jpg','https://image.tmdb.org/t/p/original/i1HfPzUM29qlkmj8G1j22evLjfr.jpg','10 wins & 23 nominations total','$101,470,202','R')
,('This Is 40','20 Dec 2012','6.2','134 minutes','English','Movie','Pete (Paul Rudd) and Debbie (Leslie Mann) are turning 40. But instead of celebrating, they''re mired in a mid-life crisis with unruly kids, debt and unhappiness mounding. Pete''s record label is failing and Debbie is unable to come to terms with her aging body. As Pete''s 40th birthday party arrives, Pete and Debbie are going to have to rely on family, friends, employees, fitness trainers, aging rockers and ultimately each other to come to terms with life at age 40.','https://image.tmdb.org/t/p/original/qoK8bMRM9qBObxLSkW9nQ5P9XhE.jpg','https://image.tmdb.org/t/p/original/botG6F4zvVD6WnDxQCWTU7U5cTD.jpg','2 wins & 11 nominations total','$67,544,505','R')
,('Cha Cha Real Smooth','17 Jun 2022','7.3','107 minutes','English','Movie',NULL,'https://image.tmdb.org/t/p/original/z8IPItbwRrJ3QWdCePOnWS1jueY.jpg','https://image.tmdb.org/t/p/original/1LMGpNSUekWg3XCPweN33knQPW9.jpg','6 wins & 14 nominations total',NULL,'R')
,('Definitely, Maybe','07 Feb 2008','7.1','112 minutes','English','Movie','Romantic comedy: Will Hayes, a 30-something Manhattan dad is in the midst of a divorce when his 10 year old daughter, Maya, starts to question him about his life before marriage. Maya wants to know absolutely everything about how her parents met and fell in love. Will''s story begins in 1992, as a young, starry-eyed aspiring politician who moves to New York from Wisconsin in order to work on the Clinton campaign. For Maya, Will relives his past as a idealistic young man learning the ins and outs of big city politics, and recounts the history of his romantic relationships with three very different women. On the campaign, Will''s best buddy is Russell McCormack. They not only have similar political aspirations, they share the same type of girl problems, too. Will hopelessly attempts a "PG" version of his story for his daughter ad changes the names so Maya has to guess who he finally married. Is her mother Will''s college sweetheart, the dependable girl next-door Emily? Is she his longtime best friend and confidante, the apolitical April? Or is she the free-spirited but ambitious journalist? As Maya puts together the pieces of her dad''s romantic puzzle, she begins to understand that love is not so simple or easy. And as Will tells her his tale, Maya helps him to understand that it''s definitely never too late to go back...and maybe even possible to find a happy ending.','https://image.tmdb.org/t/p/original/4FuN9nBJ7ttO4BUopJCpT6B0yhH.jpg','https://image.tmdb.org/t/p/original/wid86tR3KvQ8SBzjmlcXMTSRXsy.jpg','1 win & 1 nomination total','$32,241,649','PG-13')
,('Jersey Girl','26 Mar 2004','6.2','102 minutes','English','Movie','Oliver Trinke has always tried to put his Highlands, New Jersey past behind him, but it''s been difficult for the past six years. He was a successful New York City music publicist, but after his wife Gertrude died immediately after delivering their daughter Gertie, unprepared Ollie became persona non grata in the entertainment-publicity industry through a single incident largely putting his desire for professional success over his responsibilities as a father, and he returned to Highlands and he and Gertie moved in with his own father Bart until he could get back on his feet. That meant working side-by-side with Bart in the Borough of Highlands works crew, a job he still has. He also still has the desire to get back to a New York City life and a high-powered job as an entertainment publicist, despite learning to be a responsible, loving father to Gertie, who has only known Highlands life and likes everything about it, including her daddy and Bart, her "Pop." As Ollie tries to realize his dream, he might get a clearer picture of his priorities with help from Maya, a video store clerk/graduate student that he and Gertie befriend.','https://image.tmdb.org/t/p/original/nMmMWoSooR6QmCjdT0AvZardof1.jpg','https://image.tmdb.org/t/p/original/zuxSfx7ZNzBsXE0f0lSGrfRB01e.jpg','2 wins & 8 nominations','$25,268,157','PG-13')
,('Coraline','06 Feb 2009','7.8','100 minutes','English, Russian','Movie','When Coraline moves to an old house, she feels bored and neglected by her parents. She finds a hidden door with a bricked up passage. During the night, she crosses the passage and finds a parallel world where everybody has buttons instead of eyes, with caring parents and all her dreams coming true. When the Other Mother invites Coraline to stay in her world forever, the girl refuses and finds that the alternate reality where she is trapped is only a trick to lure her.','https://image.tmdb.org/t/p/original/4jeFXQYytChdZYE9JYO7Un87IlW.jpg','https://image.tmdb.org/t/p/original/91BAmpop4AJ5Pf7E0zuQiHdSV4Q.jpg','Nominated for 1 Oscar. 8 wins & 46 nominations total','$116,896,576','PG')
,('Fantastic Mr. Fox','23 Oct 2009','7.9','87 minutes','English, French','Movie','This is the story of Mr. Fox (George Clooney) and his wild ways of hen heckling, turkey taking, and cider sipping, nocturnal, instinctive adventures. He has to put his wild days behind him and do what fathers do best: be responsible. He is too rebellious. He is too wild. He is going to try "just one more raid" on the three nastiest, meanest farmers that are Walter Boggis (Robin Hurlstone), Nathan Bunce (Hugo Guinness), and Franklin Bean (Sir Michael Gambon). It is a tale of crossing the line of family responsibilities and midnight adventure and the friendships and awakenings of this country life that is inhabited by Fantastic Mr. Fox and his friends.','https://image.tmdb.org/t/p/original/njbTizADSZg4PqeyJdDzZGooikv.jpg','https://image.tmdb.org/t/p/original/qU4HDNKv7gjdlvMu74r70rISPwn.jpg','Nominated for 2 Oscars. 32 wins & 63 nominations total','$21,002,919','PG')
,('Blade Runner 2049','04 Oct 2017','8','164 minutes','English','Movie','Thirty years after the events of Blade Runner (1982), a new Blade Runner, L.A.P.D. Officer "K" (Ryan Gosling), unearths a long-buried secret that has the potential to plunge what''s left of society into chaos. K''s discovery leads him on a quest to find Rick Deckard (Harrison Ford), a former L.A.P.D. Blade Runner, who has been missing for thirty years.','https://image.tmdb.org/t/p/original/gajva2L0rPYkEWjzgFlBXCAVBE5.jpg','https://image.tmdb.org/t/p/original/bMdSmfI0qwpAkvhAL7sqpjmwgf4.jpg','Won 2 Oscars. 100 wins & 163 nominations total','$92,071,675','R')
,('In the Mood for Love','29 Sep 2000','8.1','98 minutes','Cantonese, Shanghainese, French, Spanish','Movie','Set in Hong Kong, 1962, Chow Mo-Wan is a newspaper editor who moves into a new building with his wife. At the same time, Su Li-zhen, a beautiful secretary and her executive husband also move in to the crowded building. With their spouses often away, Chow and Li-zhen spend most of their time together as friends. They have everything in common from noodle shops to martial arts. Soon, they are shocked to discover that their spouses are having an affair. Hurt and angry, they find comfort in their growing friendship even as they resolve not to be like their unfaithful mates.','https://image.tmdb.org/t/p/original/iYypPT4bhqXfq1b6EnmxvRt6b2Y.jpg','https://image.tmdb.org/t/p/original/n4GJFGzsc7NinI1VeGDXIcQjtU2.jpg','Nominated for 1 BAFTA Award45 wins & 50 nominations total','$2,738,980','PG')
,('How to Lose a Guy in 10 Days','07 Feb 2003','6.5','116 minutes','English','Movie','Benjamin Barry is an advertising executive competing with two female co-workers for a major campaign for a diamond merchant. He cuts a deal with his competitors that the account is his if he can make a woman of their choice fall in love with him in 10 days. In comes Andie Anderson who, in turn, is writing a story on how to lose a guy in 10 days as a bet with her boss to be allowed to write more substantial stories. With a hidden agenda in each camp, will either party be able to complete their mission?','https://image.tmdb.org/t/p/original/2dlftyPz7mTYbrsPvTogyFmYd7d.jpg','https://image.tmdb.org/t/p/original/cdYj6HFpKp5NTmLiHHbNEGSmDT4.jpg','1 win & 8 nominations total','$105,813,373','PG-13')
,('Oldboy','21 Nov 2003','8.3','120 minutes','Korean','Movie','Oh Dae-Su, an obnoxious drunk abducted on a rainy night in 1988, wakes up in a strange, windowless hotel room. Kept under lock and key for an unknown reason, Oh Dae-Su''s invisible captors keep him fed and systematically sedated to avert suicide, providing only a colour television to keep him company. And after fifteen long years in captivity, perplexed Oh Dae-Su finds himself released. Now, his pitiless abductors encourage Oh Dae-Su to track down the ones behind the mysterious kidnapping and finally get his brutal, longed-for revenge on the unknown tormentor. However, who would hate Oh Dae-Su so much that he would deny him a quick and clean death?','https://image.tmdb.org/t/p/original/pWDtjs568ZfOTMbURQBYuT4Qxka.jpg','https://image.tmdb.org/t/p/original/sdwjQEM869JFwMytTmvr6ggvaUl.jpg','43 wins & 28 nominations total','$2,458,200','R')
,('No Country for Old Men','21 Nov 2007','8.2','122 minutes','English, Spanish','Movie','In rural Texas, welder and hunter Llewelyn Moss (Josh Brolin) discovers the remains of several drug runners who have all killed each other in an exchange gone violently wrong. Rather than report the discovery to the police, Moss decides to simply take the two million dollars present for himself. This puts the psychopathic killer, Anton Chigurh (Javier Bardem), on his trail as he dispassionately murders nearly every rival, bystander and even employer in his pursuit of his quarry and the money. As Moss desperately attempts to keep one step ahead, the blood from this hunt begins to flow behind him with relentlessly growing intensity as Chigurh closes in. Meanwhile, the laconic Sheriff Ed Tom Bell (Tommy Lee Jones) blithely oversees the investigation even as he struggles to face the sheer enormity of the crimes he is attempting to thwart.','https://image.tmdb.org/t/p/original/bj1v6YKF8yHqA489VFfnQvOJpnc.jpg','https://image.tmdb.org/t/p/original/mkXwF7FFWpf2dkOGCzQoeWX7M6R.jpg','Won 4 Oscars. 165 wins & 139 nominations total','$74,283,625','R')
,('Your Name.','26 Aug 2016','8.4','106 minutes','Japanese','Movie','Mitsuha is the daughter of the mayor of a small mountain town. She''s a straightforward high school girl who lives with her sister and her grandmother and has no qualms about letting it be known that she''s uninterested in Shinto rituals or helping her father''s electoral campaign. Instead she dreams of leaving the boring town and trying her luck in Tokyo. Taki is a high school boy in Tokyo who works part-time in an Italian restaurant and aspires to become an architect or an artist. Every night he has a strange dream where he becomes...a high school girl in a small mountain town.','https://image.tmdb.org/t/p/original/8GJsy7w7frGquw1cy9jasOGNNI1.jpg','https://image.tmdb.org/t/p/original/8x9iKH8kWA0zdkgNdpAew7OstYe.jpg','17 wins & 27 nominations total','$5,017,246','TV-PG')
,('Apocalypse Now','15 Aug 1979','8.4','147 minutes','English, French, Vietnamese','Movie','It is the height of the war in Vietnam, and U.S. Army Captain Willard is sent by Colonel Lucas and a General to carry out a mission that, officially, ''does not exist - nor will it ever exist''. The mission: To seek out a mysterious Green Beret Colonel, Walter Kurtz, whose army has crossed the border into Cambodia and is conducting hit-and-run missions against the Viet Cong and NVA. The army believes Kurtz has gone completely insane and Willard''s job is to eliminate him. Willard, sent up the Nung River on a U.S. Navy patrol boat, discovers that his target is one of the most decorated officers in the U.S. Army. His crew meets up with surfer-type Lt-Colonel Kilgore, head of a U.S Army helicopter cavalry group which eliminates a Viet Cong outpost to provide an entry point into the Nung River. After some hair-raising encounters, in which some of his crew are killed, Willard, Lance and Chef reach Colonel Kurtz''s outpost, beyond the Do Lung Bridge. Now, after becoming prisoners of Kurtz, will Willard & the others be able to fulfill their mission?','https://image.tmdb.org/t/p/original/gQB8Y5RCMkv2zwzFHbUJX3kAhvA.jpg','https://image.tmdb.org/t/p/original/9Qs9oyn4iE8QtQjGZ0Hp2WyYNXT.jpg','Won 2 Oscars. 21 wins & 33 nominations total','$96,042,913','R')
,('The Big Lebowski','06 Mar 1998','8.1','117 minutes','English, German, Hebrew, Spanish','Movie','When "the dude" Lebowski is mistaken for a millionaire Lebowski, two thugs urinate on his rug to coerce him into paying a debt he knows nothing about. While attempting to gain recompense for the ruined rug from his wealthy counterpart, he accepts a one-time job with high pay-off. He enlists the help of his bowling buddy, Walter, a gun-toting Jewish-convert with anger issues. Deception leads to more trouble, and it soon seems that everyone from porn empire tycoons to nihilists want something from The Dude.','https://image.tmdb.org/t/p/original/9mprbw31MGdd66LR0AQKoDMoFRv.jpg','https://image.tmdb.org/t/p/original/nevS6wjzCxZESvmjJZqdyZ3RNQ6.jpg','5 wins & 18 nominations total','$19,488,923','R')
,('Wicked','20 Nov 2024','7.5','160 minutes','English','Movie','Elphaba, a young woman with green skin, as she navigates life at Shiz University and forms an unlikely friendship with the popular Galinda. Their bond deepens as they encounter the Wizard of Oz, leading to a series of events that ultimately shape their destinies and transform them into the Wicked Witch of the West and Glinda the Good.','https://image.tmdb.org/t/p/original/xDGbZ0JJ3mYaGKy4Nzd9Kph6M9L.jpg','https://image.tmdb.org/t/p/original/uKb22E0nlzr914bA9KyA5CVCOlV.jpg','Won 2 Oscars. 117 wins & 307 nominations total','$473,231,120','PG')
,('Avengers: Endgame','26 Apr 2019','8.4','181 minutes','English, Japanese, Xhosa, German','Movie','After the devastating events of Avengers: Infinity War (2018), the universe is in ruins due to the efforts of the Mad Titan, Thanos. With the help of remaining allies, the Avengers must assemble once more in order to undo Thanos''s actions and undo the chaos to the universe, no matter what consequences may be in store, and no matter who they face...','https://image.tmdb.org/t/p/original/ulzhLuWrPK07P1YkdWQLZnQh1JL.jpg','https://image.tmdb.org/t/p/original/7RyHsO4yDXtBv1zUU3mTpHeQ0d5.jpg','Nominated for 1 Oscar. 71 wins & 133 nominations total','$858,373,000','PG-13')
,('Cars','08 Jun 2006','7.3','116 minutes','English, Italian, Japanese, Yiddish','Movie','While traveling to California for the dispute of the final race of the Piston Cup against The King and Chick Hicks, the famous Lightning McQueen accidentally damages the road of the small town Radiator Springs and is sentenced to repair it. Lightning McQueen has to work hard and finds friendship and love in the simple locals, changing its values during his stay in the small town and becoming a true winner.','https://image.tmdb.org/t/p/original/2Touk3m5gzsqr1VsvxypdyHY5ci.jpg','https://image.tmdb.org/t/p/original/sd4xN5xi8tKRPrJOWwNiZEile7f.jpg','Nominated for 2 Oscars. 28 wins & 34 nominations total','$244,082,982','G')
,('Spider-Man 2','25 Jun 2004','7.5','127 minutes','English, Russian, Chinese','Movie','Peter Parker is an unhappy man: after two years of fighting crime as Spider-Man, his life has begun to fall apart. The girl he loves is engaged to someone else, his grades are slipping, he cannot keep any of his jobs, and on top of it, the newspaper Daily Bugle is attacking him viciously, claiming that Spider-Man is a criminal. He reaches the breaking point and gives up the crime fighter''s life, once and for all. But after a failed fusion experiment, eccentric and obsessive scientist Dr. Otto Octavius is transformed into super villain Doctor Octopus, Doc Ock for short, having four long tentacles as extra hands. Peter guesses it might just be time for Spider-Man to return, but would he act upon it?','https://image.tmdb.org/t/p/original/aGuvNAaaZuWXYQQ6N2v7DeuP6mB.jpg','https://image.tmdb.org/t/p/original/8G6HCS82vNxgg5wp7oBDSk32XpF.jpg','Won 1 Oscar. 25 wins & 60 nominations total','$374,337,514','PG-13')
,('Spider-Man: No Way Home','15 Dec 2021','8.2','148 minutes','English, Tagalog','Movie','Peter Parker''s secret identity is revealed to the entire world. Desperate for help, Peter turns to Doctor Strange to make the world forget that he is Spider-Man. The spell goes horribly wrong and shatters the multiverse, bringing in monstrous villains that could destroy the world.','https://image.tmdb.org/t/p/original/1g0dhYtq4irTY1GPXvft6k4YLjm.jpg','https://image.tmdb.org/t/p/original/nqUThBjou0TAWXu93Q4SNFpgqai.jpg','Nominated for 1 Oscar. 35 wins & 71 nominations total','$814,866,759','PG-13')
,('One Flew Over the Cuckoo''s Nest','19 Nov 1975','8.7','133 minutes','English','Movie','McMurphy has a criminal past and has once again gotten himself into trouble and is sentenced by the court. To escape labor duties in prison, McMurphy pleads insanity and is sent to a ward for the mentally unstable. Once here, McMurphy both endures and stands witness to the abuse and degradation of the oppressive Nurse Ratched, who gains superiority and power through the flaws of the other inmates. McMurphy and the other inmates band together to make a rebellious stance against the atrocious Nurse.','https://image.tmdb.org/t/p/original/kjWsMh72V6d8KRLV4EOoSJLT1H7.jpg','https://image.tmdb.org/t/p/original/qUq3QTr2KLvGIcN0GaaaYx9bbyH.jpg','Won 5 Oscars. 38 wins & 15 nominations total','$108,981,275','R')
,('Casablanca','23 Jan 1943','8.5','102 minutes','English, French, German, Italian, Russian','Movie','The story of Rick Blaine, a cynical world-weary ex-patriate who runs a nightclub in Casablanca, Morocco during the early stages of WWII. Despite the pressure he constantly receives from the local authorities, Rick''s cafe has become a kind of haven for refugees seeking to obtain illicit letters that will help them escape to America. But when Ilsa, a former lover of Rick''s, and her husband, show up to his cafe one day, Rick faces a tough challenge which will bring up unforeseen complications, heartbreak and ultimately an excruciating decision to make.','https://image.tmdb.org/t/p/original/oyGRZVIthHJjc98ekKpeWpDh8Ws.jpg','https://image.tmdb.org/t/p/original/rrsG3xYrWifoduZtsIZ4ntoDfBY.jpg','Won 3 Oscars. 17 wins & 11 nominations total','$4,219,709','PG')
,('The Green Mile','10 Dec 1999','8.6','189 minutes','English, French','Movie','Based on Stephen King''s 1996 novel of the same name. Stars Tom Hanks as a death row corrections officer during the U.S. Great Depression who witnesses supernatural events that occur after an enigmatic inmate (Michael Clarke Duncan) is brought to his facility.','https://image.tmdb.org/t/p/original/8VG8fDNiy50H4FedGwdSVUPoaJe.jpg','https://image.tmdb.org/t/p/original/vxJ08SvwomfKbpboCWynC3uqUg4.jpg','Nominated for 4 Oscars. 15 wins & 37 nominations total','$136,801,374','R')
,('Phantom Thread','19 Jan 2018','7.4','130 minutes','English, French','Movie','In glamorous 1950s post-war London, renowned dressmaker Reynolds Woodcock (Daniel Day-Lewis) and his sister Cyril (Lesley Manville) are at the center of British fashion, dressing royalty, movie stars, heiresses, socialites, debutantes, and dames in the distinct style of The House of Woodcock. Women come and go through Woodcock''s life, providing the confirmed bachelor with inspiration and companionship, until he comes across a strong-willed young woman, Alma (Vicky Krieps), who soon becomes a fixture in his life as his muse and lover. Once controlled and planned, he finds his carefully tailored life disrupted by love.','https://image.tmdb.org/t/p/original/hgoWjp9Sh0MI97eAMZCnIoVfgvq.jpg','https://image.tmdb.org/t/p/original/vpRMzPqHC03I7hPPET4Av2OT8dI.jpg','Won 1 Oscar. 55 wins & 121 nominations total','$21,198,205','R')
,('The Great Gatsby','24 May 2013','7.2','143 minutes','English','Movie','An adaptation of F. Scott Fitzgerald''s Long Island-set novel, where Midwesterner Nick Carraway is lured into the lavish world of his neighbor, Jay Gatsby. Soon enough, however, Carraway sees through the cracks of Gatsby''s nouveau riche existence, where obsession, madness, and tragedy await.','https://image.tmdb.org/t/p/original/nimh1rrDDLhgpG8XAYoUZXHYwb6.jpg','https://image.tmdb.org/t/p/original/5mQZqk2qSJCsYmvw1cQJLEcLNYM.jpg','Won 2 Oscars. 51 wins & 86 nominations total','$144,857,996','PG-13')
,('Mr. & Mrs. Smith','07 Jun 2005','6.5','120 minutes','English, Spanish, French','Movie','John and Jane Smith are a normal married couple, living a normal life in a normal suburb, working normal jobs...well, if you can call secretly being assassins "normal". But neither Jane nor John knows about their spouse''s secret, until they are surprised to find each other as targets! But on their quest to kill each other, they learn a lot more about each other than they ever did in five (or six) years of marriage.','https://image.tmdb.org/t/p/original/kjD700RtyhveN3ZbOnSvUSne0Qj.jpg','https://image.tmdb.org/t/p/original/2YJOXPl4QtCskixYA58ToyCXEW0.jpg','9 wins & 18 nominations total','$186,336,279','PG-13')
,('Cruella','26 May 2021','7.3','134 minutes','English, French','Movie','Before she becomes Cruella de Vil, teenage Estella has a dream. She wishes to become a fashion designer, having been gifted with talent, innovation, and ambition all in equal measures. But life seems intent on making sure her dreams never come true. Having wound up penniless and orphaned in London at 12, 10 years later Estella runs wild through the city streets with her best friends and partners-in-(petty)-crime, Horace and Jasper, two amateur thieves. When a chance encounter vaults Estella into the world of the young rich and famous, however, she begins to question the existence she''s built for herself in London and wonders whether she might, indeed, be destined for more after all.','https://image.tmdb.org/t/p/original/wToO8opxkGwKgSfJ1JK8tGvkG6U.jpg','https://image.tmdb.org/t/p/original/huzHIuaWRMDIAB8jIXYAwE7CJzS.jpg','Won 1 Oscar. 29 wins & 44 nominations total','$86,103,234','PG-13')
,('Elvis','22 Jun 2022','7.3','159 minutes','English','Movie','Elvis follows the story of infamous rock ''n'' roll star Elvis Presley seen through the eyes of his controversial manager Colonel Tom Parker. The film explores Elvis Presley''s highs and lows and the many challenges and controversies he received throughout his career.','https://image.tmdb.org/t/p/original/qBOKWqAFbveZ4ryjJJwbie6tXkQ.jpg','https://image.tmdb.org/t/p/original/xyS0NgcQ2pbGWcwvSSu3xKEBhoO.jpg','Nominated for 8 Oscars. 93 wins & 241 nominations total','$151,040,048','PG-13')
,('Iron Man','02 May 2008','7.9','126 minutes','English, Persian, Urdu, Arabic, Kurdish, Hindi, Hungarian','Movie','Tony Stark. Genius, billionaire, playboy, philanthropist. Son of legendary inventor and weapons contractor Howard Stark. When Tony Stark is assigned to give a weapons presentation to an Iraqi unit led by Lt. Col. James Rhodes, he''s given a ride on enemy lines. That ride ends badly when Stark''s Humvee that he''s riding in is attacked by enemy combatants. He survives - barely - with a chest full of shrapnel and a car battery attached to his heart. In order to survive he comes up with a way to miniaturize the battery and figures out that the battery can power something else. Thus Iron Man is born. He uses the primitive device to escape from the cave in Iraq. Once back home, he then begins work on perfecting the Iron Man suit. But the man who was put in charge of Stark Industries has plans of his own to take over Tony''s technology for other matters.','https://image.tmdb.org/t/p/original/78lPtwv72eTNqFW9COBYI0dWDJa.jpg','https://image.tmdb.org/t/p/original/cyecB7godJ6kNHGONFjUyVN9OX5.jpg','Nominated for 2 Oscars. 24 wins & 73 nominations total','$319,034,126','PG-13')
,('The Incredible Hulk','20 Jun 2008','6.6','112 minutes','English, Portuguese, Spanish','Movie','The story of Dr. Bruce Banner, who seeks a cure to his unique condition, which causes him to turn into a giant green monster under emotional stress, is depicted. Whilst on the run from military, which seeks his capture, Banner comes close to a cure. But he must contend with a new creature that emerges: The Abomination.','https://image.tmdb.org/t/p/original/gKzYx79y0AQTL4UAk1cBQJ3nvrm.jpg','https://image.tmdb.org/t/p/original/jPu8yiadqgzwFPGKJmGo637ASVP.jpg','2 wins & 10 nominations total','$134,806,913','PG-13')
,('Iron Man 2','28 Apr 2010','6.9','124 minutes','English, French, Russian','Movie','With the world now aware of his dual life as the armored superhero Iron Man, billionaire inventor Tony Stark faces pressure from the government, the press, and the public to share his technology with the military. Unwilling to let go of his invention, Stark, along with Pepper Potts, and James "Rhodey" Rhodes at his side, must forge new alliances - and confront powerful enemies.','https://image.tmdb.org/t/p/original/6WBeq4fCfn7AN0o21W9qNcRF2l9.jpg','https://image.tmdb.org/t/p/original/7lmBufEG7P7Y1HClYK3gCxYrkgS.jpg','Nominated for 1 Oscar. 7 wins & 45 nominations total','$312,433,331','PG-13')
,('Thor','20 May 2011','7','115 minutes','English','Movie','The warrior Thor (Chris Hemsworth) is cast out of the fantastic realm of Asgard by his father Odin (Sir Anthony Hopkins) for his arrogance and sent to Earth to live amongst humans. Falling in love with scientist Jane Foster (Natalie Portman) teaches Thor much-needed lessons, and his new-found strength comes into play as a villain from his homeland sends dark forces toward Earth.','https://image.tmdb.org/t/p/original/prSfAi1xGrhLQNxVSUFh61xQ4Qy.jpg','https://image.tmdb.org/t/p/original/cDJ61O1STtbWNBwefuqVrRe3d7l.jpg','5 wins & 30 nominations total','$181,030,624','PG-13')
,('Captain America: The First Avenger','31 Aug 2011','6.9','124 minutes','English, Norwegian, French','Movie','It is 1942, America has entered World War II, and sickly but determined Steve Rogers is frustrated at being rejected yet again for military service. Everything changes when Dr. Erskine recruits him for the secret Project Rebirth. Proving his extraordinary courage, wits and conscience, Rogers undergoes the experiment and his weak body is suddenly enhanced into the maximum human potential. When Dr. Erskine is then immediately assassinated by an agent of Nazi Germany''s secret HYDRA research department (headed by Johann Schmidt, a.k.a. the Red Skull), Rogers is left as a unique man who is initially misused as a propaganda mascot; however, when his comrades need him, Rogers goes on a successful adventure that truly makes him Captain America, and his war against Schmidt begins.','https://image.tmdb.org/t/p/original/vSNxAJTlD0r02V9sPYpOjqDZXUK.jpg','https://image.tmdb.org/t/p/original/yFuKvT4Vm3sKHdFY4eG6I4ldAnn.jpg','4 wins & 50 nominations total','$176,654,505','PG-13')
,('The Avengers','11 May 2012','8','143 minutes','English, Russian','Movie','Loki, the adopted brother of Thor, teams-up with the Chitauri Army and uses the Tesseract''s power to travel from Asgard to Midgard to plot the invasion of Earth and become a king. The director of the agency S.H.I.E.L.D., Nick Fury, sets in motion project Avengers, joining Tony Stark a.k.a. the Iron Man; Steve Rogers, a.k.a. Captain America; Bruce Banner, a.k.a. The Hulk; Thor; Natasha Romanoff, a.k.a. Black Widow; and Clint Barton, a.k.a. Hawkeye, to save the world from the powerful Loki and the alien invasion.','https://image.tmdb.org/t/p/original/RYMX2wcKCBAr24UyPD7xwmjaTn.jpg','https://image.tmdb.org/t/p/original/9BBTo63ANSmhC4e6r62OJFuK2GL.jpg','Nominated for 1 Oscar. 39 wins & 81 nominations total','$623,357,910','PG-13')
,('Iron Man 3','17 May 2013','7.1','130 minutes','English','Movie','Marvel''s "Iron Man 3" pits brash-but-brilliant industrialist Tony Stark/Iron Man against an enemy whose reach knows no bounds. When Stark finds his personal world destroyed at his enemy''s hands, he embarks on a harrowing quest to find those responsible. This journey, at every turn, will test his mettle. With his back against the wall, Stark is left to survive by his own devices, relying on his ingenuity and instincts to protect those closest to him. As he fights his way back, Stark discovers the answer to the question that has secretly haunted him: does the man make the suit or does the suit make the man?','https://image.tmdb.org/t/p/original/qhPtAc1TKbMPqNvcdXSOn9Bn7hZ.jpg','https://image.tmdb.org/t/p/original/iVped1djsF0tvGkvnHbzsE3ZPTF.jpg','Nominated for 1 Oscar. 20 wins & 63 nominations total','$409,013,994','PG-13')
,('Thor: The Dark World','20 Nov 2013','6.7','112 minutes','English','Movie','Thousands of years ago, a race of beings known as Dark Elves tried to send the universe into darkness by using a weapon known as the Aether. Warriors from Asgard stopped them, but their leader Malekith (Christopher Eccleston) escaped to wait for another opportunity. The warriors find the Aether, and since it cannot be destroyed, they try to hide it. In the present day, Jane Foster (Natalie Portman) awaits the return of Thor (Chris Hemsworth), although it has been two years since they last saw once another. In the meantime, Thor has been trying to bring peace to the nine realms. Jane discovers an anomaly similar to the one that brought Thor to Earth. She goes to investigate, finds a wormhole, and is sucked into it. Back on Asgard, Thor wishes to return to Earth, but his father, Odin (Sir Anthony Hopkins), refuses to let him. Thor learns from Heimdall (Idris Elba), who can see into all of the realms, that Jane disappeared. Thor then returns to Earth just as Jane reappears. However, when some Policemen try to arrest her, an unknown energy repulses them. Thor then brings Jane to Asgard to find out what happened to her. When the energy is released again, they discover that when Jane disappeared, she crossed paths with the Aether and it entered her. Malekith, upon sensing that the time to strike is now, seeks out the Aether. He attacks Asgard and Thor''s mother Frigga (Rene Russo) is killed protecting Jane. Odin wants to keep Jane on Asgard so that Malekith will come. Thor disagrees with his plan, so with his cohorts, he decides to take Jane away. He enlists the aid of his brother, Loki (Tom Hiddleston). Unfortunately, Loki''s motivations remain unknown.','https://image.tmdb.org/t/p/original/wD6g4EcmR6R3VNbuBmNOVq2qWrM.jpg','https://image.tmdb.org/t/p/original/uhYoytlNaq46dG81wLmHqaSuzWu.jpg','4 wins & 21 nominations total','$206,362,140','PG-13')
,('Captain America: The Winter Soldier','18 Apr 2014','7.7','136 minutes','English, French','Movie','For Steve Rogers, awakening after decades of suspended animation involves more than catching up on pop culture; it also means that this old school idealist must face a world of subtler threats and difficult moral complexities. That becomes clear when Director Nick Fury is killed by the mysterious assassin, the Winter Soldier, but not before warning Rogers that SHIELD has been subverted by its enemies. When Rogers acts on Fury''s warning to trust no one there, he is branded as a traitor by the organization. Now a fugitive, Captain America must get to the bottom of this deadly mystery with the help of the Black Widow and his new friend, The Falcon. However, the battle will be costly for the Sentinel of Liberty, with Rogers finding enemies where he least expects them while learning that the Winter Soldier looks disturbingly familiar.','https://image.tmdb.org/t/p/original/tVFRpFw3xTedgPGqxW0AOI8Qhh0.jpg','https://image.tmdb.org/t/p/original/xOe8nHr5bpPvq4JbGy4vpttDwg2.jpg','Nominated for 1 Oscar. 5 wins & 52 nominations total','$259,766,572','PG-13')
,('Guardians of the Galaxy','08 Aug 2014','8','121 minutes','English','Movie','After stealing a mysterious orb in the far reaches of outer space, Peter Quill from Earth is now the main target of a manhunt led by the villain known as Ronan the Accuser. To help fight Ronan and his team and save the galaxy from his power, Quill creates a team of space heroes known as the "Guardians of the Galaxy" to save the galaxy.','https://image.tmdb.org/t/p/original/jPrJPZKJVhvyJ4DmUTrDgmFN0yG.jpg','https://image.tmdb.org/t/p/original/uLtVbjvS1O7gXL8lUOwsFOH4man.jpg','Nominated for 2 Oscars. 52 wins & 103 nominations total','$333,718,600','PG-13')
,('Avengers: Age of Ultron','01 May 2015','7.3','141 minutes','English, Korean','Movie','Tony Stark creates the Ultron Program to protect the world, but when the peacekeeping program becomes hostile, The Avengers go into action to try and defeat a virtually impossible enemy together. Earth''s mightiest heroes must come together once again to protect the world from global extinction.','https://image.tmdb.org/t/p/original/4ssDuvEDkSArWEdyBl2X5EHvYKU.jpg','https://image.tmdb.org/t/p/original/6YwkGolwdOMNpbTOmLjoehlVWs5.jpg','8 wins & 52 nominations total','$459,005,868','PG-13')
,('Ant-Man','18 Jul 2015','7.2','117 minutes','English','Movie','Armed with the astonishing ability to shrink in scale but increase in strength, con-man Scott Lang must embrace his inner-hero and help his mentor, Dr. Hank Pym, protect the secret behind his spectacular Ant-Man suit from a new generation of towering threats. Against seemingly insurmountable obstacles, Pym and Lang must plan and pull off a heist that will save the world.','https://image.tmdb.org/t/p/original/rQRnQfUl3kfp78nCWq8Ks04vnq1.jpg','https://image.tmdb.org/t/p/original/1K3JmSNUN8OpjYsCjc0Hy0SYxAb.jpg','Nominated for 1 BAFTA Award4 wins & 34 nominations total','$180,202,163','PG-13')
,('Captain America: Civil War','06 May 2016','7.8','147 minutes','English, German, Xhosa, Russian, Romanian','Movie','With many people fearing the actions of super heroes, the government decides to push for the Hero Registration Act, a law that limits a hero''s actions. This results in a division in The Avengers. Iron Man stands with this Act, claiming that their actions must be kept in check otherwise cities will continue to be destroyed, but Captain America feels that saving the world is daring enough and that they cannot rely on the government to protect the world. This escalates into an all-out war between Team Iron Man (Iron Man, Black Panther, Vision, Black Widow, War Machine, and Spider-Man) and Team Captain America (Captain America, Bucky Barnes, Falcon, Scarlet Witch, Hawkeye, and Ant Man) while a new villain emerges.','https://image.tmdb.org/t/p/original/rAGiXaUfPzY7CDEyNKUofk3Kw2e.jpg','https://image.tmdb.org/t/p/original/wdwcOBMkt3zmPQuEMxB3FUtMio2.jpg','16 wins & 74 nominations total','$408,084,349','PG-13')
,('Doctor Strange','04 Nov 2016','7.5','115 minutes','English','Movie','Marvel''s "Doctor Strange" follows the story of the talented neurosurgeon Doctor Stephen Strange who, after a tragic car accident, must put ego aside and learn the secrets of a hidden world of mysticism and alternate dimensions. Based in New York City''s Greenwich Village, Doctor Strange must act as an intermediary between the real world and what lies beyond, utilising a vast array of metaphysical abilities and artifacts to protect the Marvel Cinematic Universe.','https://image.tmdb.org/t/p/original/uGBVj3bEbCoZbDjjl9wTxcygko1.jpg','https://image.tmdb.org/t/p/original/3zvZ699gMW2RhWc0GisIukzq0Ls.jpg','Nominated for 1 Oscar. 21 wins & 68 nominations total','$232,641,920','PG-13')
,('Guardians of the Galaxy Vol. 2','25 Apr 2017','7.6','136 minutes','English','Movie','After saving Xandar from Ronan''s wrath, the Guardians are now recognized as heroes. Now the team must help their leader, Star Lord, uncover the truth behind his true heritage. Along the way, old foes turn to allies and betrayal is blooming. And the Guardians find they are up against a devastating new menace who is out to rule the galaxy.','https://image.tmdb.org/t/p/original/y4MBh0EjBlMuOzv9axM4qJlmhzz.jpg','https://image.tmdb.org/t/p/original/aJn9XeesqsrSLKcHfHP4u5985hn.jpg','Nominated for 1 Oscar. 15 wins & 60 nominations total','$389,813,101','PG-13')
,('Spider-Man: Homecoming','05 Jul 2017','7.4','133 minutes','English, Spanish','Movie','A young Peter Parker/Spider-Man begins to navigate his newfound identity as web-slinging superhero Spider-Man. Thrilled by his experience with the Avengers, Peter returns home, where he lives with his Aunt May, under the watchful eye of his new mentor Tony Stark. Peter tries to fall back into his normal daily routine--distracted by thoughts of proving himself to be more than just your friendly neighborhood Spider-Man--but when the Vulture emerges as a new villain, everything that Peter holds most important will be threatened.','https://image.tmdb.org/t/p/original/c24sv2weTHPsmDa7jEMN0m2P3RT.jpg','https://image.tmdb.org/t/p/original/tPpYGm2mVecue7Bk3gNVoSPA5qn.jpg','8 wins & 10 nominations total','$334,952,829','PG-13')
,('Black Panther','16 Feb 2018','7.3','134 minutes','English, Swahili, Nama, Xhosa, Korean','Movie','After the events of Captain America: Civil War, Prince T''Challa returns home to the reclusive, technologically advanced African nation of Wakanda to serve as his country''s new king. However, T''Challa soon finds that he is challenged for the throne from factions within his own country. When two foes conspire to destroy Wakanda, the hero known as Black Panther must team up with C.I.A. agent Everett K. Ross and members of the Dora Milaje, Wakandan special forces, to prevent Wakanda from being dragged into a world war.','https://image.tmdb.org/t/p/original/uxzzxijgPIY7slzFvMotPv8wjKA.jpg','https://image.tmdb.org/t/p/original/b6ZJZHUdMEFECvGiDpJjlfUWela.jpg','Won 3 Oscars. 124 wins & 290 nominations total','$700,426,566','PG-13')
,('Avengers: Infinity War','27 Apr 2018','8.4','149 minutes','English','Movie','As the Avengers and their allies have continued to protect the world from threats too large for any one hero to handle, a new danger has emerged from the cosmic shadows: Thanos. A despot of intergalactic infamy, his goal is to collect all six Infinity Stones, artifacts of unimaginable power, and use them to inflict his twisted will on all of reality. Everything the Avengers have fought for has led up to this moment, the fate of Earth and existence has never been more uncertain.','https://image.tmdb.org/t/p/original/7WsyChQLEftFiDOVTGkv3hFpyyt.jpg','https://image.tmdb.org/t/p/original/mDfJG3LC3Dqb67AZ52x3Z0jU0uB.jpg','Nominated for 1 Oscar. 48 wins & 81 nominations total','$678,815,482','PG-13')
,('Captain Marvel','06 Mar 2019','6.8','123 minutes','English','Movie','After crashing an experimental aircraft, Air Force pilot Carol Danvers is discovered by the Kree and trained as a member of the elite Starforce Military under the command of her mentor Yon-Rogg. Six years later, after escaping to Earth while under attack by the Skrulls, Danvers begins to discover there''s more to her past. With help from S.H.I.E.L.D. agent Nick Fury, they set out to unravel the truth.','https://image.tmdb.org/t/p/original/AtsgWhDnHTq68L0lLsUrCnM7TjG.jpg','https://image.tmdb.org/t/p/original/qAzYK4YPSWDc7aa4R43LcwRIAyb.jpg','10 wins & 56 nominations total','$426,829,839','PG-13')
,('Spider-Man: Far from Home','05 Jul 2019','7.4','129 minutes','English, Italian, Czech','Movie','Our friendly neighborhood Super Hero decides to join his best friends Ned, MJ, and the rest of the gang on a European vacation. However, Peter''s plan to leave super heroics behind for a few weeks are quickly scrapped when he begrudgingly agrees to help Nick Fury uncover the mystery of several elemental creature attacks, creating havoc across the continent.','https://image.tmdb.org/t/p/original/4q2NNj4S5dG2RLF9CpXsej7yXl.jpg','https://image.tmdb.org/t/p/original/34jW8LvjRplM8Pv06cBFDpLlenR.jpg','11 wins & 26 nominations total','$391,283,774','PG-13')
,('Black Widow','07 Jul 2021','6.6','134 minutes','English, Russian, Norwegian, Hungarian, Macedonian, Finnish','Movie','In Marvel Studios'' action-packed spy thriller "Black Widow," Natasha Romanoff aka Black Widow confronts the darker parts of her ledger when a dangerous conspiracy with ties to her past arises. Pursued by a force that will stop at nothing to bring her down, Natasha must deal with her history as a spy and the broken relationships left in her wake long before she became an Avenger.','https://image.tmdb.org/t/p/original/kwB7d51AIcyzPOBOHLCEZJkmPhQ.jpg','https://image.tmdb.org/t/p/original/6azpBJGcLx9SKif8h9VMnflBfa.jpg','14 wins & 34 nominations total','$183,651,655','PG-13')
,('Shang-Chi and the Legend of the Ten Rings','01 Sep 2021','7.3','132 minutes','English, Mandarin','Movie','When his father, Wenwu, the leader of the "Ten Rings" terrorist organization, sends assassins after him, Shang-Chi is forced to confront his tragic past. With his friend Katy, he travels to Macau to warn his sister Xialing, leading to a dramatic battle in an underground fight club. Captured, they learn Wenwu plans to invade the mythical village of Ta Lo - believing their mother is imprisoned there. Teaming up with Ta Lo''s villagers, Shang-Chi battles Wenwu and the dark creatures he unleashes. With the help of a legendary dragon, Shang-Chi gains control over the Ten Rings, finally defeating the dark forces.','https://image.tmdb.org/t/p/original/d08HqqeBQSwN8i8MEvpsZ8Cb438.jpg','https://image.tmdb.org/t/p/original/zxWAv1A34kdYslBi4ekMDtgIGUt.jpg','Nominated for 1 Oscar. 19 wins & 67 nominations total','$224,543,292','PG-13')
,('Eternals','03 Nov 2021','6.2','156 minutes','English, American Sign Language, Marathi, Assyrian Neo-Aramaic, Spanish, Sumerian, Latin, Sanskrit, Greek, Ancient (to 1453), Arabic','Movie','Following the events of Avengers: Endgame (2019), an unexpected tragedy forces the Eternals, ancient aliens who have been living on Earth in secret for thousands of years, out of the shadows to reunite against mankind''s most ancient enemy, the Deviants.','https://image.tmdb.org/t/p/original/lFByFSLV5WDJEv3KabbdAF959F2.jpg','https://image.tmdb.org/t/p/original/c6H7Z4u73ir3cIoCteuhJh7UCAR.jpg','7 wins & 25 nominations total','$164,870,234','PG-13')
,('Doctor Strange in the Multiverse of Madness','04 May 2022','6.9','126 minutes','English, Spanish, Chinese','Movie','Following the events of Spider-Man No Way Home, Doctor Strange unwittingly casts a forbidden spell that accidentally opens up the multiverse. With help from Wong and Scarlet Witch, Strange confronts various versions of himself as well as teaming up with the young America Chavez while traveling through various realities and working to restore reality as he knows it. Along the way, Strange and his allies realize they must take on a powerful new adversary who seeks to take over the multiverse.','https://image.tmdb.org/t/p/original/ddJcSKbcp4rKZTmuyWaMhuwcfMz.jpg','https://image.tmdb.org/t/p/original/iKUwhA4DUxMcNKu5lLSbDFwwilk.jpg','10 wins & 34 nominations total','$411,331,607','PG-13')
,('Thor: Love and Thunder','06 Jul 2022','6.2','118 minutes','English','Movie','Thor''s retirement is interrupted by a galactic killer known as Gorr the God Butcher, who seeks the extinction of the gods. To combat the threat, Thor enlists the help of King Valkyrie, Korg and ex-girlfriend Jane Foster, who - to Thor''s surprise - inexplicably wields his magical hammer, Mjolnir, as the Mighty Thor. Together, they embark upon a harrowing cosmic adventure to uncover the mystery of the God Butcher''s vengeance and stop him before it''s too late.','https://image.tmdb.org/t/p/original/pIkRyD18kl4FhoCNQuWxWu5cBLM.jpg','https://image.tmdb.org/t/p/original/jsoz1HlxczSuTx0mDl2h0lxy36l.jpg','3 wins & 22 nominations total','$343,256,830','PG-13')
,('Black Panther: Wakanda Forever','09 Nov 2022','6.6','161 minutes','English, Xhosa, Maya, Spanish, Haitian Creole, French','Movie','Queen Ramonda, Shuri, M''Baku, Okoye and the Dora Milaje fight to protect the kingdom of Wakanda from intervening world powers in the wake of King T''Challa''s death. As the Wakandans strive to embrace their next chapter, the heroes must band together with the help of War Dog Nakia and Everett Ross and forge a new path for their nation.','https://image.tmdb.org/t/p/original/sv1xJUazXeYqALzczSZ3O6nkH75.jpg','https://image.tmdb.org/t/p/original/1GU0jS5ZG5MhfdDrpj8s9XxbgJJ.jpg','Won 1 Oscar. 50 wins & 175 nominations total','$453,829,060','PG-13')
,('Ant-Man and the Wasp: Quantumania','17 Feb 2023','6','124 minutes','English','Movie','When Scott Lang and Hope van Dyne, along with Hope''s parents, Hank Pym and Janet van Dyne, and Scott''s daughter, Cassie, are accidentally sent to the Quantum Realm, they soon find themselves exploring the Realm, interacting with strange new creatures','https://image.tmdb.org/t/p/original/qnqGbB22YJ7dSs4o6M7exTpNxPz.jpg','https://image.tmdb.org/t/p/original/m8JTwHFwX7I7JY5fPe4SjqejWag.jpg','14 nominations total','$214,504,909','PG-13')
,('The Marvels','08 Nov 2023','5.5','105 minutes','English, Urdu','Movie','Carol Danvers AKA Captain Marvel has reclaimed her identity from the tyrannical Kree and taken revenge on the Supreme Intelligence. But unintended consequences see Carol shouldering the burden of a destabilized universe. When her duties send her to an anomalous wormhole linked to a Kree revolutionary, her powers become entangled with that of Jersey City super-fan Kamala Khan, aka Ms. Marvel, and Carol''s estranged niece, now S.A.B.E.R. astronaut Captain Monica Rambeau.','https://image.tmdb.org/t/p/original/9GBhzXMFjgcZ3FdR9w3bUMMTps5.jpg','https://image.tmdb.org/t/p/original/criPrxkTggCra1jch49jsiSeXo1.jpg','11 wins & 15 nominations total','$84,500,223','PG-13')
,('Harry Potter and the Sorcerer''s Stone','16 Nov 2001','7.7','152 minutes','English, Latin','Movie','This is the tale of Harry Potter (Daniel Radcliffe), an ordinary eleven-year-old boy serving as a sort of slave for his aunt and uncle who learns that he is actually a wizard and has been invited to attend the Hogwarts School for Witchcraft and Wizardry. Harry is snatched away from his mundane existence by Rubeus Hagrid (Robbie Coltrane), the groundskeeper for Hogwarts, and quickly thrown into a world completely foreign to both him and the viewer. Famous for an incident that happened at his birth, Harry makes friends easily at his new school. He soon finds, however, that the wizarding world is far more dangerous for him than he would have imagined, and he quickly learns that not all wizards are ones to be trusted.','https://image.tmdb.org/t/p/original/wuMc08IPKEatf9rnMNXvIDxqP4W.jpg','https://image.tmdb.org/t/p/original/bfh9Z3Ghz4FOJAfLOAhmc3ccnHU.jpg','Nominated for 3 Oscars. 20 wins & 74 nominations total','$318,886,962','PG')
,('Harry Potter and the Chamber of Secrets','13 Nov 2002','7.4','161 minutes','English, Latin','Movie','Forced to spend his summer holidays with his muggle relations, Harry Potter (Daniel Radcliffe) gets a real shock when he gets a surprise visitor: Dobby (Toby Jones) the house-elf, who warns Harry against returning to Hogwarts, for terrible things are going to happen. Harry decides to ignore Dobby''s warning and continues with his pre-arranged schedule. But at Hogwarts, strange and terrible things are indeed happening. Harry is suddenly hearing mysterious voices from inside the walls, muggle-born students are being attacked, and a message scrawled on the wall in blood puts everyone on his or her guard, "The Chamber Of Secrets Has Been Opened. Enemies Of The Heir, Beware".','https://image.tmdb.org/t/p/original/sdEOH0992YZ0QSxgXNIGLq1ToUi.jpg','https://image.tmdb.org/t/p/original/yHzyPJrVqlTySQ9mc379yxrLBYQ.jpg','Won 1 BAFTA Award14 wins & 50 nominations total','$262,641,637','PG')
,('Harry Potter and the Prisoner of Azkaban','31 May 2004','7.9','142 minutes','English, Latin, Old English','Movie','Harry Potter (Daniel Radcliffe) is having a tough time with his relatives (yet again). He runs away after using magic to inflate Uncle Vernon''s (Richard Griffiths'') sister Marge (Pam Ferris), who was being offensive towards Harry''s parents. Initially scared for using magic outside the school, he is pleasantly surprised that he won''t be penalized after all. However, he soon learns that a dangerous criminal and Voldemort''s trusted aide Sirius Black (Gary Oldman) has escaped from Azkaban Prison and wants to kill Harry to avenge the Dark Lord. To worsen the conditions for Harry, vile creatures called Dementors are appointed to guard the school gates and inexplicably happen to have the most horrible effect on him. Little does Harry know that by the end of this year, many holes in his past (whatever he knows of it) will be filled up and he will have a clearer vision of what the future has in store.','https://image.tmdb.org/t/p/original/aWxwnYoe8p2d2fcxOqtvAtJ72Rw.jpg','https://image.tmdb.org/t/p/original/vbk5CfaAHOjQPSAcYm6AoRRz2Af.jpg','Nominated for 2 Oscars. 17 wins & 56 nominations total','$250,105,651','PG')
,('Harry Potter and the Goblet of Fire','16 Nov 2005','7.7','157 minutes','English, French, Latin','Movie','Harry''s (Daniel Radcliffe''s) fourth year at Hogwarts is about to start and he is enjoying the summer vacation with his friends. They get the tickets to The Quidditch World Cup Final, but after the match is over, people dressed like Lord Voldemort''s (Ralph Fiennes'') "Death Eaters" set a fire to all of the visitors'' tents, coupled with the appearance of Voldemort''s symbol, the "Dark Mark" in the sky, which causes a frenzy across the magical community. That same year, Hogwarts is hosting "The Triwizard Tournament", a magical tournament between three well-known schools of magic : Hogwarts, Beauxbatons, and Durmstrang. The contestants have to be above the age of seventeen, and are chosen by a magical object called "The Goblet of Fire". On the night of selection, however, the Goblet spews out four names instead of the usual three, with Harry unwittingly being selected as the Fourth Champion. Since the magic cannot be reversed, Harry is forced to go with it and brave three exceedingly difficult tasks.','https://image.tmdb.org/t/p/original/fECBtHlr0RB3foNHDiCBXeg9Bv9.jpg','https://image.tmdb.org/t/p/original/5rrGVmRUuCKVbqUu41XIWTXJmNA.jpg','Nominated for 1 Oscar. 13 wins & 48 nominations total','$290,469,928','PG-13')
,('Harry Potter and the Order of the Phoenix','14 Oct 2007','7.5','138 minutes','English, Latin','Movie','After a lonely summer on Privet Drive, Harry (Daniel Radcliffe) returns to a Hogwarts full of ill-fortune. Few of students and parents believe him or Dumbledore (Sir Michael Gambon) that Voldemort (Ralph Fiennes) is really back. The ministry had decided to step in by appointing a new Defense Against the Dark Arts teacher, Professor Dolores Umbridge (Imelda Staunton), who proves to be the nastiest person Harry has ever encountered. Harry also can''t help stealing glances with the beautiful Cho Chang (Katie Leung). To top it off are dreams that Harry can''t explain, and a mystery behind something for which Voldemort is searching. With these many things, Harry begins one of his toughest years at Hogwarts School of Witchcraft and Wizardry.','https://image.tmdb.org/t/p/original/5aOyriWkPec0zUDxmHFP9qMmBaj.jpg','https://image.tmdb.org/t/p/original/82a7AGF081PzFfoM8GAVGMvZNYK.jpg','Nominated for 2 BAFTA 17 wins & 50 nominations total','$292,382,727','PG-13')
,('Harry Potter and the Half-Blood Prince','15 Jul 2009','7.6','153 minutes','English, Latin','Movie','During Harry Potter''s sixth year at Hogwarts, he finds a book that once belonged to the mysterious Half-Blood Prince that earns him the respect of his new Potions professor Horace Slughorn. In addition, Dumbledore must prepare Harry for the ultimate final confrontation by finding out the secret behind Voldemort''s power. Meanwhile, a hidden enemy waits in the shadows to carry out a mission given to him by the Dark Lord.','https://image.tmdb.org/t/p/original/z7uo9zmQdQwU5ZJHFpv2Upl30i1.jpg','https://image.tmdb.org/t/p/original/urDWNffjwmNi5IQaezw9GwqkUXa.jpg','Nominated for 1 Oscar. 9 wins & 39 nominations total','$302,334,374','PG')
,('Harry Potter and the Deathly Hallows: Part 1','17 Nov 2010','7.7','146 minutes','English, Latin','Movie','Voldemort''s (Ralph Fiennes) power is growing stronger. He now has control over the Ministry of Magic and Hogwarts. Harry (Daniel Radcliffe), Ron (Rupert Grint), and Hermione (Emma Watson) decide to finish Dumbledore''s (Sir Michael Gambon''s) work and find the rest of the Horcruxes to defeat the Dark Lord. But little hope remains for the trio and the rest of the Wizarding World, so everything they do must go as planned.','https://image.tmdb.org/t/p/original/iGoXIpQb7Pot00EEdwpwPajheZ5.jpg','https://image.tmdb.org/t/p/original/AqLcLsGGTzAjm3pCCq0CZCQrp6m.jpg','Nominated for 2 Oscars. 15 wins & 55 nominations total','$296,374,621','PG-13')
,('Harry Potter and the Deathly Hallows: Part 2','22 Jul 2011','8.1','130 minutes','English, Latin','Movie','Harry (Daniel Radcliffe), Ron (Rupert Grint), and Hermione (Emma Watson) continue their quest of finding and destroying Voldemort''s (Ralph Fiennes'') three remaining Horcruxes, the magical items responsible for his immortality. But as the mystical Deathly Hallows are uncovered, and Voldemort finds out about their mission, the biggest battle begins, and life as they know it will never be the same again.','https://image.tmdb.org/t/p/original/c54HpQmuwXjHq2C9wmoACjxoom3.jpg','https://image.tmdb.org/t/p/original/n5A7brJCjejceZmHyujwUTVgQNC.jpg','Nominated for 3 Oscars. 49 wins & 95 nominations total','$381,447,587','PG-13')
,('Fantastic Beasts and Where to Find Them','25 Nov 2016','7.2','132 minutes','English, Khmer','Movie','New York City, 1926. Newt Scamander, a young and passionate British activist wizard, arrives in the city holding a mysterious leather suitcase: the home to a fascinating collection of magical creatures. But dark forces stir in the shadows, threatening a fragile equilibrium. When the precious suitcase disappears, Newt is thrown into a world of chaos and intrigue, as the malevolent actions of infamous wizard Gellert Grindelwald cause untold destruction on the busy 5th Avenue. Now, the stakes are higher than ever before. With the mystical animals still on the loose and the city''s fate hanging by a thread, who knows what will happen to the wizarding and non-magic worlds and Newt''s fantastic beasts?','https://image.tmdb.org/t/p/original/fLsaFKExQt05yqjoAvKsmOMYvJR.jpg','https://image.tmdb.org/t/p/original/8Qsr8pvDL3s1jNZQ4HK1d1Xlvnh.jpg','Won 1 Oscar. 15 wins & 54 nominations total','$234,037,575','PG-13')
,('Fantastic Beasts: The Crimes of Grindelwald','14 Nov 2018','6.5','134 minutes','English, French','Movie','In an effort to thwart Grindelwald''s plans of raising pure-blood wizards to rule over all non-magical beings, Albus Dumbledore enlists his former student Newt Scamander, who agrees to help, though he''s unaware of the dangers that lie ahead. Lines are drawn as love and loyalty are tested, even among the truest friends and family, in an increasingly divided wizarding world.','https://image.tmdb.org/t/p/original/fMMrl8fD9gRCFJvsx0SuFwkEOop.jpg','https://image.tmdb.org/t/p/original/qrtRKRzoNkf5vemO9tJ2Y4DrHxQ.jpg','Nominated for 2 BAFTA 3 wins & 22 nominations total','$159,555,901','PG-13')
,('Fantastic Beasts: The Secrets of Dumbledore','06 Apr 2022','6.2','142 minutes','English, German, Latin','Movie','Professor Albus Dumbledore knows the powerful Dark wizard Gellert Grindelwald is moving to seize control of the wizarding world. Unable to stop him alone, he entrusts Magizoologist Newt Scamander to lead an intrepid team of wizards, witches and one brave Muggle baker on a dangerous mission, where they encounter old and new beasts and clash with Grindelwald''s growing legion of followers. But with the stakes so high, how long can Dumbledore remain on the sidelines?','https://image.tmdb.org/t/p/original/3c5GNLB4yRSLBby0trHoA1DSQxQ.jpg','https://image.tmdb.org/t/p/original/zGLHX92Gk96O1DJvLil7ObJTbaL.jpg','7 nominations total','$95,850,844','PG-13')
,('The Lord of the Rings: The Fellowship of the Ring','19 Dec 2001','8.9','178 minutes','English, Sindarin','Movie','An ancient Ring thought lost for centuries has been found, and through a strange twist of fate has been given to a small Hobbit named Frodo. When Gandalf discovers the Ring is in fact the One Ring of the Dark Lord Sauron, Frodo must make an epic quest to Mount Doom in order to destroy it. However, he does not go alone. He is joined by Gandalf, Legolas the elf, Gimli the Dwarf, Aragorn, Boromir, and his three Hobbit friends Merry, Pippin, and Samwise. Through mountains, snow, darkness, forests, rivers and plains, facing evil and danger at every corner the Fellowship of the Ring must go. Their quest to destroy the One Ring is the only hope for the end of the Dark Lords reign.','https://image.tmdb.org/t/p/original/6oom5QYQ2yQTMJIbnvbkBL9cHo6.jpg','https://image.tmdb.org/t/p/original/x2RS3uTcsJJ9IfjNPcgDmukoEcQ.jpg','Won 4 Oscars. 125 wins & 126 nominations total','$319,372,078','PG-13')
,('The Lord of the Rings: The Two Towers','18 Dec 2002','8.8','179 minutes','English, Sindarin, Old English','Movie','The continuing quest of Frodo and the Fellowship to destroy the One Ring. Frodo and Sam discover they are being followed by the mysterious Gollum. Aragorn, the Elf archer Legolas, and Gimli the Dwarf encounter the besieged Rohan kingdom, whose once great King Theoden has fallen under Saruman''s deadly spell.','https://image.tmdb.org/t/p/original/5VTN0pR8gcqV3EPUHHfMGnJYN9L.jpg','https://image.tmdb.org/t/p/original/jfEOzpsjc6JDlKhUHb4toWQPt.jpg','Won 2 Oscars. 132 wins & 138 nominations total','$345,518,923','PG-13')
,('The Lord of the Rings: The Return of the King','17 Dec 2003','9','201 minutes','English, Quenya, Old English, Sindarin','Movie','The final confrontation between the forces of good and evil fighting for control of the future of Middle-earth. Frodo and Sam reach Mordor in their quest to destroy the One Ring, while Aragorn leads the forces of good against Sauron''s evil army at the stone city of Minas Tirith.','https://image.tmdb.org/t/p/original/rCzpDGLbOoPwLjy3OAm5NUPOTrC.jpg','https://image.tmdb.org/t/p/original/2u7zbn8EudG6kLlBzUYqP8RyFU4.jpg','Won 11 Oscars. 215 wins & 124 nominations total','$381,878,219','PG-13')
,('The Hobbit: An Unexpected Journey','28 Dec 2012','7.8','169 minutes','English','Movie','Bilbo Baggins is swept into a quest to reclaim the lost Dwarf Kingdom of Erebor from the fearsome dragon Smaug. Approached out of the blue by the wizard Gandalf the Grey, Bilbo finds himself joining a company of thirteen dwarves led by the legendary warrior, Thorin Oakenshield. Their journey will take them into the Wild; through treacherous lands swarming with Goblins and Orcs, deadly Wargs and Giant Spiders, Shapeshifters and Sorcerers. Although their goal lies to the East and the wastelands of the Lonely Mountain first they must escape the goblin tunnels, where Bilbo meets the creature that will change his life forever ... Gollum. Here, alone with Gollum, on the shores of an underground lake, the unassuming Bilbo Baggins not only discovers depths of guile and courage that surprise even him, he also gains possession of Gollum''s "precious" ring that holds unexpected and useful qualities ... A simple, gold ring that is tied to the fate of all Middle-earth in ways Bilbo cannot begin to know.','https://image.tmdb.org/t/p/original/yHA9Fc37VmpUA5UncTxxo3rTGVA.jpg','https://image.tmdb.org/t/p/original/xyXmtuvsoM5J3yNad0nvcetpBdY.jpg','Nominated for 3 Oscars. 11 wins & 76 nominations total','$303,030,651','PG-13')
,('The Hobbit: The Desolation of Smaug','27 Dec 2013','7.8','161 minutes','English','Movie','After successfully crossing over (and under) the Misty Mountains, Thorin and Company must seek aid from a powerful stranger before taking on the dangers of Mirkwood Forest--without their Wizard. If they reach the human settlement of Lake-town it will be time for the hobbit Bilbo Baggins to fulfill his contract with the dwarves. The party must complete the journey to Lonely Mountain and burglar Baggins must seek out the Secret Door that will give them access to the hoard of the dragon Smaug. And, where has Gandalf got off to? And what is his secret business to the south?','https://image.tmdb.org/t/p/original/xQYiXsheRCDBA39DOrmaw1aSpbk.jpg','https://image.tmdb.org/t/p/original/npCPnwDyWfQltGfIZKN6WqeUXGI.jpg','Nominated for 3 Oscars. 19 wins & 91 nominations total','$258,387,334','PG-13')
,('The Hobbit: The Battle of the Five Armies','19 Dec 2014','7.4','144 minutes','English','Movie','After the Dragon leaves the Lonely Mountain, the people of Lake-town see a threat coming. Orcs, dwarves, elves and people prepare for war. Bilbo sees Thorin going mad and tries to help. Meanwhile, Gandalf is rescued from the Necromancer''s prison and his rescuers realize who the Necromancer is.','https://image.tmdb.org/t/p/original/xT98tLqatZPQApyRmlPL12LtiWp.jpg','https://image.tmdb.org/t/p/original/zn13a7U9eMTJq8sHthe3bCgsVm4.jpg','Nominated for 1 Oscar. 8 wins & 56 nominations total','$255,138,261','R')
,('Mission: Impossible III','16 Jun 2006','6.9','126 minutes','English, Italian, Mandarin, Cantonese, German, Czech','Movie','A man named Owen Davian kills an IMF agent that was sent undercover by the legendary Ethan Hunt, who has retired from combat missions. Hunt now has a fianc√©, Julia, who believes that he works for the traffic department when he really trains younger IMF agents to go into combat. He is assigned to his last mission. His mission, should he choose to accept it is to capture Davian, who is selling a toxic weapon called the rabbits foot. But Davian is reckless, cruel, and deadly. He promises Hunt that he will find Julia, hurt her, and Ethan will be too dead to help her. The mission is no more different to others, its dangerous, smart, and impossible; but now it''s personal.','https://image.tmdb.org/t/p/original/vKGYCpmQyV9uHybWDzXuII8Los5.jpg','https://image.tmdb.org/t/p/original/mOyF7rHVLF6uLbyb18FWTmcrjJe.jpg','7 wins & 14 nominations total','$134,029,801','PG-13')
,('Mission: Impossible - Ghost Protocol','23 Dec 2011','7.4','132 minutes','English, Russian, French, Arabic, Swedish','Movie','In the fourth installment of the Mission Impossible series, Ethan Hunt and a new team race against time to track down Hendricks, a dangerous terrorist who has gained access to Russian nuclear launch codes and is planning a strike on the United States. An attempt by the team to stop him at the Kremlin ends in a disaster, with an explosion causing severe damage to the Kremlin and the IMF being implicated in the bombing, forcing the President to invoke Ghost Protocol, under which the IMF is disavowed, and will be offered no help or backup in any form. Undaunted, Ethan and his team chase Hendricks to Dubai, and from there to Mumbai, but several spectacular action sequences later, they might still be too late to stop a disaster.','https://image.tmdb.org/t/p/original/eRZTGx7GsiKqPch96k27LK005ZL.jpg','https://image.tmdb.org/t/p/original/ih4lZkUpmSE7AP3maymiO72xJ1z.jpg','5 wins & 30 nominations total','$209,397,903','PG-13')
,('Mission: Impossible - Rogue Nation','31 Jul 2015','7.4','131 minutes','English, Swedish, German, Russian','Movie','CIA chief Hunley (Baldwin) convinces a Senate committee to disband the IMF (Impossible Mission Force), of which Ethan Hunt (Cruise) is a key member. Hunley argues that the IMF is too reckless. Now on his own, Hunt goes after a shadowy and deadly rogue organization called the Syndicate.','https://image.tmdb.org/t/p/original/sGvcWcI99OTXLzghD7qXw00KaY5.jpg','https://image.tmdb.org/t/p/original/39gQ0wzN2N2VPLgwpzr3ebbh0jl.jpg','6 wins & 26 nominations total','$195,042,377','PG-13')
,('Mission: Impossible - Fallout','27 Jul 2018','7.7','147 minutes','English, French','Movie','Two years after Ethan Hunt had successfully captured Solomon Lane, the remnants of the Syndicate have reformed into another organization called the Apostles. Under the leadership of a mysterious fundamentalist known only as John Lark, the organization is planning on acquiring three plutonium cores. Ethan and his team are sent to Berlin to intercept them, but the mission fails when Ethan saves Luther and the Apostles escape with the plutonium. With CIA agent August Walker joining the team, Ethan and his allies must now find the plutonium cores before it''s too late.','https://image.tmdb.org/t/p/original/AkJQpZp9WoNdj7pLYSj1L0RcMMN.jpg','https://image.tmdb.org/t/p/original/aw4FOsWr2FY373nKSxbpNi3fz4F.jpg','Nominated for 1 BAFTA Award26 wins & 41 nominations total','$220,159,104','PG-13')
,('Mission: Impossible - Dead Reckoning Part One','Jul 2023','7.6','163 minutes','English, French, Italian, Russian','Movie','Ethan Hunt and the IMF team must track down a terrifying new weapon that threatens all of humanity if it falls into the wrong hands. With control of the future and the fate of the world at stake, a deadly race around the globe begins. Confronted by a mysterious, all-powerful enemy, Ethan is forced to consider that nothing can matter more than the mission -- not even the lives of those he cares about most.','https://image.tmdb.org/t/p/original/NNxYkU70HPurnNCSiCjYAmacwm.jpg','https://image.tmdb.org/t/p/original/TFTfzrkX8L7bAKUcch6qLmjpLu.jpg','Nominated for 2 Oscars. 18 wins & 67 nominations total','$172,640,980','PG-13')
,('Toy Story','22 Nov 1995','8.3','81 minutes','English','Movie','A little boy named Andy loves to be in his room, playing with his toys, especially his doll named "Woody". But, what do the toys do when Andy is not with them, they come to life. Woody believes that his life (as a toy) is good. However, he must worry about Andy''s family moving, and what Woody does not know is about Andy''s birthday party. Woody does not realize that Andy''s mother gave him an action figure known as Buzz Lightyear, who does not believe that he is a toy, and quickly becomes Andy''s new favorite toy. Woody, who is now consumed with jealousy, tries to get rid of Buzz. Then, both Woody and Buzz are now lost. They must find a way to get back to Andy before he moves without them, but they will have to pass through a ruthless toy killer, Sid Phillips.','https://image.tmdb.org/t/p/original/uXDfjJbdP4ijW5hWSBrPrlKpxab.jpg','https://image.tmdb.org/t/p/original/3Rfvhy1Nl6sSGJwyjb0QiZzZYlB.jpg','Nominated for 3 Oscars. 29 wins & 24 nominations total','$223,225,679','G')
,('Toy Story 2','24 Nov 1999','7.9','92 minutes','English','Movie','While Andy is away at summer camp Woody has been toynapped by Al McWiggin, a greedy collector and proprietor of "Al''s Toy Barn". In this all-out rescue mission, Buzz and his friends Mr. Potato Head, Slinky Dog, Rex and Hamm spring into action to rescue Woody from winding up as a museum piece. They must find a way to save him before he gets sold in Japan forever and they''ll never see him again.','https://image.tmdb.org/t/p/original/yFWQkz2ynjwsazT6xQiIXEUsyuh.jpg','https://image.tmdb.org/t/p/original/tPK1kSevALeVGPfDFv1pwyHnoJ9.jpg','Nominated for 1 Oscar. 21 wins & 27 nominations total','$245,852,179','G')
,('Toy Story 3','22 Oct 2010','8.3','103 minutes','English, Spanish','Movie','Woody, Buzz and the whole gang are back. As their owner Andy prepares to depart for college, his loyal toys find themselves in daycare where untamed tots with their sticky little fingers do not play nice. So, it''s all for one and one for all as they join Barbie''s counterpart Ken, a thespian hedgehog named Mr. Pricklepants and a pink, strawberry-scented teddy bear called Lots-o''-Huggin'' Bear to plan their great escape.','https://image.tmdb.org/t/p/original/AbbXspMOwdvwWZgVN0nabZq03Ec.jpg','https://image.tmdb.org/t/p/original/uAfhsySkr1UzQg1zdg3dZQRz9Fd.jpg','Won 2 Oscars. 63 wins & 96 nominations total','$415,004,880','G')
,('Toy Story 4','28 Jun 2019','7.6','100 minutes','English','Movie','Woody, Buzz Lightyear and the rest of the gang embark on a road trip with Bonnie and a new toy named Forky. The adventurous journey turns into an unexpected reunion as Woody''s slight detour leads him to his long-lost friend Bo Peep. As Woody and Bo discuss the old days, they soon start to realize that they''re two worlds apart when it comes to what they want from life as a toy.','https://image.tmdb.org/t/p/original/w9kR8qbmQ01HwnvK4alvnQ2ca0L.jpg','https://image.tmdb.org/t/p/original/q62bpQ67qaXY0u6b2wFEnQYIbPd.jpg','Won 1 Oscar. 61 wins & 66 nominations total','$434,038,008','G')
,('The Conjuring','18 Jul 2013','7.5','112 minutes','English, Latin','Movie','In 1971, Carolyn and Roger Perron move their family into a dilapidated Rhode Island farm house and soon strange things start happening around it with escalating nightmarish terror. In desperation, Carolyn contacts the noted paranormal investigators, Ed and Lorraine Warren, to examine the house. What the Warrens discover is a whole area steeped in a satanic haunting that is now targeting the Perron family wherever they go. To stop this evil, the Warrens will have to call upon all their skills and spiritual strength to defeat this spectral menace at its source that threatens to destroy everyone involved.','https://image.tmdb.org/t/p/original/wVYREutTvI2tmxr6ujrHT704wGF.jpg','https://image.tmdb.org/t/p/original/mXndmCbpvlqnD6po0EMfxEZcUSn.jpg','15 wins & 22 nominations total','$137,446,368','R')
,('Annabelle: Creation','03 Aug 2017','6.5','109 minutes','English, Spanish','Movie','Doll manufacturer Samuel Mullins is a happy family man with his wife Esther and their daughter Bee--until she dies after being hit by a car. Twelve years later, Samuel and Esther welcomes a nun and six orphaned girls to his home. He tells them that only a locked room (that belonged to Bee) and Esther''s room would be off-limits for the girls. The crippled girl, Janice, manages to sneak into Bee''s room during the night and finds a doll locked inside a closet. After she plays in the room, she is haunted by an evil force. What has Janice unleashed in Bee''s room?','https://image.tmdb.org/t/p/original/tb86j8jVCVsdZnzf8I6cIi65IeM.jpg','https://image.tmdb.org/t/p/original/o8u0NyEigCEaZHBdCYTRfXR8U4i.jpg','1 win & 8 nominations total','$102,092,201','R')
,('Annabelle Comes Home','28 Jun 2019','5.9','106 minutes','English','Movie','Determined to keep Annabelle from wreaking more havoc, demonologists Ed and Lorraine Warren bring the possessed doll to the locked artifacts room in their home, placing her "safely" behind sacred glass and enlisting a priest''s holy blessing. But an unholy night of horror awaits as Annabelle awakens the evil spirits in the room, who all set their sights on a new target--the Warrens'' ten-year-old daughter, Judy, and her friends.','https://image.tmdb.org/t/p/original/qWsHMrbg9DsBY3bCMk9jyYCRVRs.jpg','https://image.tmdb.org/t/p/original/jB98SrdXAYSbiprjIwc7WfVCuCV.jpg','2 nominations total','$74,152,591','R')
,('The Curse of La Llorona','11 Apr 2019','5.3','93 minutes','English, Spanish','Movie','Ignoring the eerie warning of a troubled mother suspected of child endangerment, a social worker and her own small kids are soon drawn into a frightening supernatural realm. Their only hope to survive La Llorona''s deadly wrath may be a disillusioned priest and the mysticism he practices to keep evil at bay, on the fringes where fear and faith collide.','https://image.tmdb.org/t/p/original/hETrPpoKs6BwoilK64YJ7Z5GcRT.jpg','https://image.tmdb.org/t/p/original/9p5BuzUNcvCltQAIiDLILEsH0dk.jpg','1 win & 7 nominations total','$54,733,739','R')
,('The Conjuring: The Devil Made Me Do It','26 May 2021','6.3','112 minutes','English, Latin','Movie','A chilling story of terror, murder and unknown evil that shocked even experienced real-life paranormal investigators Ed and Lorraine Warren. One of the most sensational cases from their files, it starts with a fight for the soul of a young boy, then takes them beyond anything they''d ever seen before, to mark the first time in U.S. history that a murder suspect would claim demonic possession as a defense.','https://image.tmdb.org/t/p/original/xbSuFiJbbBWCkyCCKIMfuDCA4yV.jpg','https://image.tmdb.org/t/p/original/qi6Edc1OPcyENecGtz8TF0DUr9e.jpg',NULL,'$65,631,050','R')
,('The Nun','05 Sep 2018','5.4','96 minutes','English, French, Romanian, Latin','Movie','When a young nun at a cloistered abbey in Romania takes her own life, a priest with a haunted past and a novitiate on the threshold of her final vows are sent by the Vatican to investigate. Together they uncover the order''s unholy secret. Risking not only their lives but their faith and their very souls, they confront a malevolent force in the form of the same demonic nun that first terrorized audiences in ''The Conjuring 2,'' as the abbey becomes a horrific battleground between the living and the damned.','https://image.tmdb.org/t/p/original/sFC1ElvoKGdHJIWRpNB3xWJ9lJA.jpg','https://image.tmdb.org/t/p/original/cMnVmutb5mVgIBeiMOncAbwNjvG.jpg','2 wins & 1 nomination total','$117,481,222','R')
,('The Nun II','06 Sep 2023','5.6','110 minutes','English, French, Italian, Romanian','Movie','A follow-up to the enigmatic gothic horror about a strong evil that haunts and causes supernatural harm to everybody it comes into contact with. After the events of the first film, the said powerful evil now begins to spread in 1956 throughout a town in France as word gets out that a priest has been violently murdered. A finished contemplative in her novitiate, Sister Irene, begins to investigate the murder, only to find a demon behind it -- the same evil that terrorized her in the original film as a nun -- Valak, whom she once again soon comes to encounter.','https://image.tmdb.org/t/p/original/nt5U1MgFcyxCYA6cssNKtnn2FsF.jpg','https://image.tmdb.org/t/p/original/aX3Od8NVLgM7pMYgRpTPkwSrbSC.jpg','1 win & 12 nominations total','$86,267,073','R')
,('The Matrix','31 Mar 1999','8.7','136 minutes','English','Movie','Thomas A. Anderson is a man living two lives. By day he is an average computer programmer and by night a hacker known as Neo. Neo has always questioned his reality, but the truth is far beyond his imagination. Neo finds himself targeted by the police when he is contacted by Morpheus, a legendary computer hacker branded a terrorist by the government. As a rebel against the machines, Neo must confront the agents: super-powerful computer programs devoted to stopping Neo and the entire human rebellion.','https://image.tmdb.org/t/p/original/dXNAPwY7VrqMAo51EKhhCJfaGb5.jpg','https://image.tmdb.org/t/p/original/icmmSD4vTTDKOq2vvdulafOGw93.jpg','Won 4 Oscars. 42 wins & 52 nominations total','$172,076,928','R')
,('The Matrix Reloaded','15 May 2003','7.2','138 minutes','English, French, Italian','Movie','In this second adventure, Neo and the rebel leaders estimate that they have 72 hours until Zion falls under siege to the Machine Army. Only a matter of hours separates the last human enclave on Earth from 250,000 Sentinels programmed to destroy mankind. But the citizens of Zion, emboldened by Morpheus conviction that the One will fulfill the Oracles Prophecy and end the war with the Machines, rest all manner of hope and expectation on Neo, who finds himself stalled by disturbing visions as he searches for a course of action.','https://image.tmdb.org/t/p/original/9TGHDvWrqKBzwDxDodHYXEmOE6J.jpg','https://image.tmdb.org/t/p/original/tva2OlLELCagFynFibcefhn2D9i.jpg','8 wins & 34 nominations total','$281,576,461','R')
,('The Matrix Revolutions','16 Oct 2003','6.7','129 minutes','English, French','Movie','Neo finds himself trapped between the Matrix and the Real World. Meanwhile, Zion is preparing for the oncoming war with the machines with very little chances of survival. Neo''s associates set out to free him from The Merovingian since it''s believed that he is the One who will end the war between humans and the machines. What they do not know is that there is a threat from a third party, someone who has plans to destroy both worlds.','https://image.tmdb.org/t/p/original/t1wm4PgOQ8e4z1C6tk1yDNrps4T.jpg','https://image.tmdb.org/t/p/original/533xAMhhVyjTy8hwMUFEt5TuDfR.jpg','5 wins & 36 nominations total','$139,313,948','R')
,('The Matrix Resurrections','22 Dec 2021','5.6','148 minutes','English, French, Spanish, Japanese','Movie','Suffering from palpable delusions, burnt-out Thomas Anderson, the award-winning creator of The Matrix (1999) video game series, now relies on potent blue pills to keep his inner demons at bay. Then, amid inexplicable, reality-defying visions, Thomas spots Tiffany, a familiar-looking perfect stranger evoking strange emotions, and his already fragile mental state starts to deteriorate. As Mr Anderson yearns for an explanation while teetering on the brink of depression, once more, he confronts a pressing dilemma and the burden of choice. On the one hand, blissful ignorance guarantees the illusion of safety. On the other hand, the unbearable truth of reality can only mean one thing: the elaborate Matrix goes beyond the limits of imagination. But, somehow, Thomas already knows what he has to do. However, does he want to know how deep the rabbit hole goes?','https://image.tmdb.org/t/p/original/8c4a8kE7PizaGQQnditMmI1xbRp.jpg','https://image.tmdb.org/t/p/original/dB0CxRwLXJoOrRPUvsJjb2hnPtq.jpg','Nominated for 1 BAFTA Award7 wins & 38 nominations total','$37,686,805','R')
,('John Wick','07 Nov 2014','7.5','101 minutes','English, Russian, Hungarian','Movie','With the untimely death of his beloved wife still bitter in his mouth, John Wick, the expert former assassin, receives one final gift from her--a precious keepsake to help John find a new meaning in life now that she is gone. But when the arrogant Russian mob prince, Iosef Tarasov, and his men pay Wick a rather unwelcome visit to rob him of his prized 1969 Mustang and his wife''s present, the legendary hitman will be forced to unearth his meticulously concealed identity. Blind with revenge, John will immediately unleash a carefully orchestrated maelstrom of destruction against the sophisticated kingpin, Viggo Tarasov, and his family, who are fully aware of his lethal capacity. Now, only blood can quench the boogeyman''s thirst for retribution.','https://image.tmdb.org/t/p/original/fZPSd91yGE9fCcCe6OoQr6E3Bev.jpg','https://image.tmdb.org/t/p/original/eD7FnB7LLrBV5ewjdGLYTAoV9Mv.jpg','5 wins & 10 nominations total','$43,037,835','R')
,('John Wick: Chapter 2','17 Feb 2017','7.4','122 minutes','English, Italian, Russian, Sign Languages, Hebrew','Movie','Bound by an inescapable blood debt to the Italian crime lord, Santino D''Antonio, and with his precious 1969 Mustang stolen, John Wick--the taciturn and pitiless assassin who thirsts for seclusion--is forced to visit Italy to honour his promise. But, soon, the Bogeyman will find himself dragged into an impossible task in the heart of Rome''s secret criminal society, as every killer in the business dreams of cornering the legendary Wick who now has an enormous price on his head. Drenched in blood and mercilessly hunted down, John Wick can surely forget a peaceful retirement as no one can make it out in one piece.','https://image.tmdb.org/t/p/original/hXWBc0ioZP3cN4zCu6SN3YHXZVO.jpg','https://image.tmdb.org/t/p/original/r17jFHAemzcWPPtoO0UxjIX0xas.jpg','4 wins & 10 nominations total','$92,029,184','R')
,('John Wick: Chapter 3 - Parabellum','05 Jul 2019','7.4','130 minutes','English, Russian, Japanese, Indonesian, Mandarin, Italian, Arabic, Latin','Movie','In this third installment of the adrenaline-fueled action franchise, skilled assassin John Wick (Keanu Reeves) returns with a $14 million price tag on his head and an army of bounty-hunting killers on his trail. After killing a member of the shadowy international assassin''s guild, the High Table, John Wick is excommunicado, but the world''s most ruthless hit men and women await his every turn.','https://image.tmdb.org/t/p/original/ziEuG1essDuWuC5lpWUaw1uXY2O.jpg','https://image.tmdb.org/t/p/original/vVpEOvdxVBP2aV166j5Xlvb5Cdc.jpg','18 wins & 29 nominations total','$171,015,687','R')
,('John Wick: Chapter 4','22 Mar 2023','7.6','169 minutes','English, Japanese, Russian, French, Spanish, German, Latin, Cantonese, Arabic','Movie','Condemned by the tyrannical High Table to be on the run for the rest of his life, deadly assassin maestro John Wick (2014) embarks on a Sisyphean mission of suicidal fury to decide his fate after the merciless carnage in John Wick: Chapter 3 - Parabellum (2019). At last, John''s violent journey, fuelled by vengeance and grief, ultimately leads him to a fateful confrontation with his former employers, the crime masters that forced him into exile. And as the blood-stained vendetta to destroy those who pull the strings continues, old companions face the brutal consequences of friendship, and all-powerful, well-connected adversaries emerge to bring Wick''s head on a platter. But talk is cheap--now guns have the final say. Baba Yaga, the grim messiah of death, must make every bullet count in this bloody, once-and-for-all struggle for freedom.','https://image.tmdb.org/t/p/original/vZloFAK7NmvMGKE7VkF5UHaz0I.jpg','https://image.tmdb.org/t/p/original/7I6VUdPj6tQECNHdviJkUHD2u89.jpg','38 wins & 53 nominations total','$187,131,806','R')
,('The Hunger Games','23 Mar 2012','7.2','142 minutes','English','Movie','In a dystopian future, the totalitarian nation of Panem is divided into 12 districts and the Capitol. Each year two young representatives from each district are selected by lottery to participate in The Hunger Games. Part entertainment, part brutal retribution for a past rebellion, the televised games are broadcast throughout Panem. The 24 participants are forced to eliminate their competitors while the citizens of Panem are required to watch. When 16-year-old Katniss'' young sister, Prim, is selected as District 12''s female representative, Katniss volunteers to take her place. She and her male counterpart, Peeta, are pitted against bigger, stronger representatives, some of whom have trained for this their whole lives.','https://image.tmdb.org/t/p/original/yXCbOiVDCxO71zI7cuwBRXdftq8.jpg','https://image.tmdb.org/t/p/original/p2i9vE7mu2ZTmwYbEiimgHeKpq5.jpg','Won 1 BAFTA Award34 wins & 49 nominations total','$408,010,692','PG-13')
,('The Hunger Games: Catching Fire','22 Nov 2013','7.5','146 minutes','English','Movie','Twelve months after winning the 74th Hunger Games, Katniss Everdeen and her partner Peeta Mellark must go on what is known as the Victor''s Tour, wherein they visit all the districts, but before leaving, Katniss is visited by President Snow who fears that Katniss defied him a year ago during the games when she chose to die with Peeta. With both Katniss and Peeta declared the winners, it is fueling a possible uprising. He tells Katniss that while on tour she better try to make sure that she puts out the flames or else everyone she cares about will be in danger.','https://image.tmdb.org/t/p/original/qdXXEFGuLLfMWa1DGEkWFUo8Zwd.jpg','https://image.tmdb.org/t/p/original/14FK4FjArsTdpmbqwlROrWA4Npl.jpg','22 wins & 68 nominations total','$424,668,047','PG-13')
,('The Hunger Games: Mockingjay - Part 1','21 Nov 2014','6.6','123 minutes','English','Movie','With the Games destroyed, Katniss Everdeen, along with Gale, Finnick and Beetee, end up in the so thought "destroyed" District 13. Under the leadership of President Coin and the advice of her friends, Katniss becomes the "Mockingjay", the symbol of rebellion for the districts of Panem.','https://image.tmdb.org/t/p/original/2hTPkBiXoMmrdtYgHtB9WU5dg80.jpg','https://image.tmdb.org/t/p/original/qvo0g1yeQnYoCcXctSHI4mkoFMc.jpg','21 wins & 32 nominations total','$337,135,885','PG-13')
,('The Hunger Games: Mockingjay - Part 2','20 Nov 2015','6.6','137 minutes','English','Movie','After young Katniss Everdeen agrees to be the symbol of rebellion, the Mockingjay, she tries to return Peeta to his normal state, tries to get to the Capitol, and tries to deal with the battles coming her way...but all for her main goal: assassinating President Snow and returning peace to the Districts of Panem. As her squad starts to get smaller and smaller, will she make it to the Capitol? Will she get revenge on Snow or will her target change? Will she be with her "Star-Crossed Lover," Peeta, or her long-time friend, Gale? Deaths, bombs, bow and arrows, a love triangle, hope... What will happen?','https://image.tmdb.org/t/p/original/7uLJCuK0ufoDklUdOORC8XanOKw.jpg','https://image.tmdb.org/t/p/original/9zWWAL8LciOBXvAArLn9mtGvRzQ.jpg','15 wins & 34 nominations total','$281,723,902','PG-13')
,('The Hunger Games: The Ballad of Songbirds & Snakes','15 Nov 2023','6.7','157 minutes','English','Movie','The story of Coriolanus Snow, years before he would become the tyrannical President of Panem. He is young, very determined and though the Snow family has fallen on hard times, Coriolanus sees a chance for a change in his fortunes when he is chosen to be a mentor for the 10th Hunger Games only to have his elation dashed when he is assigned to mentor a girl tribute named Lucy Gray Baird from the impoverished District 12.','https://image.tmdb.org/t/p/original/lrkOYL5GBTFW9cgs9RlojxAcZZF.jpg','https://image.tmdb.org/t/p/original/yfQXs8yXplCVXTLi9mxgvRf4ymE.jpg','7 wins & 27 nominations total','$166,350,594','PG-13')
,('Star Wars: Episode V - The Empire Strikes Back','21 May 1980','8.7','124 minutes','English','Movie','The legendary saga continues as the Rebel Alliance faces increasing challenges from the mighty Galactic Empire. Luke Skywalker, Han Solo, and Princess Leia Organa confront new trials that test their courage, friendships, and beliefs. The Rebel Alliance has established a hidden base on the icy planet of Hoth, where they hope to regroup and plan their next moves against the Empire. Luke Skywalker receives a message from a familiar source, prompting him to seek further guidance in understanding his connection to the Force. Han Solo and Princess Leia''s journey takes them on a dangerous path as they navigate a galaxy under Imperial control. Their actions and decisions lead to unforeseen consequences that will impact the fate of the Rebellion. Meanwhile, the dark presence of Darth Vader looms as he relentlessly pursues the Rebels while dealing with inner conflicts of his own.','https://image.tmdb.org/t/p/original/nNAeTmF4CtdSgMDplXTDPOpYzsX.jpg','https://image.tmdb.org/t/p/original/dMZxEdrWIzUmUoOz2zvmFuutbj7.jpg','Won 1 Oscar. 27 wins & 20 nominations total','$292,753,960','PG')
,('Star Wars: Episode VI - Return of the Jedi','25 May 1983','8.3','131 minutes','English, Kikuyu, Tagalog, Kalmyk-Oirat, Quechua, Polish','Movie','Luke Skywalker (Mark Hamill) battles horrible Jabba the Hut and cruel Darth Vader to save his comrades in the Rebel Alliance and triumph over the Galactic Empire. Han Solo (Harrison Ford) and Princess Leia (Carrie Fisher) reaffirm their love and team with Chewbacca, Lando Calrissian (Billy Dee Williams), the Ewoks and the androids C-3PO and R2-D2 to aid in the disruption of the Dark Side and the defeat of the evil emperor.','https://image.tmdb.org/t/p/original/jQYlydvHm3kUix1f8prMucrplhm.jpg','https://image.tmdb.org/t/p/original/r2IOBOeg5wLfLtyOnT5Pur6Tl4q.jpg','Nominated for 4 Oscars. 25 wins & 23 nominations total','$316,566,101','PG')
,('Star Wars: Episode I - The Phantom Menace','19 May 1999','6.5','136 minutes','English, Sanskrit','Movie','When the Trade Federation organize a blockade around the planet Naboo, the Supreme Chancellor Valorum sends the Jedi Qui-Gon Jinn and Obi-Wan Kenobi to negotiate the end of the blockade. However the evil Viceroy Nute Gunray is ordered to kill the Jedi and invade Naboo. However the Jedi escape and Qui-Gon saves the life of the clumsy Gungan Jar Jar Binks. The outcast native takes the Jedi to his submerged city and the Gungan leader gives transportation to them. The Jedi head to the capital to warn Queen Amidala about the invasion. However she has been captured by the Federation droids but the Jedi rescue the queen and her court and they flee in a spacecraft that is damaged when they cross the blockade. They land on a desert planet and Qui-Gon Jinn goes to the town with Jar Jar, the droid R2-D2 and the queen''s assistant Padm√© to seek the necessary part for the spacecraft. When they find the component, they do not have money to buy it. But the slave boy Anakin Skywalker offers to dispute a race with his pod to raise the necessary money. Qui-Gon feels the Force in the boy and accepts his offer. Will the boy win the race? What will happen to Naboo? Will Queen Amidala be capable to convince the politicians to release her planet from the Trade Federation?','https://image.tmdb.org/t/p/original/6wkfovpn7Eq8dYNKaG5PY3q2oq6.jpg','https://image.tmdb.org/t/p/original/aTXhYyxx23AGWAqrkrs1fNGhgSO.jpg','Nominated for 3 Oscars. 28 wins & 71 nominations total','$487,576,624','PG')
,('Star Wars: Episode II - Attack of the Clones','16 May 2002','6.6','142 minutes','English','Movie','Ten years after the invasion of Naboo, the Galactic Republic is facing a Separatist movement and the former queen and now Senator Padm√© Amidala travels to Coruscant to vote on a project to create an army to help the Jedi to protect the Republic. Upon arrival, she escapes from an attempt to kill her, and Obi-Wan Kenobi and his Padawan Anakin Skywalker are assigned to protect her. They chase the shape-shifter Zam Wessell but she is killed by a poisoned dart before revealing who hired her. The Jedi Council assigns Obi-Wan Kenobi to discover who has tried to kill Amidala and Anakin to protect her in Naboo. Obi-Wan discovers that the dart is from the planet Kamino, and he heads to the remote planet. He finds an army of clones that has been under production for years for the Republic and that the bounty hunter Jango Fett was the matrix for the clones. Meanwhile Anakin and Amidala fall in love with each other, and he has nightmarish visions of his mother. They travel to his home planet, Tatooine, to see his mother, and he discovers that she has been abducted by Tusken Raiders. Anakin finds his mother dying, and he kills all the Tusken tribe, including the women and children. Obi-Wan follows Jango Fett to the planet Geonosis where he discovers who is behind the Separatist movement. He transmits his discoveries to Anakin since he cannot reach the Jedi Council. Who is the leader of the Separatist movement? Will Anakin receive Obi-Wan''s message? And will the secret love between Anakin and Amidala succeed?','https://image.tmdb.org/t/p/original/oZNPzxqM2s5DyVWab09NTQScDQt.jpg','https://image.tmdb.org/t/p/original/1uQSh7P3k0oRbRf0vH8GVt4thpP.jpg','Nominated for 1 Oscar. 21 wins & 71 nominations total','$310,676,740','PG')
,('Star Wars: Episode III - Revenge of the Sith','17 May 2005','7.6','140 minutes','English','Movie','Nearly three years have passed since the beginning of the Clone Wars. The Republic, with the help of the Jedi, take on Count Dooku and the Separatists. With a new threat rising, the Jedi Council sends Obi-Wan Kenobi and Anakin Skywalker to aid the captured Chancellor. Anakin feels he is ready to be promoted to Jedi Master. Obi-Wan is hunting down the Separatist General, Grievous. When Anakin has future visions of pain and suffering coming Padm√©''s way, he sees Master Yoda for counsel. When Darth Sidious executes Order 66, it destroys most of all the Jedi have built. Experience the birth of Darth Vader. Feel the betrayal that leads to hatred between two brothers. And witness the power of hope.','https://image.tmdb.org/t/p/original/xfSAoBEm9MNBjmlNcDYLvLSMlnq.jpg','https://image.tmdb.org/t/p/original/5vDuLrjJXFS9PTF7Q1xzobmYKR9.jpg','Nominated for 1 Oscar. 29 wins & 64 nominations total','$380,270,577','PG-13')
,('Star Wars: Episode VII - The Force Awakens','25 Dec 2015','7.8','138 minutes','English','Movie','30 years after the defeat of Darth Vader and the Empire, Rey, a scavenger from the planet Jakku, finds a BB-8 droid that knows the whereabouts of the long lost Luke Skywalker. Rey, as well as a rogue stormtrooper and two smugglers, are thrown into the middle of a battle between the Resistance and the daunting legions of the First Order.','https://image.tmdb.org/t/p/original/wqnLdwVXoBjKibFRR5U3y0aDUhs.jpg','https://image.tmdb.org/t/p/original/k6EOrckWFuz7I4z4wiRwz8zsj4H.jpg','Nominated for 5 Oscars. 64 wins & 140 nominations total','$936,662,225','PG-13')
,('Star Wars: Episode VIII - The Last Jedi','15 Dec 2017','6.9','152 minutes','English','Movie','Jedi Master-in-hiding Luke Skywalker unwillingly attempts to guide young hopeful Rey in the ways of the force, while Leia, former princess turned general, attempts to lead what is left of the Resistance away from the ruthless tyrannical grip of the First Order.','https://image.tmdb.org/t/p/original/kOVEVeg59E0wsnXmF9nrh6OmWII.jpg','https://image.tmdb.org/t/p/original/5Iw7zQTHVRBOYpA0V6z0yypOPZh.jpg','Nominated for 4 Oscars. 26 wins & 99 nominations total','$620,181,382','PG-13')
,('Star Wars: Episode IX - The Rise of Skywalker','18 Dec 2019','6.4','141 minutes','English','Movie','While the First Order continues to ravage the galaxy, Rey finalizes her training as a Jedi. But danger suddenly rises from the ashes as the evil Emperor Palpatine mysteriously returns from the dead. While working with Finn and Poe Dameron to fulfill a new mission, Rey will not only face Kylo Ren once more, but she will also finally discover the truth about her parents as well as a deadly secret that could determine her future and the fate of the ultimate final showdown that is to come.','https://image.tmdb.org/t/p/original/db32LaOibwEliAmSL2jjDF6oDdj.jpg','https://image.tmdb.org/t/p/original/auJKGst3vXpJozHZh4nMFs0xWIU.jpg','Nominated for 3 Oscars. 23 wins & 58 nominations total','$515,202,542','PG-13')
,('Rogue One: A Star Wars Story',NULL,'8',NULL,'English','Movie','Galen Erso is an esteemed scientist of the newly established Galactic Empire. His genius was crucial to the technological development of the Death Star. Although he is an opponent of the Empire, he sees no other option than to cooperate. He still sees an opportunity to sabotage the Empire''s plans and make his actions known to the resistance. A wayward group of rebels tries to carry out a desperate mission. He wants to steal the plans for Star of Death before it can be used to enforce the Emperor''s rule.',NULL,NULL,'Nominated for 2 Oscars. 24 wins & 85 nominations total','$533,539,991','PG-13')
,('Solo: A Star Wars Story','25 May 2018','6.9','135 minutes','English','Movie','With the emerging demand of hyperfuel and other resources, Han Solo finds himself in the middle of a heist alongside other criminals, where they meet the likes of Chewbacca and Lando Calrissian in an adventurous situation exposing the criminal underworld.','https://image.tmdb.org/t/p/original/4oD6VEccFkorEBTEDXtpLAaz0Rl.jpg','https://image.tmdb.org/t/p/original/ojHCeDULAkQK25700fhRU75Tur2.jpg','Nominated for 1 Oscar. 6 wins & 28 nominations total','$213,767,512','PG-13')
,('Despicable Me 4','20 Jun 2024','6.2','94 minutes','English, French','Movie','Gru and Lucy are overjoyed as they welcome their newest family member, Gru Jr. However, their happiness is short-lived when a new villain, the cunning Maxime Le Mal, emerges. With their family in danger, Gru and his team must utilize their wit and skills to outsmart the villain and protect their loved ones.','https://image.tmdb.org/t/p/original/wWba3TaojhK7NdycRhoQpsG0FaH.jpg','https://image.tmdb.org/t/p/original/lgkPzcOSnTvjeMnuFzozRO5HHw1.jpg','2 wins & 3 nominations total','$361,004,205','PG')
,('Despicable Me 2','16 Aug 2013','7.3','98 minutes','English, Ukrainian','Movie','While Gru, the ex-supervillain is adjusting to family life and an attempted honest living in the jam business, a secret Arctic laboratory is stolen. The Anti-Villain League decides it needs an insider''s help and recruits Gru in the investigation. Together with the eccentric AVL agent, Lucy Wilde, Gru concludes that his prime suspect is the presumed dead supervillain, El Macho, whose his teenage son is also making the moves on his eldest daughter, Margo. Seemingly blinded by his overprotectiveness of his children and his growing mutual attraction to Lucy, Gru seems on the wrong track even as his minions are being quietly kidnapped en masse for some malevolent purpose.','https://image.tmdb.org/t/p/original/oyMPJJZoOpLHgJoFPUOn6DgkbWJ.jpg','https://image.tmdb.org/t/p/original/fOipappvgVtUbbHOtmCkHzcwJjC.jpg','Nominated for 2 Oscars. 12 wins & 66 nominations total','$368,065,385','PG')
,('Minions','10 Jul 2015','6.4','91 minutes','English, Spanish, Italian','Movie','Ever since the dawn of time, the Minions have lived to serve the most despicable of masters. From the T-Rex to Napoleon, the easily distracted tribe has helped the biggest and the baddest of villains. Now, join protective leader Kevin, teenage rebel Stuart, and lovable little Bob on a global road trip. They''ll earn a shot to work for a new boss, the world''s first female supervillain, and try to save all of Minionkind from annihilation.','https://image.tmdb.org/t/p/original/dr02BdCNAUPVU07aOodwPYv6HCf.jpg','https://image.tmdb.org/t/p/original/wKrxeY6lbu7KFBsWVcMH6M8avwr.jpg','Nominated for 1 BAFTA Award4 wins & 29 nominations total','$336,045,770','PG')
,('Despicable Me 3','14 Jun 2017','6.3','89 minutes','English','Movie','After he is fired from the Anti-Villain League for failing to take down the latest bad guy to threaten humanity, Gru (Steve Carell) finds himself in the midst of a major identity crisis. But when a mysterious stranger shows up to inform Gru that he has a long-lost twin brother - a brother who desperately wishes to follow in his twin''s despicable footsteps - one former supervillain will rediscover just how good it feels to be bad.','https://image.tmdb.org/t/p/original/6t3YWl7hrr88lCEFlGVqW5yV99R.jpg','https://image.tmdb.org/t/p/original/ftRkFtAGuHngHnLiOxktq0aCVMF.jpg','33 nominations total','$264,624,300','PG')
,('Minions: The Rise of Gru','16 Jun 2022','6.5','87 minutes','English, Vietnamese','Movie','In the heart of the 1970s, amidst a flurry of feathered hair and flared jeans, Gru (Steve Carell) is growing up in the suburbs. A fanboy of a supervillain supergroup known as the Vicious 6, Gru hatches a plan to become evil enough to join them. Luckily, he gets some mayhem-making back-up from his loyal followers, the Minions. Together, Kevin, Stuart, Bob, and Otto - a new Minion sporting braces and a desperate need to please - deploy their skills as they and Gru build their first lair, experiment with their first weapons, and pull off their first missions. When the Vicious 6 oust their leader, legendary fighter Wild Knuckles (Alan Arkin), Gru interviews to become their newest member. It doesn''t go well (to say the least), and only gets worse after Gru outsmarts them and suddenly finds himself the mortal enemy of the apex of evil. On the run, Gru will turn to an unlikely source for guidance, Wild Knuckles, and discover that even bad guys need a little help from their friends.','https://image.tmdb.org/t/p/original/wKiOkZTN9lUUUNZLmtnwubZYONg.jpg','https://image.tmdb.org/t/p/original/9dfHalOBi4fj2GY2YW9H7IuyaXC.jpg','1 win & 19 nominations total','$370,549,695','PG')
,('Shrek','15 Jun 2001','7.9','90 minutes','English','Movie','When a green ogre named Shrek discovers his swamp has been ''swamped'' with all sorts of fairytale creatures by the scheming Lord Farquaad, Shrek sets out with a very loud donkey by his side to ''persuade'' Farquaad to give Shrek his swamp back. Instead, a deal is made. Farquaad, who wants to become the King, sends Shrek to rescue Princess Fiona, who is awaiting her true love in a tower guarded by a fire-breathing dragon. But once they head back with Fiona, it starts to become apparent that not only does Shrek, an ugly ogre, begin to fall in love with the lovely princess, but Fiona is also hiding a huge secret.','https://image.tmdb.org/t/p/original/EKERKucZeBrkrR8xLDTkr5FeDc.jpg','https://image.tmdb.org/t/p/original/sRvXNDItGlWCqtO3j6wks52FmbD.jpg','Won 1 Oscar. 40 wins & 60 nominations total','$268,698,241','PG')
,('Shrek 2','19 May 2004','7.4','93 minutes','English','Movie','Shrek (Mike Myers) has rescued Princess Fiona (Cameron Diaz), got married, and now is time to meet the parents. Shrek, Fiona, and Donkey (Eddie Murphy) set off to Far, Far Away to meet Fiona''s mother and father. But not everyone is happy. Shrek and King Harold (John Cleese) find it hard to get along, and there''s tension in the marriage. It''s not just the family who are unhappy. Prince Charming (Rupert Everett) returns from a failed attempt at rescuing Fiona, and works alongside his mother, the Fairy Godmother (Jennifer Saunders), to try and find a way to get Shrek away from Fiona.','https://image.tmdb.org/t/p/original/2yYP0PQjG8zVqturh1BAqu2Tixl.jpg','https://image.tmdb.org/t/p/original/iaNoLnnpQb5SNxGc4bkQmdCvEdG.jpg','Nominated for 2 Oscars. 18 wins & 52 nominations total','$444,978,202','PG')
,('Shrek Forever After','27 May 2010','6.3','93 minutes','English','Movie','The once hideous ogre Shrek (Mike Myers) is now living a good life with wife Fiona (Cameron Diaz) and his three children. But he soon has a meltdown in front of them and his friends during his kids'' birthday party. He suddenly wants to be a real ogre like he was before he ever met Fiona. So he turns to devious dealmaker Rumpelstiltskin (Walt Dohrn) for help. At first, Shrek lives the life he once lost and everything is good. But he soon finds out that he has been set up by Rumpelstiltskin, who now rules the land with an iron fist. Teaming with friends Donkey (Eddie Murphy), Fiona, and Puss in Boots (Antonio Banderas), Shrek is in for the fight of his life as he tries to get his life back before time runs out.','https://image.tmdb.org/t/p/original/6HrfPZtKcGmX2tUWW3cnciZTaSD.jpg','https://image.tmdb.org/t/p/original/gVl6aX2paJIHpMxAAe8X36VNExi.jpg','1 win & 13 nominations total','$238,736,787','PG')
,('Puss in Boots: The Last Wish','23 Dec 2022','7.8','102 minutes','English, Spanish','Movie','Sadly, Puss in Boots, the undaunted Spanish lover and hero, is now down to the last of his nine lives, a decade after the events of Puss in Boots (2011). And as if that weren''t enough, the unstoppable bounty hunter known as The Big Bad Wolf is after him. To restore all of his precious lives and escape an inglorious fate, Puss must pluck up his courage to embark on a dangerous quest into the Dark Forest to find the legendary Wishing Star. However, Puss isn''t the only one seeking the map to the magical star. As the daring outlaw puts his skills to good use to stay one step ahead of formidable adversaries determined to get their hands on it, a crucial question arises: Does he have what it takes to face his most skilled and terrifying opponent and get his life back on track?','https://image.tmdb.org/t/p/original/kuf6dutpsT0vSVehic3EZIqkOBt.jpg','https://image.tmdb.org/t/p/original/jr8tSoJGj33XLgFBy6lmZhpGQNu.jpg','Nominated for 1 Oscar. 8 wins & 58 nominations total','$186,090,535','PG')
,('Casino Royale','15 Dec 2006','8','144 minutes','English, Serbian, German, Italian, French','Movie','James Bond (Daniel Craig) goes on his first mission as a 00. Le Chiffre (Mads Mikkelsen) is a banker to the world''s terrorists. He is participating in a poker game at Montenegro, where he must win back his money, in order to stay safe amongst the terrorist market. The boss of MI6, known simply as "M" (Dame Judi Dench) sends Bond, along with Vesper Lynd (Eva Green) to attend this game and prevent Le Chiffre from winning. Bond, using help from Felix Leiter (Jeffrey Wright), Rene Mathis (Giancarlo Giannini), and having Vesper pose as his partner, enters the most important poker game in his already dangerous career. But if Bond defeats Le Chiffre, will he and Vesper Lynd remain safe?','https://image.tmdb.org/t/p/original/lMrxYKKhd4lqRzwUHAy5gcx9PSO.jpg','https://image.tmdb.org/t/p/original/klJMCIblHLFwCuGjKz7tyOpekIC.jpg','Won 1 BAFTA Award28 wins & 44 nominations total','$167,445,960','PG-13')
,('Quantum of Solace','14 Nov 2008','6.5','106 minutes','English, Spanish, Italian, French, Swiss German, German','Movie','Is there solace in revenge? James Bond and M sniff a shadowy international network of power and corruption reaping billions. As Bond pursues the agents of an assassination attempt on M, all roads lead to Dominic Greene, a world-renowned developer of green technology. Greene, a nasty piece of work, is intent on securing a barren area of Bolivia in exchange for helping a strongman stage a coup there. The C.I.A. looks the other way, and only Bond, with help from a retired spy and a mysterious beauty, stands in Greene''s way. M wonders if she can trust Bond, or if vengeance possesses him. Can anyone drawn to Bond live to tell the tale?','https://image.tmdb.org/t/p/original/e3DXXLJHGqMx9yYpXsql1XNljmM.jpg','https://image.tmdb.org/t/p/original/1tW2fJCE6vb7lAbBMOs3eYMuA7X.jpg','Nominated for 2 BAFTA 4 wins & 32 nominations total','$168,368,427','PG-13')
,('Skyfall','09 Nov 2012','7.8','143 minutes','English, Turkish, Shanghainese, Portuguese, Japanese','Movie','When James Bond''s latest assignment goes gravely wrong and agents around the world are exposed, MI6 is attacked, forcing M to relocate the agency. These events cause her authority and position to be challenged by Gareth Mallory, the new Chairman of the Intelligence and Security Committee. With MI6 now compromised from both inside and out, M is left with one ally she can trust: Bond. 007 takes to the shadows, aided only by field agent, Miss Eve Moneypenny, following a trail to a mysterious enemy, whose lethal and hidden motives have yet to reveal themselves.','https://image.tmdb.org/t/p/original/d0IVecFQvsGdSbnMAHqiYsNYaJT.jpg','https://image.tmdb.org/t/p/original/mgcbG1w3lgj9lajGBXVUjLQti8P.jpg','Won 2 Oscars. 69 wins & 125 nominations total','$304,360,277','PG-13')
,('Spectre','06 Nov 2015','6.8','148 minutes','English, German, Italian, Spanish, French, Ukrainian','Movie','A cryptic message from the past sends James Bond on a rogue mission to Mexico City and eventually Rome. Bond infiltrates a secret meeting and uncovers the existence of the sinister organisation known as S.P.E.C.T.R.E. Meanwhile, back in London, Max Denbigh, the new head of the Centre of National Security, questions Bond''s actions and challenges the relevance of MI6, led by M. Bond covertly enlists Miss Eve Moneypenny and Q to help him seek out Dr. Madeleine Swann, who may help untangle the web of S.P.E.C.T.R.E. As Bond ventures towards the heart of S.P.E.C.T.R.E., he learns a chilling connection between him and the enemy he seeks.','https://image.tmdb.org/t/p/original/zj8ongFhtWNsVlfjOGo8pSr7PQg.jpg','https://image.tmdb.org/t/p/original/8lBViysvNJBPkl6zG1LVAaW3qhj.jpg','Won 1 Oscar. 8 wins & 38 nominations total','$200,074,609','PG-13')
,('No Time to Die','29 Sep 2021','7.3','163 minutes','English, French, Italian, Russian, Spanish, Norwegian, German','Movie','Bond has left active service and is enjoying a tranquil life in Jamaica. His peace is short-lived when his old friend Felix Leiter from the CIA turns up asking for help. The mission to rescue a kidnapped scientist turns out to be far more treacherous than expected, leading Bond onto the trail of a mysterious villain armed with dangerous new technology.','https://image.tmdb.org/t/p/original/iUgygt3fscRoKWCV1d0C7FbM9TP.jpg','https://image.tmdb.org/t/p/original/bz7pwNGCbV576COsDcYN9MbEACC.jpg','Won 1 Oscar. 50 wins & 76 nominations total','$160,891,007','PG-13')
,('The Bear',NULL,'8.5','34 minutes','English, Spanish','Series','Carmen Berzatto, a brilliant young chef from the fine-dining world is forced to return home to run his local family sandwich shop - the Original Beef of Chicagoland - after a heartbreaking death in his family. A world away from what he''s used to, Carmy must balance the soul-crushing reality of trading in Michelin star restaurants for the small ''business'' kitchen filled with strong-willed and obstinate staff and his strained familial relationships, all while grappling with the impact of his brother''s suicide.','https://image.tmdb.org/t/p/original/fNvtpFbOdYmxU5CNIdkdJ5fqbsf.jpg','https://image.tmdb.org/t/p/original/csnJf7QslLWl2oekdm3mO3INFiq.jpg','Won 21 Primetime Emmys. 115 wins & 181 nominations total',NULL,'TV-MA')
,('Severance',NULL,'8.7','50 minutes','English','Series',NULL,'https://image.tmdb.org/t/p/original/pPHpeI2X1qEd1CS1SeyrdhZ4qnT.jpg','https://image.tmdb.org/t/p/original/ixgFmf1X59PUZam2qbAfskx2gQr.jpg','Won 2 Primetime Emmys. 28 wins & 105 nominations total',NULL,'TV-MA')
,('Ripley',NULL,'8.1','60 minutes','English','Series','1961. Tom Ripley, a small-time fraudster, is hired by millionaire Herbert Greenleaf to visit his son Dickie in Italy and bring him back to New York. Dickie has been squandering his inheritance on lavish, unproductive living and Greenleaf believes that Ripley, being a friend of his, can convince him to straighten up and come home. Ripley goes to Italy but has other plans in mind.','https://image.tmdb.org/t/p/original/rpSo8z9alultGVTqQ3dkLEyU8xx.jpg','https://image.tmdb.org/t/p/original/Av4ku3UIoWBbxNxKjXrFohMS6xi.jpg','Won 4 Primetime Emmys. 20 wins & 65 nominations total',NULL,'TV-MA')
,('Baby Reindeer',NULL,'7.7','30 minutes','English','Series','Inspired by a true story, the hit 2019 Edinburgh Fringe one-man stage-play Baby Reindeer follows the writer and performer Donny Dunn''s warped relationship with his female stalker and the impact it has on him as he is ultimately forced to face a deep, dark buried trauma.','https://image.tmdb.org/t/p/original/tN9OcbkAOPwHSr1sgMornZtQZBx.jpg','https://image.tmdb.org/t/p/original/2qLYxCyxf4fim0X5OqM5FjZqWXu.jpg','Won 6 Primetime Emmys. 28 wins & 72 nominations total',NULL,'TV-MA')
,('Sh≈çgun',NULL,'8.6','60 minutes','Japanese, English','Series','Set in the 17th Century, the story is told from the perspective of British hero John Blackthorne, a sailor who rises from outsider to samurai, while being used as a pawn in Japanese leader Toranaga''s struggle to reach the top of the ruling chain, or Shogun.','https://image.tmdb.org/t/p/original/7O4iVfOMQmdCSxhOg1WnzG1AgYT.jpg','https://image.tmdb.org/t/p/original/bwSmgmd90hCWwqOKQYTEraeOZhJ.jpg','Won 18 Primetime Emmys. 89 wins & 86 nominations total',NULL,'TV-MA')
,('The Night Agent',NULL,'7.4','45 minutes','English','Series','The Night Agent is a sophisticated, character-based action thriller centering on a low-level FBI agent who works in the basement of the White House, manning a phone that never rings - until the night that it does, propelling him into a fast moving and dangerous conspiracy that ultimately leads all the way to the Oval Office.','https://image.tmdb.org/t/p/original/4c5yUNcaff4W4aPrkXE6zr7papX.jpg','https://image.tmdb.org/t/p/original/gklrevVndG98GHGDwfm8y8kxESo.jpg','8 nominations total',NULL,'TV-MA')
,('Silo',NULL,'8.1','49 minutes','English','Series','In a bleak dystopian future, humanity clings to survival deep underground within the confines of a colossal silo. Juliette, an engineer tasked with unraveling the mystery behind the death of a colleague, uncovers startling secrets that threaten the very fabric of their enclosed world. Based on the novel "Wool" by Hugh Howey.','https://image.tmdb.org/t/p/original/c2OijvbFEXBW1onbzuvENr4CGQB.jpg','https://image.tmdb.org/t/p/original/4XccmjsOmQZw8S2iW1wvlvmb5v1.jpg','Nominated for 2 Primetime Emmys. 4 wins & 28 nominations total',NULL,'TV-MA')
,('The Fall of the House of Usher',NULL,'7.9','60 minutes','English','Series','The Usher family is never far from controversy. The fortunes of siblings Roderick and Madeline Usher were made through Fortunato Pharmaceuticals, a company whose products are often under scrutiny due to health concerns. Assistant District Attorney C. Auguste Dupin is determined to land a conviction and his case against Fortunato and the Ushers has gone to trial. Now, right in the middle of the trial, Roderick''s children are dying under mysterious circumstances. Roderick Usher knows who/what is behind the deaths and meets with Dupin to reveal all.','https://image.tmdb.org/t/p/original/aFX5bdLKVCxFEKTwB1yLh6MCpsX.jpg','https://image.tmdb.org/t/p/original/4qDlkEAKFb4pgIUbeJMLyHX2Xym.jpg','4 wins & 32 nominations total',NULL,'TV-MA')
,('Dark Matter',NULL,'7.7',NULL,'English','Series',NULL,'https://image.tmdb.org/t/p/original/c6MRUtPk0nEPQ9FBD9RdRKt2rIm.jpg','https://image.tmdb.org/t/p/original/nbY7k4L6xNFXakjJf0uwEnPh2S.jpg','2 nominations total',NULL,'TV-MA')
,('Abbott Elementary',NULL,'8.2','22 minutes','English','Series','A group of dedicated, passionate teachers -- and a slightly tone-deaf principal -- find themselves thrown together in a Philadelphia public school where, despite the odds stacked against them, they are determined to help their students succeed in life. Though these incredible public servants may be outnumbered and underfunded, they love what they do -- even if they don''t love the school district''s less-than-stellar attitude toward educating children.','https://image.tmdb.org/t/p/original/7bZwZ1of6HCUarYoJDIivzk9h2G.jpg','https://image.tmdb.org/t/p/original/fUOau1xdpQdJmVWs32IDZlKYYvr.jpg','Won 4 Primetime Emmys. 87 wins & 255 nominations total',NULL,'TV-PG')
,('Jury Duty',NULL,'8.2','29 minutes','English','Series','Ronald Gladden serves jury duty on a civil trial in Los Angeles. To him there is nothing out of the ordinary in proceedings. Little does he know, however, that all the other participants - his fellow jurors, the judge, the plaintiff and defendant, everybody - are actors, the trial isn''t real and everything is staged.','https://image.tmdb.org/t/p/original/ipiqT5uHeJudWy9ICSvuCby7NeI.jpg','https://image.tmdb.org/t/p/original/5BmilACuy8o8F2NCWCUHpUBwAek.jpg','Nominated for 4 Primetime Emmys. 8 wins & 22 nominations total',NULL,'TV-14')
,('Loot',NULL,'6.8','25 minutes','English','Series',NULL,'https://image.tmdb.org/t/p/original/auvNJBU8FYRWTfAB5X152tN9L8E.jpg','https://image.tmdb.org/t/p/original/15boPorcwy0wOZKFwQtCBdYdaB2.jpg','Nominated for 1 Primetime Emmy. 2 wins & 15 nominations total',NULL,'TV-MA')
,('Shrinking',NULL,'8.1','33 minutes','English','Series','Jimmy is struggling to grieve the loss of his wife while being a dad, friend, and therapist. He decides to try a new approach with everyone in his path: unfiltered, brutal honesty. Can he help himself by helping others? Will it bring him back into the light?','https://image.tmdb.org/t/p/original/cVmrNYgm5wcEexbXg4laNn3u4vq.jpg','https://image.tmdb.org/t/p/original/hI9z1UuNhBthvkm3iJ8m3zv43Pf.jpg','Nominated for 2 Primetime Emmys. 7 wins & 38 nominations total',NULL,'TV-MA')
,('Fallout',NULL,'8.3','60 minutes','English','Series','Years after a nuclear apocalypse devastates America, a violent raid by bandits on an underground fallout shelter forces one of its residents to set out into a barren wasteland filled with radiation, mutated monsters, and a lawless society of those who remained on the surface.','https://image.tmdb.org/t/p/original/AnsSKR9LuK0T9bAOcPVA3PUvyWj.jpg','https://image.tmdb.org/t/p/original/5C3UcPKVcg3rwGBYPE18wXpZMw8.jpg','Won 1 Primetime Emmy. 10 wins & 72 nominations total',NULL,'TV-MA');


GO 

-- Join Tables ( MovieGenres, MovieDirectors, MovieWriters, MovieActors )

-- Movie: There''s Something About Mary
DECLARE @MovieTitle VARCHAR(255) = 'There''s Something About Mary';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Bobby Farrelly', 'Peter Farrelly');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Ed Decter', 'John J. Strauss',  'Ed Decter', 'John J. Strauss', 'Peter Farrelly', 'Bobby Farrelly');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Cameron Diaz';
SET @Character = 'Mary';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matt Dillon';
SET @Character = 'Healy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ben Stiller';
SET @Character = 'Ted';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lee Evans';
SET @Character = 'Tucker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Elliott';
SET @Character = 'Dom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lin Shaye';
SET @Character = 'Magda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeffrey Tambor';
SET @Character = 'Sully';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Markie Post';
SET @Character = 'Mary''s Mom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Keith David';
SET @Character = 'Mary''s Dad';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'W. Earl Brown';
SET @Character = 'Warren';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('surgeon', 'romcom', 'stalker', 'dream girl', 'taboo', 'screwball comedy', 'frisbee', 'troubadour', 'intellectual disability');

GO
-- ============================================

-- Movie: Do the Right Thing
DECLARE @MovieTitle VARCHAR(255) = 'Do the Right Thing';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Spike Lee');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Spike Lee');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Danny Aiello';
SET @Character = 'Sal';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ossie Davis';
SET @Character = 'Da Mayor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ruby Dee';
SET @Character = 'Mother Sister';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Edson';
SET @Character = 'Vito';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Giancarlo Esposito';
SET @Character = 'Buggin Out';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Spike Lee';
SET @Character = 'Mookie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bill Nunn';
SET @Character = 'Radio Raheem';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Turturro';
SET @Character = 'Pino';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Benjamin';
SET @Character = 'ML';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Frankie Faison';
SET @Character = 'Coconut Sid';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new york city', 'police brutality', 'hip-hop', 'italian american', 'culture clash', 'chaos', 'heat', 'street war', 'restaurant critic', 'radio transmission', 'punk rock', 'pizzeria', 'police operation', 'pizza', 'love', 'money', 'racism', 'brooklyn', 'new york city', 'heatwave');

GO
-- ============================================

-- Movie: Joker
DECLARE @MovieTitle VARCHAR(255) = 'Joker';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Todd Phillips');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Todd Phillips', 'Scott Silver',  'Bob Kane', 'Bill Finger', 'Jerry Robinson');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Joaquin Phoenix';
SET @Character = 'Arthur Fleck';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert De Niro';
SET @Character = 'Murray Franklin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zazie Beetz';
SET @Character = 'Sophie Dumond';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Frances Conroy';
SET @Character = 'Penny Fleck';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brett Cullen';
SET @Character = 'Thomas Wayne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shea Whigham';
SET @Character = 'Detective Burke';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bill Camp';
SET @Character = 'Detective Garrity';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Glenn Fleshler';
SET @Character = 'Randall';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Leigh Gill';
SET @Character = 'Gary';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Josh Pais';
SET @Character = 'Hoyt Vaughn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('dreams', 'street gang', 'society', 'psychopath', 'clown', 'villain', 'based on comic', 'murder', 'psychological thriller', 'criminal mastermind', 'mental illness', 'anarchy', 'character study', 'clown makeup', 'subway train', 'social realism', 'supervillain', 'tv host', '1980s', 'mother son relationship', 'origin story', 'falling into madness', 'frightened', 'pretentious');

GO
-- ============================================

-- Movie: Mad Max: Fury Road
DECLARE @MovieTitle VARCHAR(255) = 'Mad Max: Fury Road';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('George Miller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('George Miller', 'Brendan McCarthy', 'Nick Lathouris');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tom Hardy';
SET @Character = 'Max Rockatansky';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Charlize Theron';
SET @Character = 'Imperator Furiosa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nicholas Hoult';
SET @Character = 'Nux';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hugh Keays-Byrne';
SET @Character = 'Immortan Joe';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Josh Helman';
SET @Character = 'Slit';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nathan Jones';
SET @Character = 'Rictus Erectus';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zo√´ Kravitz';
SET @Character = 'Toast the Knowing';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rosie Huntington-Whiteley';
SET @Character = 'The Splendid Angharad';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Riley Keough';
SET @Character = 'Capable';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Abbey Lee';
SET @Character = 'The Dag';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('rescue', 'future', 'australia', 'chase', 'dystopia', 'post-apocalyptic future', 'survival', 'on the run', 'on the road', 'desert', 'convoy', 'peak oil', 'dark future', 'post-apocalyptic', 'car', 'suspenseful', 'intense', 'awestruck', 'commanding', 'hopeful');

GO
-- ============================================

-- Movie: The Fall Guy
DECLARE @MovieTitle VARCHAR(255) = 'The Fall Guy';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Comedy', 'Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('David Leitch');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Glen A. Larson',  'Drew Pearce');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ryan Gosling';
SET @Character = 'Colt Seavers';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emily Blunt';
SET @Character = 'Jody Moreno';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aaron Taylor-Johnson';
SET @Character = 'Tom Ryder';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hannah Waddingham';
SET @Character = 'Gail Meyer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Teresa Palmer';
SET @Character = 'Iggy Starr';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephanie Hsu';
SET @Character = 'Alma Milan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Winston Duke';
SET @Character = 'Dan Tucker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ben Knight';
SET @Character = 'Dressler';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matuse';
SET @Character = 'Doone';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adam Dunn';
SET @Character = 'Nigel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('stuntman', 'missing person', 'duringcreditsstinger', 'movie industry', 'action comedy', 'playful', 'based on tv series', 'grand', 'romantic', 'amused', 'farcical');

GO
-- ============================================

-- Movie: Monkey Man
DECLARE @MovieTitle VARCHAR(255) = 'Monkey Man';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Crime', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Dev Patel');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Dev Patel', 'Paul Angunawela', 'John Collee',  'Dev Patel');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Dev Patel';
SET @Character = 'Kid';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Pitobash';
SET @Character = 'Alphonso';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jatin Malik';
SET @Character = 'Young Kid';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sikandar Kher';
SET @Character = 'Rana';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sobhita Dhulipala';
SET @Character = 'Sita';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Makrand Deshpande';
SET @Character = 'Baba Shakti';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ashwini Kalsekar';
SET @Character = 'Queenie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vipin Sharma';
SET @Character = 'Alpha';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adithi Kalkunte';
SET @Character = 'Neela';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jomon Thomas';
SET @Character = 'Mirza';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('indian', 'revenge thriller', 'action thriller', 'suspenseful', 'night club', '—Ç—Ä–∞–Ω—Å–≥–µ–Ω–¥–µ—Ä', '–ª–≥–±—Ç');

GO
-- ============================================

-- Movie: Singin'' in the Rain
DECLARE @MovieTitle VARCHAR(255) = 'Singin'' in the Rain';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Musical', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Stanley Donen', 'Gene Kelly');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Betty Comden', 'Adolph Green');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Gene Kelly';
SET @Character = 'Don Lockwood';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Donald O''Connor';
SET @Character = 'Cosmo Brown';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Debbie Reynolds';
SET @Character = 'Kathy Selden';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jean Hagen';
SET @Character = 'Lina Lamont';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Millard Mitchell';
SET @Character = 'R.F. Simpson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cyd Charisse';
SET @Character = 'Dancer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Douglas Fowley';
SET @Character = 'Roscoe Dexter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rita Moreno';
SET @Character = 'Zelda Zanders';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dawn Addams';
SET @Character = 'Teresa - a Lady-in-Waiting';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Albright';
SET @Character = 'Call Boy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('fan', 'musical', 'partner', 'film in film', 'hollywood', 'broadway', 'dancing in the street', 'burlesque', 'audience', 'chorus girl', 'diction coach', 'pearl necklace', 'flapper', 'silent film star', 'squeaky voice', 'christmas', '1920s', 'old hollywood', 'provocative', 'sentimental', 'amused', 'exuberant');

GO
-- ============================================

-- Movie: Dune: Part Two
DECLARE @MovieTitle VARCHAR(255) = 'Dune: Part Two';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Drama', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Denis Villeneuve');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Denis Villeneuve', 'Jon Spaihts',  'Frank Herbert');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Timoth√©e Chalamet';
SET @Character = 'Paul Atreides';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zendaya';
SET @Character = 'Chani';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rebecca Ferguson';
SET @Character = 'Jessica';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Javier Bardem';
SET @Character = 'Stilgar';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Josh Brolin';
SET @Character = 'Gurney Halleck';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Austin Butler';
SET @Character = 'Feyd-Rautha';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Florence Pugh';
SET @Character = 'Princess Irulan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dave Bautista';
SET @Character = 'Beast Rabban';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christopher Walken';
SET @Character = 'Emperor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'L√©a Seydoux';
SET @Character = 'Lady Margot Fenring';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('epic', 'based on novel or book', 'fight', 'politics', 'sandstorm', 'sand', 'spice', 'chosen one', 'cult', 'sequel', 'romance', 'tragedy', 'distant future', 'tragic hero', 'creature', 'planet', 'desert', 'destiny', 'giant worm', 'space opera', 'sand dune', 'allegorical', 'messiah', 'fall from grace', 'shocking', 'domineering', 'vengeance', 'vindictive', 'cautionary', 'religious allegory', 'giant creature', 'power', 'grand', 'violence', 'suspenseful', 'intense', 'ambiguous', 'antagonistic', 'audacious', 'awestruck', 'bold', 'exuberant', 'foreboding', 'melodramatic');

GO
-- ============================================

-- Movie: Meri Pyaari Bindu
DECLARE @MovieTitle VARCHAR(255) = 'Meri Pyaari Bindu';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Akshay Roy');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Soumik Sen',  'Suprotim Sengupta',  'Suprotim Sengupta',  'Suprotim Sengupta');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ayushmann Khurrana';
SET @Character = 'Abhimanyu Roy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Parineeti Chopra';
SET @Character = 'Bindu Shankarnarayanan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nishant Dahiya';
SET @Character = 'Dhruv';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amrita Bagchi';
SET @Character = 'Maulshree';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Prakash Belawadi';
SET @Character = 'Bindu''s Father';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rajatabha Dutta';
SET @Character = 'Abhi''s Father';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'June Malia';
SET @Character = 'Bindu''s Mother';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kharaj Mukherjee';
SET @Character = '';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aarnaa Sharma';
SET @Character = 'Young Bindu';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aparajita Adhya';
SET @Character = 'Abhi''s Mother';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('writer''s block', 'bollywood');

GO
-- ============================================

-- Movie: Hasee Toh Phasee
DECLARE @MovieTitle VARCHAR(255) = 'Hasee Toh Phasee';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Vinil Mathew');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Harshavardhan Kulkarni',  'Anurag Kashyap', 'Harshavardhan Kulkarni', 'Purva Naresh', 'Vinil Mathew');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Sidharth Malhotra';
SET @Character = 'Nikhil Bhardwaj';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Parineeti Chopra';
SET @Character = 'Meeta';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adah Sharma';
SET @Character = 'Karishma';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Manoj Joshi';
SET @Character = 'Devesh Solanki - Meeta and Karishma''s Father';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sharat Saxena';
SET @Character = 'S.B Bharadwaj - Nikhil''s Father';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Neena Kulkarni';
SET @Character = 'Nikhil''s mother';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sameer Sharma';
SET @Character = 'Abhay';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aariyan Gupta';
SET @Character = 'Vipul''s Son';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amita Udgata';
SET @Character = 'Aunty Kaveri';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anshikaa Shrivastava';
SET @Character = 'Young Meeta';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('romcom', 'family relationships', 'relationship', 'bollywood');

GO
-- ============================================

-- Movie: Wonka
DECLARE @MovieTitle VARCHAR(255) = 'Wonka';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure', 'Comedy', 'Family', 'Fantasy', 'Musical');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Paul King');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Roald Dahl',  'Paul King',  'Simon Farnaby', 'Paul King');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Timoth√©e Chalamet';
SET @Character = 'Willy Wonka';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gustave Die';
SET @Character = 'Ship''s Engineer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Murray McArthur';
SET @Character = 'Ship''s Captain';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul G. Raymond';
SET @Character = 'Map Seller';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bertie Caplan';
SET @Character = 'Shoeshine Boy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Isy Suttie';
SET @Character = 'Fruit & Veg Vendor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kobna Holdbrook-Smith';
SET @Character = 'Officer Affable';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matilda Tucker';
SET @Character = 'Young Mother';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Davis';
SET @Character = 'Bleacher';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Olivia Colman';
SET @Character = 'Mrs. Scrubitt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('chocolate', 'musical', 'prequel', 'nostalgic', 'duringcreditsstinger', 'cartel');

GO
-- ============================================

-- Movie: The Farewell
DECLARE @MovieTitle VARCHAR(255) = 'The Farewell';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Lulu Wang');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Lulu Wang');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Shuzhen Zhao';
SET @Character = 'Nai Nai';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Awkwafina';
SET @Character = 'Billi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'X Mayo';
SET @Character = 'Suze';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hong Lu';
SET @Character = 'Little Nai Nai';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hong Lin';
SET @Character = 'Doctor Wu';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tzi Ma';
SET @Character = 'Haiyan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Diana Lin';
SET @Character = 'Lu Jian';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yang Xuejian';
SET @Character = 'Mr. Li';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Becca Khalil';
SET @Character = 'Shirley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yongbo Jiang';
SET @Character = 'Uncle Haibin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('grandparent grandchild relationship', 'family relationships', 'wedding', 'east asian lead', 'family reunion', 'grandmother', 'chinese american', 'family gathering', 'ethical dilemma', 'woman director', 'lung cancer', 'deadly disease', 'relationships', 'personal relationships', 'grandmother granddaughter relationship', 'asian american');

GO
-- ============================================

-- Movie: Thor: Ragnarok
DECLARE @MovieTitle VARCHAR(255) = 'Thor: Ragnarok';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Comedy', 'Fantasy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Taika Waititi');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Eric Pearson', 'Craig Kyle', 'Christopher L. Yost',  'Stan Lee', 'Larry Lieber', 'Jack Kirby',  'Greg Pak',  'Walter Simonson',  'Carlo Pagulayan');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Chris Hemsworth';
SET @Character = 'Thor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Hiddleston';
SET @Character = 'Loki';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cate Blanchett';
SET @Character = 'Hela';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Idris Elba';
SET @Character = 'Heimdall';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeff Goldblum';
SET @Character = 'Grandmaster';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tessa Thompson';
SET @Character = 'Valkyrie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Karl Urban';
SET @Character = 'Skurge';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Ruffalo';
SET @Character = 'Bruce Banner / Hulk';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anthony Hopkins';
SET @Character = 'Odin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Benedict Cumberbatch';
SET @Character = 'Doctor Strange';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('superhero', 'based on comic', 'sequel', 'alien planet', 'female villain', 'norse mythology', 'aftercreditsstinger', 'duringcreditsstinger', 'marvel cinematic universe (mcu)', 'norse god', 'loki');

GO
-- ============================================

-- Movie: The Perfect Date
DECLARE @MovieTitle VARCHAR(255) = 'The Perfect Date';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Chris Nelson');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Steve Bloom',  'Randall Green');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Noah Centineo';
SET @Character = 'Brooks Rattigan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Laura Marano';
SET @Character = 'Celia Lieberman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Odiseas Georgiadis';
SET @Character = 'Murph';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Camila Mendes';
SET @Character = 'Shelby Pace';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matt Walsh';
SET @Character = 'Charlie Rattigan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joe Chrest';
SET @Character = 'Harvey Lieberman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Carrie Lazar';
SET @Character = 'Lillian Lieberman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alexander Biglane';
SET @Character = 'Tuna Melt on Seven Grain';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Blaine Kern III';
SET @Character = 'Franklin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zak Steiner';
SET @Character = 'Reece';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('adolescence', 'fake boyfriend', 'based on young adult novel');

GO
-- ============================================

-- Movie: The Lego Movie
DECLARE @MovieTitle VARCHAR(255) = 'The Lego Movie';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Action', 'Adventure', 'Comedy', 'Family', 'Fantasy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Phil Lord', 'Christopher Miller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Phil Lord', 'Christopher Miller',  'Dan Hageman', 'Kevin Hageman', 'Phil Lord', 'Christopher Miller',  'Ole Kirk Christiansen', 'Godtfred Kirk Christiansen', 'Jens Nygaard Knudsen');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Will Arnett';
SET @Character = 'Batman / Bruce Wayne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Elizabeth Banks';
SET @Character = 'Wyldstyle / Lucy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Craig Berry';
SET @Character = 'Blake / Additional Voices';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alison Brie';
SET @Character = 'Unikitty';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Burrows';
SET @Character = 'Octan Robot / Additional Voices';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anthony Daniels';
SET @Character = 'C-3PO';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Charlie Day';
SET @Character = 'Benny';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amanda Farinos';
SET @Character = 'Mom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Keith Ferguson';
SET @Character = 'Han Solo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Will Ferrell';
SET @Character = 'Lord Business / President Business / The Man Upstairs';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('friendship', 'parent child relationship', 'prophecy', 'superhero', 'villain', 'based on comic', 'part live action', 'based on toy', 'falling in love', 'anti villain', 'super power', 'good cop bad cop', 'duringcreditsstinger', 'live action and animation', 'lego', 'father son relationship', 'loving', 'mischievous', 'playful', 'irreverent', 'evil tyrant', 'witty', 'hilarious', 'whimsical', 'celebratory', 'euphoric', 'exhilarated', 'exuberant', 'ridiculous');

GO
-- ============================================

-- Movie: Gone Girl
DECLARE @MovieTitle VARCHAR(255) = 'Gone Girl';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('David Fincher');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Gillian Flynn',  'Gillian Flynn');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ben Affleck';
SET @Character = 'Nick Dunne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rosamund Pike';
SET @Character = 'Amy Dunne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Neil Patrick Harris';
SET @Character = 'Desi Collings';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tyler Perry';
SET @Character = 'Tanner Bolt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Carrie Coon';
SET @Character = 'Margo Dunne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kim Dickens';
SET @Character = 'Detective Rhonda Boney';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Patrick Fugit';
SET @Character = 'Officer James Gilpin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Clennon';
SET @Character = 'Rand Elliott';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lisa Banes';
SET @Character = 'Marybeth Elliott';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Missi Pyle';
SET @Character = 'Ellen Abbott';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('infidelity', 'based on novel or book', 'wife', 'marriage crisis', 'investigation', 'disappearance', 'psychological thriller', 'whodunit', 'blunt', 'missing person', 'psychotic', 'search party', 'criminal lawyer', 'mysterious', 'detached', 'murder suspect', 'missing wife', 'satirical', 'perspective', 'manipulative woman', 'playful', 'killed during sex', 'irreverent', 'antagonistic', 'audacious', 'wry');

GO
-- ============================================

-- Movie: When We First Met
DECLARE @MovieTitle VARCHAR(255) = 'When We First Met';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Fantasy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Ari Sandel');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('John Whittington');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Adam Devine';
SET @Character = 'Noah';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alexandra Daddario';
SET @Character = 'Avery';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shelley Hennig';
SET @Character = 'Carrie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andrew Bachelor';
SET @Character = 'Max';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robbie Amell';
SET @Character = 'Ethan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dean J. West';
SET @Character = 'Phil';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tony Cavalero';
SET @Character = 'Angus Young';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Delfeayo Marsalis';
SET @Character = 'Danny';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Wylde';
SET @Character = 'Mr. Costigan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daryn Kahn';
SET @Character = 'Drunk Hulk';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('time travel', 'halloween party', 'unrequited love', 'time loop', 'do over');

GO
-- ============================================

-- Movie: Night School
DECLARE @MovieTitle VARCHAR(255) = 'Night School';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Malcolm D. Lee');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Kevin Hart', 'Harry Ratchford', 'Joey Wells', 'Matthew Kellard', 'Nicholas Stoller', 'John Hamburg');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Kevin Hart';
SET @Character = 'Teddy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tiffany Haddish';
SET @Character = 'Carrie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rob Riggle';
SET @Character = 'Mackenzie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Romany Malco';
SET @Character = 'Jaylen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Taran Killam';
SET @Character = 'Stewart';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Megalyn Echikunwoke';
SET @Character = 'Lisa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Al Madrigal';
SET @Character = 'Luis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mary Lynn Rajskub';
SET @Character = 'Theresa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Keith David';
SET @Character = 'Gerald';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anne Winters';
SET @Character = 'Mila';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('baseball bat', 'exam', 'car crash', 'dyslexia', 'teacher', 'prom', 'learning disability', 'night school', 'high school drop out', 'boxing ring');

GO
-- ============================================

-- Movie: Don''t Look Up
DECLARE @MovieTitle VARCHAR(255) = 'Don''t Look Up';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Adam McKay');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Adam McKay',  'Adam McKay', 'David Sirota');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Leonardo DiCaprio';
SET @Character = 'Dr. Randall Mindy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jennifer Lawrence';
SET @Character = 'Kate Dibiasky';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Meryl Streep';
SET @Character = 'President Orlean';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cate Blanchett';
SET @Character = 'Brie Evantee';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rob Morgan';
SET @Character = 'Dr. Teddy Oglethorpe';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jonah Hill';
SET @Character = 'Jason Orlean';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Rylance';
SET @Character = 'Peter Isherwell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tyler Perry';
SET @Character = 'Jack Bremmer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Timoth√©e Chalamet';
SET @Character = 'Yule';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ron Perlman';
SET @Character = 'Benedict Drask';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('artificial intelligence (a.i.)', 'the white house', 'asteroid', 'climate change', 'satire', 'global warming', 'comet', 'end of the world', 'social commentary', 'social satire', 'meteorite', 'astronomer', 'disaster', 'teacher student relationship', 'denial', 'mass hysteria', 'aftercreditsstinger', 'duringcreditsstinger', 'amused', 'antagonistic');

GO
-- ============================================

-- Movie: Beef
DECLARE @MovieTitle VARCHAR(255) = 'Beef';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Lee Sung Jin', 'Lee Sung Jin', 'Jean Kyoung Frazier');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Steven Yeun';
SET @Character = 'Danny Cho';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ali Wong';
SET @Character = 'Amy Lau';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joseph Lee';
SET @Character = 'George Nakai';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Young Mazino';
SET @Character = 'Paul Cho';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Remy Holt';
SET @Character = 'June';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Choe';
SET @Character = 'Isaac Cho';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Patti Yasutake';
SET @Character = 'Fumi Nakai';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ashley Park';
SET @Character = 'Naomi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maria Bello';
SET @Character = 'Jordan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Justin H. Min';
SET @Character = 'Edwin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Shaun of the Dead
DECLARE @MovieTitle VARCHAR(255) = 'Shaun of the Dead';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Horror');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Edgar Wright');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Simon Pegg', 'Edgar Wright');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Simon Pegg';
SET @Character = 'Shaun';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kate Ashfield';
SET @Character = 'Liz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nick Frost';
SET @Character = 'Ed';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lucy Davis';
SET @Character = 'Dianne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dylan Moran';
SET @Character = 'David';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nicola Cunningham';
SET @Character = 'Mary';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Keir Mills';
SET @Character = 'Clubber 1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matt Jaynes';
SET @Character = 'Clubber 2';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gavin Ferguson';
SET @Character = 'Football Kid';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peter Serafinowicz';
SET @Character = 'Pete';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('london', 'england', 'dark comedy', 'satire', 'surrey', 'parody', 'slacker', 'friends', 'survival', 'zombie', 'cynical', 'survival horror', 'british pub', 'boyfriend girlfriend relationship', 'taunting', 'zombie apocalypse', 'frantic', 'satirical', 'desperate', 'anxious', 'playful', 'dramatic', 'suspenseful', 'witty', 'amused', 'defiant', 'exuberant', 'farcical');

GO
-- ============================================

-- Movie: Hot Fuzz
DECLARE @MovieTitle VARCHAR(255) = 'Hot Fuzz';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Comedy', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Edgar Wright');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Edgar Wright', 'Simon Pegg');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Simon Pegg';
SET @Character = 'Nicholas Angel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Martin Freeman';
SET @Character = 'Met Sergeant';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bill Nighy';
SET @Character = 'Met Chief Inspector';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert Popper';
SET @Character = '''Not'' Janine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joe Cornish';
SET @Character = 'Bob';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Waitt';
SET @Character = 'Dave';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eric Mason';
SET @Character = 'Bernard Cooper';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Billie Whitelaw';
SET @Character = 'Joyce Cooper';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nick Frost';
SET @Character = 'PC Danny Butterman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peter Wight';
SET @Character = 'Roy Porter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('countryside', 'police', 'village', 'arrest', 'parody', 'partner', 'murder', 'rural area', 'conspiracy', 'serial killer', 'gunfight', 'police force', 'buddy cop', 'accident');

GO
-- ============================================

-- Movie: The World''s End
DECLARE @MovieTitle VARCHAR(255) = 'The World''s End';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Comedy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Edgar Wright');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Simon Pegg', 'Edgar Wright');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Thomas Law';
SET @Character = 'Young Gary';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zachary Bailess';
SET @Character = 'Young Andy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jasper Levine';
SET @Character = 'Young Steven';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Tarpey';
SET @Character = 'Young Peter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Luke Bromley';
SET @Character = 'Young Oliver';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sophie Evans';
SET @Character = 'Becky Salt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samantha White';
SET @Character = 'Erika Leekes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rose Reynolds';
SET @Character = 'Tracy Benson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Hadfield';
SET @Character = 'Young Shane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Flora Slorach';
SET @Character = 'Young Sam';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('addiction', 'alcoholism', 'end of the world', 'apocalypse', 'homage', 'pub', 'hilarious', 'pub crawl');

GO
-- ============================================

-- Movie: Charulata
DECLARE @MovieTitle VARCHAR(255) = 'Charulata';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Satyajit Ray');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Rabindranath Tagore',  'Satyajit Ray');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Soumitra Chatterjee';
SET @Character = 'Amal / Bhupati''s cousin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Madhavi Mukherjee';
SET @Character = 'Charulata / wife';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shailen Mukherjee';
SET @Character = 'Bhupati / husband';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shyamal Ghoshal';
SET @Character = 'Umapada / Charulata''s brother';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gitali Roy';
SET @Character = 'Mandakini / Umapada''s wife';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dilip Bose';
SET @Character = 'Shashanka';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nilotpal Dey';
SET @Character = 'Joydeb';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bankim Ghosh';
SET @Character = 'Jagannath';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bholanath Koyal';
SET @Character = 'Braja';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kamu Mukherjee';
SET @Character = 'Fellow Liberal at the Party';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('swing', 'writer', 'india', 'calcutta', 'newspaper editor', 'based on short story', '19th century', 'preserved film');

GO
-- ============================================

-- Movie: Andhadhun
DECLARE @MovieTitle VARCHAR(255) = 'Andhadhun';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Sriram Raghavan');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Arijit Biswas',  'Yogesh Chandekar',  'Sriram Raghavan',  'Hemanth M. Rao',  'Pooja Ladha Surti',  'Olivier Treiner');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ayushmann Khurrana';
SET @Character = 'Akash';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tabu';
SET @Character = 'Simi Sinha';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Radhika Apte';
SET @Character = 'Sophie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anil Dhawan';
SET @Character = 'Pramod Sinha';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Manav Vij';
SET @Character = 'DSP Manohar Jawanda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zakir Hussain';
SET @Character = 'Dr. Swami';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ashwini Kalsekar';
SET @Character = 'Rasika Jawanda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chhaya Kadam';
SET @Character = 'Saroja';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Pawan Singh';
SET @Character = 'Murli';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kabir Sajid Shaikh';
SET @Character = 'Bandu';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('pianist', 'witness to a crime', 'blind man', 'piano', 'bollywood');

GO
-- ============================================

-- Movie: Always Be My Maybe
DECLARE @MovieTitle VARCHAR(255) = 'Always Be My Maybe';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Nahnatchka Khan');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Ali Wong', 'Randall Park', 'Michael Golamco');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ali Wong';
SET @Character = 'Sasha';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Randall Park';
SET @Character = 'Marcus';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Saito';
SET @Character = 'Harry';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michelle Buteau';
SET @Character = 'Veronica';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vivian Bang';
SET @Character = 'Jenny';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Keanu Reeves';
SET @Character = 'Keanu Reeves';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Susan Park';
SET @Character = 'Judy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daniel Dae Kim';
SET @Character = 'Brandon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Karan Soni';
SET @Character = 'Tony';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Charlyne Yi';
SET @Character = 'Ginger';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new york city', 'san francisco', 'california', 'restaurant owner', 'widower', 'childhood friends', 'chinese american', 'woman director', 'reconnect', 'rekindled romance', 'childhood sweethearts', 'asian american');

GO
-- ============================================

-- Movie: A Separation
DECLARE @MovieTitle VARCHAR(255) = 'A Separation';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Asghar Farhadi');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Asghar Farhadi');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Leila Hatami';
SET @Character = 'Simin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Payman Maadi';
SET @Character = 'Nader';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shahab Hosseini';
SET @Character = 'Hojjat';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sareh Bayat';
SET @Character = 'Razieh';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sarina Farhadi';
SET @Character = 'Termeh';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Babak Karimi';
SET @Character = 'Interrogator';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ali-Asghar Shahbazi';
SET @Character = 'Nader''s Father';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kimia Hosseini';
SET @Character = 'Somayeh';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shirin Yazdanbakhsh';
SET @Character = 'Simin''s Mother';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Merila Zare''i';
SET @Character = 'Miss Ghahrayi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('emigration', 'class', 'alzheimer''s disease', 'teheran (tehran)', 'iran', 'money', 'maid', 'divorce', 'iran', 'caregiver', 'marital separation', 'family argument');

GO
-- ============================================

-- Movie: The Salesman
DECLARE @MovieTitle VARCHAR(255) = 'The Salesman';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Asghar Farhadi');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Asghar Farhadi');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Shahab Hosseini';
SET @Character = 'Emad';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Taraneh Alidoosti';
SET @Character = 'Rana';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mina Sadati';
SET @Character = 'Sanam';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Babak Karimi';
SET @Character = 'Babak';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maral Baniadam';
SET @Character = 'Kati';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mojtaba Pirzadeh';
SET @Character = 'Majid';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Farid Sajjadi Hosseini';
SET @Character = 'Piremard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mehdi Koushki';
SET @Character = 'Siavash';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ehteram Boroumand';
SET @Character = 'Mrs. Shahnazari';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sahra Asadollahi';
SET @Character = 'Mojgan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('rape', 'trauma', 'assault', 'theater play', 'teheran (tehran)', 'iran', 'attack', 'iran', 'rape and revenge', 'death of a salesman');

GO
-- ============================================

-- Movie: Airplane!
DECLARE @MovieTitle VARCHAR(255) = 'Airplane!';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Jim Abrahams', 'David Zucker', 'Jerry Zucker');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jim Abrahams', 'David Zucker', 'Jerry Zucker',  'Hall Bartlett',  'John C. Champion',  'Arthur Hailey',  'Arthur Hailey');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Kareem Abdul-Jabbar';
SET @Character = 'Roger Murdock';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lloyd Bridges';
SET @Character = 'Steve McCroskey';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peter Graves';
SET @Character = 'Captain Clarence Oveur';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julie Hagerty';
SET @Character = 'Elaine Dickinson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert Hays';
SET @Character = 'Ted Striker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Leslie Nielsen';
SET @Character = 'Dr. Rumack';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lorna Patterson';
SET @Character = 'Randy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert Stack';
SET @Character = 'Captain Rex Kramer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephen Stucker';
SET @Character = 'Johnny Henshaw-Jacobs';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Otto';
SET @Character = 'Otto';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('chicago', 'illinois', 'post-traumatic stress disorder (ptsd)', 'airplane', 'cataclysm', 'guitar', 'alcohol', 'stewardess', 'taxi driver', 'passenger', 'fear of flying', 'pilot', 'medicine', 'air controller', 'landing', 'saxophone', 'autopilot', 'parody', 'spoof', 'food poisoning', 'los angeles', 'california', 'alcohol abuse', 'aftercreditsstinger', 'inflatable life raft', 'anarchic comedy');

GO
-- ============================================

-- Movie: The Sixth Sense
DECLARE @MovieTitle VARCHAR(255) = 'The Sixth Sense';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('M. Night Shyamalan');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('M. Night Shyamalan');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Bruce Willis';
SET @Character = 'Malcolm Crowe';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Haley Joel Osment';
SET @Character = 'Cole Sear';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Toni Collette';
SET @Character = 'Lynn Sear';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Olivia Williams';
SET @Character = 'Anna Crowe';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Trevor Morgan';
SET @Character = 'Tommy Tammisimo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Donnie Wahlberg';
SET @Character = 'Vincent Gray';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peter Anthony Tambakis';
SET @Character = 'Darren';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeffrey Zubernis';
SET @Character = 'Bobby';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bruce Norris';
SET @Character = 'Stanley Cunningham';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Glenn Fitzgerald';
SET @Character = 'Sean';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('dying and death', 'child abuse', 'philadelphia', 'pennsylvania', 'sense of guilt', 'afterlife', 'marriage crisis', 'loss of loved one', 'confidence', 'psychology', 'paranormal phenomena', 'single', 'psychological thriller', 'cowardliness', 'single mother', 'school play', 'ghost', 'child', 'spiritism', 'ghost child', 'supernatural thriller');

GO
-- ============================================

-- Movie: Stranger Than Fiction
DECLARE @MovieTitle VARCHAR(255) = 'Stranger Than Fiction';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Fantasy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Marc Forster');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Zach Helm');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Will Ferrell';
SET @Character = 'Harold Crick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'William Dick';
SET @Character = 'IRS Co-Worker #1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Guy Massey';
SET @Character = 'IRS Co-Worker #2';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Martha Espinoza';
SET @Character = 'IRS Co-Worker #3';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'T.J. Jagodowski';
SET @Character = 'IRS Co-Worker #4';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peter Grosz';
SET @Character = 'IRS Co-Worker #5';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ricky Adams';
SET @Character = 'Young Boy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christian Stolte';
SET @Character = 'Young Boy''s Father';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Denise Hughes';
SET @Character = 'Kronecker Bus Driver';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peggy Roeder';
SET @Character = 'Polish Woman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('literature', 'professor', 'writer''s block', 'love', 'fate', 'author', 'death', 'dying', 'novelist', 'publisher', 'what if', 'book', 'narrator');

GO
-- ============================================

-- Movie: Haider
DECLARE @MovieTitle VARCHAR(255) = 'Haider';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Crime', 'Drama', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Vishal Bhardwaj');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('William Shakespeare',  'Basharat Peer', 'Vishal Bhardwaj',  'Vishal Bhardwaj');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tabu';
SET @Character = 'Ghazala Meer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shahid Kapoor';
SET @Character = 'Haider Meer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shraddha Kapoor';
SET @Character = 'Arshia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kay Kay Menon';
SET @Character = 'Khurram Meer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Narendra Jha';
SET @Character = 'Dr. Hilal Meer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kulbhushan Kharbanda';
SET @Character = 'Hussain Meer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lalit Parimoo';
SET @Character = 'Pervez Lone';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ashish Vidyarthi';
SET @Character = 'Brigadier T.S Murthy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aamir Bashir';
SET @Character = 'Liyaqat, Arshia''s brother';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sumit Kaul';
SET @Character = '';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('death of father', 'revenge', 'kashmir conflict', 'hamlet', 'avenge', 'bollywood');

GO
-- ============================================

-- Movie: Seven
DECLARE @MovieTitle VARCHAR(255) = 'Seven';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('David Fincher');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Andrew Kevin Walker');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Morgan Freeman';
SET @Character = 'Somerset';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andrew Kevin Walker';
SET @Character = 'Dead Man at 1st Crime Scene';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daniel Zacapa';
SET @Character = 'Detective Taylor at First Murder';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brad Pitt';
SET @Character = 'Mills';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gwyneth Paltrow';
SET @Character = 'Tracy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Cassini';
SET @Character = 'Officer Davis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bob Mack';
SET @Character = 'Gluttony Victim';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peter Crombie';
SET @Character = 'Dr. O''Neill';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Reg E. Cathey';
SET @Character = 'Dr. Santiago';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'R. Lee Ermey';
SET @Character = 'Police Captain';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('rage and hate', 'police', 's.w.a.t.', 'sadism', 'self-fulfilling prophecy', 'psychopath', 'detective', 'investigation', 'insomnia', 'murder', 'serial killer', 'religion', 'shootout', 'corpse', 'macabre', 'seven deadly sins', 'depravity', 'neo-noir', 'sinister', 'ambiguous', 'ominous', 'seven: los siete pecados capitales');

GO
-- ============================================

-- Movie: The Truman Show
DECLARE @MovieTitle VARCHAR(255) = 'The Truman Show';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Peter Weir');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Andrew Niccol');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jim Carrey';
SET @Character = 'Truman Burbank';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Laura Linney';
SET @Character = 'Meryl Burbank / Hannah Gill';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Noah Emmerich';
SET @Character = 'Marlon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Natascha McElhone';
SET @Character = 'Lauren / Sylvia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Holland Taylor';
SET @Character = 'Truman''s Mother';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brian Delate';
SET @Character = 'Truman''s Father';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Blair Slater';
SET @Character = 'Young Truman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peter Krause';
SET @Character = 'Lawrence';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Heidi Schanz';
SET @Character = 'Vivien';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ron Taylor';
SET @Character = 'Ron';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('escape', 'paranoia', 'dystopia', 'suspicion', 'video surveillance', 'deception', 'hidden camera', 'simulated reality', 'television producer', 'tv show in film', 'questioning', 'make believe', 'reflective', 'actor', 'tv show', 'dignified', 'allegory of the cave');

GO
-- ============================================

-- Movie: The Greatest Showman
DECLARE @MovieTitle VARCHAR(255) = 'The Greatest Showman';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Biography', 'Drama', 'Musical');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Michael Gracey');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jenny Bicks', 'Bill Condon',  'Jenny Bicks');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Hugh Jackman';
SET @Character = 'P.T. Barnum';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michelle Williams';
SET @Character = 'Charity Barnum';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zac Efron';
SET @Character = 'Phillip Carlyle';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zendaya';
SET @Character = 'Anne Wheeler';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rebecca Ferguson';
SET @Character = 'Jenny Lind';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Austyn Johnson';
SET @Character = 'Caroline Barnum';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cameron Seely';
SET @Character = 'Helen Barnum';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Keala Settle';
SET @Character = 'Lettie Lutz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sam Humphrey';
SET @Character = 'Tom Thumb';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yahya Abdul-Mateen II';
SET @Character = 'W.D. Wheeler';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('adultery', 'circus', 'musical', 'biography', 'rags to riches', 'based on true story', 'outcast', 'singing', 'dreamer', 'freak show', 'absurd', 'clich√©', 'complicated');

GO
-- ============================================

-- Movie: Kapoor & Sons
DECLARE @MovieTitle VARCHAR(255) = 'Kapoor & Sons';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Crime', 'Drama', 'Family', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Shakun Batra');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Shakun Batra',  'Ayesha DeVitre',  'Spandan Mishra');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Rishi Kapoor';
SET @Character = 'Amarjeet Kapoor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rajat Kapoor';
SET @Character = 'Harsh Kapoor - Dad';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ratna Pathak Shah';
SET @Character = 'Sunita Kapoor - Mom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Fawad Khan';
SET @Character = 'Rahul Kapoor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sidharth Malhotra';
SET @Character = 'Arjun Kapoor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alia Bhatt';
SET @Character = 'Tia Malik';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anuradha Chandan';
SET @Character = 'Anu';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vikram Kapadia';
SET @Character = 'Shashi Chacha';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anahita Oberoi';
SET @Character = 'Neetu Chachi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aakriti Dobhal';
SET @Character = 'Bunkoo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('coming out', 'loneliness', 'bollywood');

GO
-- ============================================

-- Movie: Laila Majnu
DECLARE @MovieTitle VARCHAR(255) = 'Laila Majnu';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Sajid Ali');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Imtiaz Ali',  'Sajid Ali');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Avinash Tiwary';
SET @Character = 'Qais Bhat / Majnu';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Triptii Dimri';
SET @Character = 'Laila';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sumit Kaul';
SET @Character = 'Ibban / Javed Parray';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Abrar Qazi';
SET @Character = 'Zaid';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sahiba Bali';
SET @Character = 'Ambreen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mir Sarwar';
SET @Character = 'Qais''s Brother-in-law';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Benjamin Gilani';
SET @Character = 'Ghulam Sarwar Bhat';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Parmeet Sethi';
SET @Character = 'Masood Ahmed Shahmiri';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Farhana Bhat';
SET @Character = 'Jasmeet';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shagufta Ali';
SET @Character = 'Pufu';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('romance', 'love', 'bollywood');

GO
-- ============================================

-- Movie: Prisoners
DECLARE @MovieTitle VARCHAR(255) = 'Prisoners';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Denis Villeneuve');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Aaron Guzikowski');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Hugh Jackman';
SET @Character = 'Keller Dover';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jake Gyllenhaal';
SET @Character = 'Detective Loki';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Viola Davis';
SET @Character = 'Nancy Birch';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maria Bello';
SET @Character = 'Grace Dover';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Terrence Howard';
SET @Character = 'Franklin Birch';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Melissa Leo';
SET @Character = 'Holly Jones';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Dano';
SET @Character = 'Alex Jones';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dylan Minnette';
SET @Character = 'Ralph Dover';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zo√´ Soul';
SET @Character = 'Eliza Birch';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Erin Gerasimovich';
SET @Character = 'Anna Dover';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('pennsylvania', 'usa', 'kidnapping', 'hostage', 'detective', 'maze', 'symbolism', 'investigation', 'georgia', 'beating', 'god', 'revenge', 'vigilante', 'rural area', 'crime scene', 'brutality', 'candlelight vigil', 'aggressive', 'animal cruelty', 'neo-noir', 'sex offender', 'child abduction');

GO
-- ============================================

-- Movie: What If
DECLARE @MovieTitle VARCHAR(255) = 'What If';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Michael Dowse');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Elan Mastai',  'T.J. Dawe', 'Michael Rinaldi');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Daniel Radcliffe';
SET @Character = 'Wallace';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zoe Kazan';
SET @Character = 'Chantry';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Megan Park';
SET @Character = 'Dalia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adam Driver';
SET @Character = 'Allan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mackenzie Davis';
SET @Character = 'Nicole';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rafe Spall';
SET @Character = 'Ben';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lucius Hoyos';
SET @Character = 'Felix';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jemima Rooper';
SET @Character = 'Ellie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tommie-Amber Pirie';
SET @Character = 'Gretchen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Meghan Heffern';
SET @Character = 'Tabby';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('beach', 'hope', 'toronto', 'canada', 'cousin', 'dublin', 'ireland', 'travel', 'best friend', 'falling in love', 'boyfriend', 'job promotion', 'multiple perspectives', 'medical school', 'living with sibling', 'papercut animation', 'long term relationship', 'brother sister relationship', 'sister sister relationship', 'loving', 'college dropout', 'casual', 'animator', 'crush on friend', 'friend zone', 'comforting');

GO
-- ============================================

-- Movie: Vice Principals
DECLARE @MovieTitle VARCHAR(255) = 'Vice Principals';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jody Hill', 'Jody Hill', 'Danny McBride');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Danny McBride';
SET @Character = 'Neal Gamby';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Walton Goggins';
SET @Character = 'Lee Russell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Georgia King';
SET @Character = 'Amanda Snodgrass';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shea Whigham';
SET @Character = 'Ray Liptrapp';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maya G. Love';
SET @Character = 'Janelle Gamby';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sheaun McKinney';
SET @Character = 'Dayshawn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Edi Patterson';
SET @Character = 'Ms. Abbott';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Busy Philipps';
SET @Character = 'Gale Liptrapp';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ashley Rae Spillers';
SET @Character = 'Janice Swift';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James M. Connor';
SET @Character = 'Seychelles';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Killers of the Flower Moon
DECLARE @MovieTitle VARCHAR(255) = 'Killers of the Flower Moon';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'History', 'Mystery', 'Romance', 'Western');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Martin Scorsese');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Eric Roth', 'Martin Scorsese',  'David Grann');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Leonardo DiCaprio';
SET @Character = 'Ernest Burkhart';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert De Niro';
SET @Character = 'William Hale';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lily Gladstone';
SET @Character = 'Mollie Burkhart';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jesse Plemons';
SET @Character = 'Tom White';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tantoo Cardinal';
SET @Character = 'Lizzie Q';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Lithgow';
SET @Character = 'Prosecutor Peter Leaward';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brendan Fraser';
SET @Character = 'W.S. Hamilton';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cara Jade Myers';
SET @Character = 'Anna';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Janae Collins';
SET @Character = 'Reta';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jillian Dion';
SET @Character = 'Minnie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('husband wife relationship', 'based on novel or book', 'war veteran', 'fbi', 'greed', 'oklahoma', 'manipulation', 'native american', 'based on true story', 'murder', 'racism', 'series of murders', 'genocide', 'period drama', 'courtroom', 'guilt', 'true crime', 'oil industry', 'death of sister', 'catholicism', 'uncle nephew relationship', 'catholic guilt', 'shocking', '1920s', 'candid', 'grim', 'osage indian', 'gullibility', 'poisoning', 'complex', 'diabetes', 'revisionist western', 'cautionary', 'meta', 'grand', 'factual', 'western', 'depressing', 'empathetic', 'harsh', 'tragic');

GO
-- ============================================

-- Movie: Inside Llewyn Davis
DECLARE @MovieTitle VARCHAR(255) = 'Inside Llewyn Davis';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Music');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Ethan Coen', 'Joel Coen');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Joel Coen', 'Ethan Coen');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Oscar Isaac';
SET @Character = 'Llewyn Davis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Carey Mulligan';
SET @Character = 'Jean';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Justin Timberlake';
SET @Character = 'Jim';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ethan Phillips';
SET @Character = 'Mitch Gorfein';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robin Bartlett';
SET @Character = 'Lillian Gorfein';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Max Casella';
SET @Character = 'Pappi Corsicato';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jerry Grayson';
SET @Character = 'Mel Novikoff';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeanine Serralles';
SET @Character = 'Joy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adam Driver';
SET @Character = 'Al Cody';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stark Sands';
SET @Character = 'Troy Nelson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('depression', 'new york city', 'guitar', 'winter', 'cat', 'subway', 'pregnancy', 'overdose', 'dark comedy', 'melancholy', 'folk music', 'aspiring singer', 'grief', 'hitchhiker', 'cafe', 'recording', 'self expression', 'greenwich village', 'merchant marine', '1960s', 'couchsurfing', 'bleak', 'struggling musician', 'death of friend');

GO
-- ============================================

-- Movie: My Name Is Khan
DECLARE @MovieTitle VARCHAR(255) = 'My Name Is Khan';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Karan Johar');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Shibani Bathija',  'Shibani Bathija', 'Niranjan Iyengar');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Shah Rukh Khan';
SET @Character = 'Rizvan Khan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kajol';
SET @Character = 'Mandira Khan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Katie Amanda Keane';
SET @Character = 'Sarah Garrick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kenton Duty';
SET @Character = 'Reese Garrick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Benny Nieves';
SET @Character = 'Detective Garcia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christopher B. Duncan';
SET @Character = 'President Barack Obama';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jimmy Shergill';
SET @Character = 'Zakir Khan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sonya Jehan';
SET @Character = 'Hasina Khan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Parvin Dabas';
SET @Character = 'Bobby Ahuja';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Arjun Mathur';
SET @Character = 'Raj Burman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('autism', 'mumbai (bombay)', 'india', 'based on true story', 'prejudice', 'religion', 'disability', 'asperger''s syndrome', 'asian american', 'bollywood');

GO
-- ============================================

-- Movie: Hera Pheri
DECLARE @MovieTitle VARCHAR(255) = 'Hera Pheri';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Comedy', 'Crime', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Priyadarshan');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Siddique', 'Lal',  'Neeraj Vora',  'Neeraj Vora',  'Anand S. Vardhan');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Akshay Kumar';
SET @Character = 'Raju';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Suniel Shetty';
SET @Character = 'Ghanshyam';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paresh Rawal';
SET @Character = 'Baburao Ganpatrao Apte';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tabu';
SET @Character = 'Anuradha Shivshankar Panikar';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Om Puri';
SET @Character = 'Khadak Singh';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gulshan Grover';
SET @Character = 'Kabira';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kulbhushan Kharbanda';
SET @Character = 'Devi Prasad';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mukesh Khanna';
SET @Character = 'Sub-Inspector Prakash';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Govardhan Asrani';
SET @Character = 'Bank Manager';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Razak Khan';
SET @Character = 'Chhota Chetan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('bollywood', 'classic bollywood');

GO
-- ============================================

-- Movie: Om Shanti Om
DECLARE @MovieTitle VARCHAR(255) = 'Om Shanti Om';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Comedy', 'Drama', 'Fantasy', 'Musical', 'Romance', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Farah Khan');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Farah Khan',  'Mushtaq Shiekh', 'Farah Khan',  'Mayur Puri');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Shah Rukh Khan';
SET @Character = 'Om Prakash Makhija / Om Kapoor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Arjun Rampal';
SET @Character = 'Mukesh ''Mike'' Mehra';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kirron Kher';
SET @Character = 'Bela Makhija';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shreyas Talpade';
SET @Character = 'Pappu Master';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Deepika Padukone';
SET @Character = 'Shantipriya / Sandy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bindu Desai';
SET @Character = 'Kamini';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jawed Sheikh';
SET @Character = 'Rajesh Kapoor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Satish Shah';
SET @Character = 'Partho Roy - Film director';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yuvika Chaudhary';
SET @Character = 'Dolly';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shawar Ali';
SET @Character = 'Self';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('psychopath', '1970s', 'musical', 'reincarnation', 'sociopath', 'revenge', 'betrayal', 'disco', 'predator turns victim', 'unlikely lovers', 'woman director', 'desire for fame', '2000s', 'crossover', 'bollywood');

GO
-- ============================================

-- Movie: 17 Again
DECLARE @MovieTitle VARCHAR(255) = '17 Again';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Fantasy', 'Romance', 'Sport');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Burr Steers');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jason Filardi');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Zac Efron';
SET @Character = 'Mike O''Donnell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Leslie Mann';
SET @Character = 'Scarlet';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Thomas Lennon';
SET @Character = 'Ned Gold';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matthew Perry';
SET @Character = 'Mike O''Donnell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tyler Steelman';
SET @Character = 'Ned Gold';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Allison Miller';
SET @Character = 'Scarlet';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sterling Knight';
SET @Character = 'Alex';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michelle Trachtenberg';
SET @Character = 'Maggie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adam Gregory';
SET @Character = 'Dom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hunter Parrish';
SET @Character = 'Stan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('high school', 'affectation', 'fake identity', 'bullying', 'high school sports', 'adult as a child', 'do over', 'age change', 'lighthearted', 'amused', 'enchant');

GO
-- ============================================

-- Movie: Tenet
DECLARE @MovieTitle VARCHAR(255) = 'Tenet';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Sci-Fi', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Christopher Nolan');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Christopher Nolan');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Juhan Ulfsak';
SET @Character = 'Passenger';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jefferson Hall';
SET @Character = 'Well-Dressed Man';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ivo Uukkivi';
SET @Character = 'Uniformed Official';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andrew Howard';
SET @Character = 'Driver';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John David Washington';
SET @Character = 'Protagonist';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rich Ceraulo Ko';
SET @Character = 'SWAT / Target';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jonathan Camp';
SET @Character = 'SWAT 2';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wes Chatham';
SET @Character = 'SWAT 3';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sander Rebane';
SET @Character = 'Ukrainian SWAT';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Martin Donovan';
SET @Character = 'Fay';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('assassin', 'espionage', 'spy', 'time travel', 'mumbai (bombay)', 'india', 'arms dealer', 'terrorism', 'terrorist attack', 'nuclear weapons', 'terrorist plot', 'backwards', 'alternate timeline', 'oslo', 'norway', 'time paradox', 'kyiv (kiev)', 'ukraine');

GO
-- ============================================

-- Movie: Swiss Army Man
DECLARE @MovieTitle VARCHAR(255) = 'Swiss Army Man';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Fantasy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Daniel Kwan', 'Daniel Scheinert');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Daniel Scheinert', 'Daniel Kwan');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Paul Dano';
SET @Character = 'Hank';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daniel Radcliffe';
SET @Character = 'Manny';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mary Elizabeth Winstead';
SET @Character = 'Sarah';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Antonia Ribero';
SET @Character = 'Crissie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Timothy Eulich';
SET @Character = 'Preston';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Gross';
SET @Character = 'Hank''s Dad';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Marika Casteel';
SET @Character = 'Reporter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andy Hull';
SET @Character = 'Cameraman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aaron Marshall';
SET @Character = 'Officer #1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shane Carruth';
SET @Character = 'Coroner';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('beach', 'friends', 'survival', 'dead body', 'corpse', 'deserted island', 'buddy comedy', 'fart');

GO
-- ============================================

-- Movie: Catch Me If You Can
DECLARE @MovieTitle VARCHAR(255) = 'Catch Me If You Can';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Biography', 'Crime', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Steven Spielberg');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Frank Abagnale Jr.', 'Stan Redding',  'Jeff Nathanson');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Leonardo DiCaprio';
SET @Character = 'Frank Abagnale Jr.';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Hanks';
SET @Character = 'Carl Hanratty';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christopher Walken';
SET @Character = 'Frank Abagnale';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Martin Sheen';
SET @Character = 'Roger Strong';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nathalie Baye';
SET @Character = 'Paula Abagnale';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amy Adams';
SET @Character = 'Brenda Strong';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Brolin';
SET @Character = 'Jack Barnes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brian Howe';
SET @Character = 'Earl Amdursky';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Frank John Hughes';
SET @Character = 'Tom Fox';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steve Eastin';
SET @Character = 'Paul Morgan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('fbi', 'con man', 'biography', 'based on true story', 'con artist', 'attempted jailbreak', 'engagement party', 'mislaid trust', 'christmas', 'bank fraud', 'conman', 'suspenseful', 'fraudster');

GO
-- ============================================

-- Movie: Mrs. Doubtfire
DECLARE @MovieTitle VARCHAR(255) = 'Mrs. Doubtfire';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Chris Columbus');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Anne Fine',  'Randi Mayem Singer', 'Leslie Dixon');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Robin Williams';
SET @Character = 'Daniel Hillard / Mrs. Doubtfire';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sally Field';
SET @Character = 'Miranda Hillard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Pierce Brosnan';
SET @Character = 'Stuart Dunmeyer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harvey Fierstein';
SET @Character = 'Frank Hillard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Polly Holliday';
SET @Character = 'Gloria Chaney';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lisa Jakub';
SET @Character = 'Lydia Hillard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matthew Lawrence';
SET @Character = 'Chris Hillard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mara Wilson';
SET @Character = 'Natalie Hillard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert Prosky';
SET @Character = 'Jonathan Lundy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anne Haney';
SET @Character = 'Mrs. Sellner';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('mask', 'parent child relationship', 'san francisco', 'california', 'social worker', 'transvestite', 'nanny', 'restaurant', 'fake identity', 'custody battle', 'responsibility', 'voice acting', 'divorced couple');

GO
-- ============================================

-- Movie: Split
DECLARE @MovieTitle VARCHAR(255) = 'Split';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Horror', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('M. Night Shyamalan');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('M. Night Shyamalan');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'James McAvoy';
SET @Character = 'Dennis / Patricia / Hedwig / The Beast / Kevin Wendell Crumb / Barry / Orwell / Jade';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anya Taylor-Joy';
SET @Character = 'Casey Cooke';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Betty Buckley';
SET @Character = 'Dr. Karen Fletcher';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Haley Lu Richardson';
SET @Character = 'Claire Benoit';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jessica Sula';
SET @Character = 'Marcia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Izzie Coffey';
SET @Character = 'Five-Year-Old Casey';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brad William Henke';
SET @Character = 'Uncle John';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sebastian Arcelus';
SET @Character = 'Casey''s Father';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Neal Huff';
SET @Character = 'Mr. Benoit';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ukee Washington';
SET @Character = 'News Anchor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('child abuse', 'philadelphia', 'pennsylvania', 'kidnapping', 'gore', 'sequel', 'stalking', 'teenage girl', 'super power', 'mental illness', 'split personality', 'multiple personality', 'traumatic childhood', 'dissociative identity disorder', 'defiant');

GO
-- ============================================

-- Movie: Signs
DECLARE @MovieTitle VARCHAR(255) = 'Signs';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Mystery', 'Sci-Fi', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('M. Night Shyamalan');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('M. Night Shyamalan');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Mel Gibson';
SET @Character = 'Graham Hess';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joaquin Phoenix';
SET @Character = 'Merrill Hess';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rory Culkin';
SET @Character = 'Morgan Hess';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Abigail Breslin';
SET @Character = 'Bo Hess';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cherry Jones';
SET @Character = 'Officer Paski';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'M. Night Shyamalan';
SET @Character = 'Ray Reddy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Patricia Kalember';
SET @Character = 'Colleen Hess';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ted Sutton';
SET @Character = 'SFC Cunningham';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Merritt Wever';
SET @Character = 'Tracey Abernathy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lanny Flaherty';
SET @Character = 'Mr. Nathan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('farm', 'faith', 'symbolism', 'miracle', 'family relationships', 'alien', 'grief', 'rural area', 'alien invasion', 'crop circle', 'alien attack', 'death of wife', 'loss of faith', 'alien encounter', 'anxious', 'suspenseful', 'foreboding');

GO
-- ============================================

-- Movie: The Gentlemen
DECLARE @MovieTitle VARCHAR(255) = 'The Gentlemen';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Comedy', 'Crime');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Guy Ritchie', 'Guy Ritchie', 'Matthew Read');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Theo James';
SET @Character = 'Eddie Horniman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kaya Scodelario';
SET @Character = 'Susie Glass';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daniel Ings';
SET @Character = 'Freddy Horniman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joely Richardson';
SET @Character = 'Lady Sabrina';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vinnie Jones';
SET @Character = 'Geoff Seacombe';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Vu';
SET @Character = 'Jimmy / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harry Goodwins';
SET @Character = 'Jack Glass';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephane Fichet';
SET @Character = 'Mr. Lawrence';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Logan Dean';
SET @Character = 'Blanket';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chanel Cresswell';
SET @Character = 'Tammy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Green Book
DECLARE @MovieTitle VARCHAR(255) = 'Green Book';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Biography', 'Comedy', 'Drama', 'Music');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Peter Farrelly');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Nick Vallelonga', 'Brian Hayes Currie', 'Peter Farrelly');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Viggo Mortensen';
SET @Character = 'Tony Lip';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mahershala Ali';
SET @Character = 'Dr. Donald Shirley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Linda Cardellini';
SET @Character = 'Dolores';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sebastian Maniscalco';
SET @Character = 'Johnny Venere';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dimiter D. Marinov';
SET @Character = 'Oleg';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mike Hatton';
SET @Character = 'George';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'P.J. Byrne';
SET @Character = 'Record Exec';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joe Cortese';
SET @Character = 'Gio Loscudo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mary Agnes Nixon';
SET @Character = 'Copa Coat Check Girl';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Von Lewis';
SET @Character = 'Bobby Rydell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('friendship', 'southern usa', 'road trip', 'racism', 'pianist', 'driver', 'lgbt', 'road movie', 'music tour', '1960s', 'roadtrip', 'gay theme', 'feel good');

GO
-- ============================================

-- Movie: The Fundamentals of Caring
DECLARE @MovieTitle VARCHAR(255) = 'The Fundamentals of Caring';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Rob Burnett');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Rob Burnett',  'Jonathan Evison');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Alex Huff';
SET @Character = 'Jodi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Donna Biscoe';
SET @Character = 'Caregiving Instructor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Rudd';
SET @Character = 'Ben Benjamin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julia Denton';
SET @Character = 'Janet';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jennifer Ehle';
SET @Character = 'Elsa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Craig Roberts';
SET @Character = 'Trevor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ashley White';
SET @Character = 'Cute Travel Channel Girl';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matthew Pruitt';
SET @Character = 'TV Reporter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alan Boell';
SET @Character = 'Courier';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Selena Gomez';
SET @Character = 'Dot';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('wheelchair', 'affectation', 'road trip', 'caregiver', 'disability', 'muscular dystrophy', 'approving', 'comforting');

GO
-- ============================================

-- Movie: The Peanut Butter Falcon
DECLARE @MovieTitle VARCHAR(255) = 'The Peanut Butter Falcon';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure', 'Comedy', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Tyler Nilson', 'Michael Schwartz');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Tyler Nilson', 'Michael Schwartz');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Zack Gottsagen';
SET @Character = 'Zak';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ann Pierce';
SET @Character = 'Rosemary';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dakota Johnson';
SET @Character = 'Eleanor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bruce Dern';
SET @Character = 'Carl';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shia LaBeouf';
SET @Character = 'Tyler';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Thomas Haden Church';
SET @Character = 'Salt Water Redneck';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rob Thomas';
SET @Character = 'Winkie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jon Bernthal';
SET @Character = 'Mark';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tim Zajaros';
SET @Character = 'Orderly';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Hawkes';
SET @Character = 'Duncan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('escape', 'runaway', 'wrestling', 'down syndrome', 'on the run', 'wrestling coach', 'raft', 'nursing home', 'disability', 'dream come true', 'escape plan', 'southern gothic');

GO
-- ============================================

-- Movie: Chennai Express
DECLARE @MovieTitle VARCHAR(255) = 'Chennai Express';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Comedy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Rohit Shetty');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('K. Subhash',  'Yunus Sajawal',  'Robin Bhatt',  'Farhad Samji', 'Sajid',  'Madhiyalagan Subbaiah');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Deepika Padukone';
SET @Character = 'Meenalochni ''Meenamma'' Azhagusundaram';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shah Rukh Khan';
SET @Character = 'Rahul Mithaiwala';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nikitin Dheer';
SET @Character = 'Tangaballi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sathyaraj';
SET @Character = 'Durgeshwara ''Durgesh'' Azhagusundaram';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mukesh Tiwari';
SET @Character = 'Inspector Shamsher Singh';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lekh Tandon';
SET @Character = 'Bhishambhar Mithaiwala';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kamini Kaushal';
SET @Character = 'Neetu Bhishambhar Mithaiwala';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Puvisha Manoharan';
SET @Character = 'Radhika ''Radha'' Azhagusundaram';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Manu Malik';
SET @Character = 'Baman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rakesh Kukreti';
SET @Character = 'Bobby';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('temple', 'grandfather', 'romantic rivalry', 'ashes', 'journey', 'bollywood');

GO
-- ============================================

-- Movie: The Dark Knight Rises
DECLARE @MovieTitle VARCHAR(255) = 'The Dark Knight Rises';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Crime', 'Drama', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Christopher Nolan');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jonathan Nolan', 'Christopher Nolan',  'Christopher Nolan', 'David S. Goyer',  'Bob Kane');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Christian Bale';
SET @Character = 'Bruce Wayne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gary Oldman';
SET @Character = 'Commissioner Gordon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Hardy';
SET @Character = 'Bane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joseph Gordon-Levitt';
SET @Character = 'Blake';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anne Hathaway';
SET @Character = 'Selina';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Marion Cotillard';
SET @Character = 'Miranda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Morgan Freeman';
SET @Character = 'Fox';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Caine';
SET @Character = 'Alfred';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matthew Modine';
SET @Character = 'Foley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alon Aboutboul';
SET @Character = 'Dr. Pavel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('airplane', 'fight', 'burglar', 'hostage', 'secret identity', 'crime fighter', 'superhero', 'villainess', 'time bomb', 'based on comic', 'cover-up', 'vigilante', 'tragic hero', 'mobile', 'terrorism', 'destruction', 'fighting', 'criminal underworld', 'cat burglar', 'flood');

GO
-- ============================================

-- Movie: Rush Hour
DECLARE @MovieTitle VARCHAR(255) = 'Rush Hour';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Comedy', 'Crime', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Brett Ratner');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Ross LaManna',  'Jim Kouf', 'Ross LaManna');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ken Leung';
SET @Character = 'Sang';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jackie Chan';
SET @Character = 'Lee';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Wilkinson';
SET @Character = 'Griffin / Juntao';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tzi Ma';
SET @Character = 'Consul Han';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert Littman';
SET @Character = 'First Caucasian';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Chow';
SET @Character = 'Dinner Guest';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julia Hsu';
SET @Character = 'Soo Yung';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Tucker';
SET @Character = 'Carter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Penn';
SET @Character = 'Clive';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kai Lennox';
SET @Character = 'Cop at Diner';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('martial arts', 'fbi', 'two man army', 'chinese mafia', 'cop', 'los angeles', 'california', 'east asian lead', 'buddy cop', 'consul', 'crime lord', 'art treasures', 'child kidnapping', 'duringcreditsstinger', 'action hero');

GO
-- ============================================

-- Movie: Watchmen
DECLARE @MovieTitle VARCHAR(255) = 'Watchmen';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Drama', 'Mystery', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Zack Snyder');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Dave Gibbons',  'David Hayter', 'Alex Tse');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Malin Akerman';
SET @Character = 'Laurie Jupiter / Silk Spectre II';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Billy Crudup';
SET @Character = 'Dr. Manhattan / Jon Osterman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matthew Goode';
SET @Character = 'Adrian Veidt / Ozymandias';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jackie Earle Haley';
SET @Character = 'Rorschach';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeffrey Dean Morgan';
SET @Character = 'Edward Blake / Comedian';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Patrick Wilson';
SET @Character = 'Dan Dreiberg / Nite Owl';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Carla Gugino';
SET @Character = 'Sally Jupiter / Silk Spectre';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matt Frewer';
SET @Character = 'Moloch';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephen McHattie';
SET @Character = 'Hollis Mason';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Laura Mennell';
SET @Character = 'Janey Slater';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('usa president', 'nuclear war', 'mass murder', 'secret identity', 'narration', 'soviet union', 'melancholy', 'retirement', 'based on comic', 'conspiracy', 'animated scene', 'doomsday', 'masked vigilante', 'doomsday clock', 'red square', '1980s', 'intense', 'admiring', 'assertive');

GO
-- ============================================

-- Movie: Sucker Punch
DECLARE @MovieTitle VARCHAR(255) = 'Sucker Punch';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Zack Snyder');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Zack Snyder', 'Steve Shibuya',  'Zack Snyder');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Emily Browning';
SET @Character = 'Babydoll';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Abbie Cornish';
SET @Character = 'Sweet Pea';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jena Malone';
SET @Character = 'Rocket';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vanessa Hudgens';
SET @Character = 'Blondie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jamie Chung';
SET @Character = 'Amber';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Carla Gugino';
SET @Character = 'Dr. Vera Gorski';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Oscar Isaac';
SET @Character = 'Blue Jones';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jon Hamm';
SET @Character = 'High Roller / Doctor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scott Glenn';
SET @Character = 'Wise Man';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Cetrone';
SET @Character = 'CJ';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('samurai', 'escape', 'asylum', 'brothel', 'sword fight', 'dragon', 'robot', 'inmate', 'lobotomy', 'war zone', 'abusive stepfather', 'rape culture', 'alternate reality');

GO
-- ============================================

-- Movie: The Theory of Everything
DECLARE @MovieTitle VARCHAR(255) = 'The Theory of Everything';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Biography', 'Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('James Marsh');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Anthony McCarten',  'Jane Hawking');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Eddie Redmayne';
SET @Character = 'Stephen Hawking';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Felicity Jones';
SET @Character = 'Jane Hawking';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Prior';
SET @Character = 'Robert Hawking - Age 17';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sophie Perry';
SET @Character = 'Lucy Hawking - Age 14';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Finlay Wright-Stephens';
SET @Character = 'Timothy Hawking - Age 8';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harry Lloyd';
SET @Character = 'Brian';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alice Orr-Ewing';
SET @Character = 'Diana King';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Thewlis';
SET @Character = 'Dennis Sciama';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Thomas Morrison';
SET @Character = 'Carter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Marcus';
SET @Character = 'Ellis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('husband wife relationship', 'biography', 'based on true story', 'physicist', 'based on memoir or autobiography', 'fictional biography', 'motor neuron disease', 'als', 'cambridge university', 'inspirational', 'admiring');

GO
-- ============================================

-- Movie: Hacksaw Ridge
DECLARE @MovieTitle VARCHAR(255) = 'Hacksaw Ridge';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Biography', 'Drama', 'History', 'War');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Mel Gibson');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Robert Schenkkan', 'Andrew Knight');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Andrew Garfield';
SET @Character = 'Desmond Doss';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Pyros';
SET @Character = 'Teach';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jacob Warner';
SET @Character = 'James Pinnick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Milo Gibson';
SET @Character = 'Lucky Ford';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Darcy Bryce';
SET @Character = 'Young Desmond';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Roman Guerriero';
SET @Character = 'Young ''Hal'' Doss';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Lugton';
SET @Character = 'Hiker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kasia Stelmach';
SET @Character = 'Hiker''s Friend';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hugo Weaving';
SET @Character = 'Tom Doss';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rachel Griffiths';
SET @Character = 'Bertha Doss';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('japan', 'hero', 'world war ii', 'abusive father', 'affectation', 'pacifism', 'bible', 'gore', 'vegetarian', 'biography', 'based on true story', 'okinawa', 'conscientious objector', 'religion', 'soldier', 'alcoholic', 'war hero', 'pacifist', 'medic', 'us military', 'battle of okinawa', 'congressional medal of honor', 'amused', 'combat medic', 'weaponless', 'seventh-day adventists');

GO
-- ============================================

-- Movie: Ali
DECLARE @MovieTitle VARCHAR(255) = 'Ali';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Biography', 'Drama', 'Sport');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Michael Mann');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Gregory Allen Howard',  'Stephen J. Rivele', 'Christopher Wilkinson', 'Eric Roth', 'Michael Mann');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Will Smith';
SET @Character = 'Cassius Clay / Muhammad Ali';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jamie Foxx';
SET @Character = 'Drew ''Bundini'' Brown';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jon Voight';
SET @Character = 'Howard Cosell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mario Van Peebles';
SET @Character = 'Malcolm X';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ron Silver';
SET @Character = 'Angelo Dundee';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeffrey Wright';
SET @Character = 'Howard Bingham';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mykelti Williamson';
SET @Character = 'Don King';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jada Pinkett Smith';
SET @Character = 'Sonji';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nona Gaye';
SET @Character = 'Belinda Ali';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Michele';
SET @Character = 'Veronica Porche';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('transporter', 'boxer', 'affectation', 'biography', 'angry', 'detached', 'boxing', 'candid', 'dramatic', 'admiring', 'adoring', 'ambivalent', 'antagonistic', 'approving', 'assertive', 'celebratory', 'empathetic');

GO
-- ============================================

-- Movie: BlacKkKlansman
DECLARE @MovieTitle VARCHAR(255) = 'BlacKkKlansman';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Biography', 'Comedy', 'Crime', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Spike Lee');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Charlie Wachtel', 'David Rabinowitz', 'Kevin Willmott', 'Spike Lee',  'Ron Stallworth');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Alec Baldwin';
SET @Character = 'Dr. Kennebrew Beauregard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John David Washington';
SET @Character = 'Ron Stallworth';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Isiah Whitlock Jr.';
SET @Character = 'Mr. Turrentine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert John Burke';
SET @Character = 'Chief Bridges';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brian Tarantina';
SET @Character = 'Officer Clay Mulaney';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Arthur J. Nascarella';
SET @Character = 'Officer Wheaton';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ken Garito';
SET @Character = 'Sergeant Trapp';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Frederick Weller';
SET @Character = 'Master Patrolman Andy Landers';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adam Driver';
SET @Character = 'Flip Zimmerman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Buscemi';
SET @Character = 'Jimmy Creek';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('based on novel or book', 'ku klux klan', '1970s', 'black panther party', 'biography', 'based on true story', 'undercover cop', 'racism', 'based on memoir or autobiography', 'revisionist history', 'white supremacy', 'thoughtful', 'defiant', 'kkk', 'kkk rally');

GO
-- ============================================

-- Movie: The Trial of the Chicago 7
DECLARE @MovieTitle VARCHAR(255) = 'The Trial of the Chicago 7';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'History', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Aaron Sorkin');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Aaron Sorkin');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Eddie Redmayne';
SET @Character = 'Tom Hayden';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alex Sharp';
SET @Character = 'Rennie Davis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sacha Baron Cohen';
SET @Character = 'Abbie Hoffman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeremy Strong';
SET @Character = 'Jerry Rubin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Carroll Lynch';
SET @Character = 'David Dellinger';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yahya Abdul-Mateen II';
SET @Character = 'Bobby Seale';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Rylance';
SET @Character = 'William Kunstler';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joseph Gordon-Levitt';
SET @Character = 'Richard Schultz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ben Shenkman';
SET @Character = 'Leonard Weinglass';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'J.C. MacKenzie';
SET @Character = 'Thomas Foran';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('chicago', 'illinois', 'right and justice', 'political activism', 'black panther party', 'based on true story', 'black activist', 'counter-culture', 'historical fiction', 'activist', '1960s', 'courtroom drama');

GO
-- ============================================

-- Movie: Palm Springs
DECLARE @MovieTitle VARCHAR(255) = 'Palm Springs';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Fantasy', 'Mystery', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Max Barbakow');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Andy Siara',  'Max Barbakow',  'Andy Siara');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Andy Samberg';
SET @Character = 'Nyles';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cristin Milioti';
SET @Character = 'Sarah';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'J.K. Simmons';
SET @Character = 'Roy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peter Gallagher';
SET @Character = 'Howard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Meredith Hagner';
SET @Character = 'Misty';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Camila Mendes';
SET @Character = 'Tala';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tyler Hoechlin';
SET @Character = 'Abe';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Pang';
SET @Character = 'Trevor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jacqueline Obradors';
SET @Character = 'Pia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'June Squibb';
SET @Character = 'Nana Schlieffen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('alcohol', 'cave', 'time travel', 'earthquake', 'swimming pool', 'drug use', 'palm springs', 'time loop', 'nemesis', 'wedding', 'maid of honor', 'carefree', 'older sister', 'groundhog day', 'stuck', 'absurd', 'sister''s wedding', 'chance encounter');

GO
-- ============================================

-- Movie: Liar Liar
DECLARE @MovieTitle VARCHAR(255) = 'Liar Liar';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Tom Shadyac');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Paul Guay', 'Stephen Mazur');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jim Carrey';
SET @Character = 'Fletcher Reede';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maura Tierney';
SET @Character = 'Audrey Reede';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Justin Cooper';
SET @Character = 'Max Reede';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cary Elwes';
SET @Character = 'Jerry';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anne Haney';
SET @Character = 'Greta';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jennifer Tilly';
SET @Character = 'Samantha Cole';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amanda Donohoe';
SET @Character = 'Miranda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jason Bernard';
SET @Character = 'Judge Marshall Stevens';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Swoosie Kurtz';
SET @Character = 'Dana Appleton';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mitchell Ryan';
SET @Character = 'Mr. Allan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('california', 'workaholic', 'birthday', 'truth', 'lie', 'wish', 'legal drama');

GO
-- ============================================

-- Movie: Solo Leveling
DECLARE @MovieTitle VARCHAR(255) = 'Solo Leveling';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Action', 'Adventure', 'Fantasy');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Chugong', 'Chugong', 'H-Goon');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Taito Ban';
SET @Character = 'Jin-woo Sung / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jimmy Tandel';
SET @Character = 'Classmate';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Makoto Furukawa';
SET @Character = 'Jin-chul Woo / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Haruna Mikawa';
SET @Character = 'Jin-ah Sung / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daisuke Hirakawa';
SET @Character = 'Choi Jong-in / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ryosuke Higa';
SET @Character = 'Jeong-ho Kang / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Banj√¥ Ginga';
SET @Character = 'Go Gun-hee / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Genta Nakamura';
SET @Character = 'Jin-ho Yoo / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ikuto Kanemasa';
SET @Character = 'Additional Voice / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Reina Ueda';
SET @Character = 'Hae-in Cha / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Teen Titans GO! To the Movies
DECLARE @MovieTitle VARCHAR(255) = 'Teen Titans GO! To the Movies';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Action', 'Adventure', 'Comedy', 'Family', 'Fantasy', 'Musical', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Aaron Horvath', 'Peter Rida Michail');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Michael Jelenic', 'Aaron Horvath',  'Jerry Siegel', 'Joe Shuster',  'Marv Wolfman', 'George P√©rez', 'Arnold Drake',  'Bob Kane', 'Bill Finger',  'William Moulton Marston');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Greg Cipes';
SET @Character = 'Beast Boy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scott Menville';
SET @Character = 'Robin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Khary Payton';
SET @Character = 'Cyborg';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tara Strong';
SET @Character = 'Raven';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hynden Walch';
SET @Character = 'Starfire';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Will Arnett';
SET @Character = 'Slade';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kristen Bell';
SET @Character = 'Jade Wilson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eric Bauza';
SET @Character = 'Aquaman / Stan Lee''s Assistant';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Bolton';
SET @Character = 'Tiger';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kal-El Cage';
SET @Character = 'Young Bruce Wayne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('movie business', 'dc comics', 'superhero', 'time travel', 'slapstick comedy', 'hollywood', 'super power', 'aftercreditsstinger', 'duringcreditsstinger', 'based on tv series');

GO
-- ============================================

-- Movie: Ford v Ferrari
DECLARE @MovieTitle VARCHAR(255) = 'Ford v Ferrari';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Biography', 'Drama', 'Sport');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('James Mangold');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jez Butterworth', 'John-Henry Butterworth', 'Jason Keller');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Matt Damon';
SET @Character = 'Carroll Shelby';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christian Bale';
SET @Character = 'Ken Miles';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jon Bernthal';
SET @Character = 'Lee Iacocca';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Caitr√≠ona Balfe';
SET @Character = 'Mollie Miles';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Josh Lucas';
SET @Character = 'Leo Beebe';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Noah Jupe';
SET @Character = 'Peter Miles';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tracy Letts';
SET @Character = 'Henry Ford II';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Remo Girone';
SET @Character = 'Enzo Ferrari';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ray McKinnon';
SET @Character = 'Phil Remington';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'JJ Feild';
SET @Character = 'Roy Lunn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('based on novel or book', 'car race', 'sports', 'car mechanic', 'biography', 'based on true story', 'le mans', 'racing', 'race car driver', 'aggressive', '1960s', 'powerful');

GO
-- ============================================

-- Movie: Do Revenge
DECLARE @MovieTitle VARCHAR(255) = 'Do Revenge';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Jennifer Kaytin Robinson');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Celeste Ballard', 'Jennifer Kaytin Robinson');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Camila Mendes';
SET @Character = 'Drea';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maya Hawke';
SET @Character = 'Eleanor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Austin Abrams';
SET @Character = 'Max';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rish Shah';
SET @Character = 'Russ';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Talia Ryder';
SET @Character = 'Gabbi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alisha Boe';
SET @Character = 'Tara';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ava Capri';
SET @Character = 'Carissa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'J.D.';
SET @Character = 'Elliot';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paris Berelc';
SET @Character = 'Meghan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maia Reficco';
SET @Character = 'Montana';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('high school', 'friendship', 'female friendship', 'female protagonist', 'campy', 'teen comedy', 'lgbt', 'lgbt teen', 'teenage romance', 'teen drama', 'satirical', 'generation z', 'gay theme', 'lesbian', 'sapphic', 'amused');

GO
-- ============================================

-- Movie: All the Bright Places
DECLARE @MovieTitle VARCHAR(255) = 'All the Bright Places';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Brett Haley');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jennifer Niven', 'Liz Hannah',  'Jennifer Niven');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Elle Fanning';
SET @Character = 'Violet';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Justice Smith';
SET @Character = 'Finch';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alexandra Shipp';
SET @Character = 'Kate';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kelli O''Hara';
SET @Character = 'Sheryl';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lamar Johnson';
SET @Character = 'Charlie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Virginia Gardner';
SET @Character = 'Amanda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Felix Mallard';
SET @Character = 'Roamer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sofia Hasmik';
SET @Character = 'Brenda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Keegan-Michael Key';
SET @Character = 'Embry';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Luke Wilson';
SET @Character = 'James';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('suicide', 'indiana', 'usa', 'based on novel or book', 'based on young adult novel');

GO
-- ============================================

-- Movie: Seeking a Friend for the End of the World
DECLARE @MovieTitle VARCHAR(255) = 'Seeking a Friend for the End of the World';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure', 'Comedy', 'Drama', 'Romance', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Lorene Scafaria');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Lorene Scafaria');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Steve Carell';
SET @Character = 'Dodge';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Keira Knightley';
SET @Character = 'Penny';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adam Brody';
SET @Character = 'Owen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Connie Britton';
SET @Character = 'Diane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Roger Aaron Brown';
SET @Character = 'Alfred';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rob Huebel';
SET @Character = 'Jeremy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Trisha Gorman';
SET @Character = 'Crying Woman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nancy Carell';
SET @Character = 'Linda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Moses';
SET @Character = 'Anchorman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tonita Castro';
SET @Character = 'Elsa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('asteroid', 'road trip', 'end of the world', 'woman director');

GO
-- ============================================

-- Movie: Bruce Almighty
DECLARE @MovieTitle VARCHAR(255) = 'Bruce Almighty';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Tom Shadyac');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Steve Koren', 'Mark O''Keefe',  'Steve Koren', 'Mark O''Keefe', 'Steve Oedekerk');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jim Carrey';
SET @Character = 'Bruce Nolan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Morgan Freeman';
SET @Character = 'God';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jennifer Aniston';
SET @Character = 'Grace Connelly';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Philip Baker Hall';
SET @Character = 'Jack Baylor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Catherine Bell';
SET @Character = 'Susan Ortega';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lisa Ann Walter';
SET @Character = 'Debbie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steve Carell';
SET @Character = 'Evan Baxter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nora Dunn';
SET @Character = 'Ally Loman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eddie Jemison';
SET @Character = 'Bobby';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Satterfield';
SET @Character = 'Dallas Coleman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new love', 'lovesickness', 'moon', 'street gang', 'moses', 'faith', 'prayer', 'christianity', 'journalism', 'car crash', 'god', 'religion', 'relationship', 'news reporter', 'female journalist', 'religious conflict', 'responsibility', 'praying', 'almighty');

GO
-- ============================================

-- Movie: Central Intelligence
DECLARE @MovieTitle VARCHAR(255) = 'Central Intelligence';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Comedy', 'Crime');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Rawson Marshall Thurber');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Ike Barinholtz', 'David Stassen', 'Rawson Marshall Thurber',  'Ike Barinholtz', 'David Stassen');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Dwayne Johnson';
SET @Character = 'Bob Stone';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kevin Hart';
SET @Character = 'Calvin Joyner';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amy Ryan';
SET @Character = 'Agent Pamela Harris';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Danielle Nicolet';
SET @Character = 'Maggie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jason Bateman';
SET @Character = 'Trevor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aaron Paul';
SET @Character = 'Phil';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ryan Hansen';
SET @Character = 'Steve';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tim Griffin';
SET @Character = 'Agent Stan Mitchell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Timothy John Smith';
SET @Character = 'Agent Nick Cooper';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sione Kelepi';
SET @Character = 'Young Robbie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('central intelligence agency (cia)', 'espionage', 'spy', 'secret agent', 'high school reunion', 'reconnect', 'accountant', 'radical transformation', 'high school classmates', 'glory days');

GO
-- ============================================

-- Movie: The Lego Batman Movie
DECLARE @MovieTitle VARCHAR(255) = 'The Lego Batman Movie';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Action', 'Adventure', 'Comedy', 'Family', 'Fantasy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Chris McKay');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Seth Grahame-Smith', 'Chris McKenna', 'Erik Sommers', 'Jared Stern', 'John Whittington',  'Seth Grahame-Smith',  'Bob Kane', 'Bill Finger',  'Jerry Siegel', 'Joe Shuster',  'William Moulton Marston',  'Ole Kirk Christiansen', 'Godtfred Kirk Christiansen', 'Jens Nygaard Knudsen',  'Harry G. Peter');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Will Arnett';
SET @Character = 'Batman / Bruce Wayne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Cera';
SET @Character = 'Robin / Dick Grayson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rosario Dawson';
SET @Character = 'Batgirl / Barbara Gordon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ralph Fiennes';
SET @Character = 'Alfred Pennyworth';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Siri';
SET @Character = '''Puter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zach Galifianakis';
SET @Character = 'Joker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jenny Slate';
SET @Character = 'Harley Quinn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jason Mantzoukas';
SET @Character = 'Scarecrow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Conan O''Brien';
SET @Character = 'The Riddler';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Doug Benson';
SET @Character = 'Bane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('superhero', 'based on comic', 'based on toy', 'spin off', 'super power', 'lego', 'sarcastic', 'sardonic', 'wry');

GO
-- ============================================

-- Movie: Anand
DECLARE @MovieTitle VARCHAR(255) = 'Anand';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Sekhar Kammula');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Sekhar Kammula');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Raja';
SET @Character = 'Anand';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kamalinee Mukherjee';
SET @Character = 'Roopa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anuj Gurwara';
SET @Character = 'Rahul';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Master Abhijit';
SET @Character = '';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Baby Bakita';
SET @Character = 'Samata';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Satya Krishnan';
SET @Character = 'Anita';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gopichand Lagadapati';
SET @Character = 'Ram';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gururaj Manepalli';
SET @Character = '';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Melkote';
SET @Character = '';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Srikanth Polisetti';
SET @Character = 'Young Roopa''s brother';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

GO
-- ============================================

-- Movie: Zombieland
DECLARE @MovieTitle VARCHAR(255) = 'Zombieland';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Comedy', 'Horror');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Ruben Fleischer');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Rhett Reese', 'Paul Wernick');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jesse Eisenberg';
SET @Character = 'Columbus';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Woody Harrelson';
SET @Character = 'Tallahassee';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emma Stone';
SET @Character = 'Wichita';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Abigail Breslin';
SET @Character = 'Little Rock';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amber Heard';
SET @Character = '406';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bill Murray';
SET @Character = 'Bill Murray';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Derek Graf';
SET @Character = 'Clown Zombie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cesar Aguirre';
SET @Character = 'Customer at the Pump';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jacob G. Akins';
SET @Character = 'Banjo Zombie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hunter Aldridge';
SET @Character = 'Best Man';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('washington dc', 'usa', 'sibling relationship', 'circus', 'post-apocalyptic future', 'gore', 'parody', 'road trip', 'zombie', 'survival horror', 'amusement park', 'twinkie', 'body count', 'zombification', 'disposing of a dead body', 'loner', 'aftercreditsstinger', 'zombie apocalypse', 'fear of clowns', 'absurd', 'dramatic', 'enthusiastic', 'foreboding', 'frightened', 'sarcastic');

GO
-- ============================================

-- Movie: Piku
DECLARE @MovieTitle VARCHAR(255) = 'Piku';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Shoojit Sircar');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Juhi Chaturvedi');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Deepika Padukone';
SET @Character = 'Piku Banerjee';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amitabh Bachchan';
SET @Character = 'Bhaskor Banerjee';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Irrfan Khan';
SET @Character = 'Rana';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Moushumi Chatterjee';
SET @Character = 'Chhobi Maashi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Raghubir Yadav';
SET @Character = 'Dr. Srivastava';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jisshu Sengupta';
SET @Character = 'Syed';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Balendar Singh';
SET @Character = 'Budhan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Swaroopa Ghosh';
SET @Character = 'Moni Kaki';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sajal Bhattacharya';
SET @Character = 'Binod Kaka';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rupsa Banerjee';
SET @Character = 'Eisha';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('bollywood');

GO
-- ============================================

-- Movie: Man of Steel
DECLARE @MovieTitle VARCHAR(255) = 'Man of Steel';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Zack Snyder');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('David S. Goyer',  'David S. Goyer', 'Christopher Nolan',  'Jerry Siegel', 'Joe Shuster');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Henry Cavill';
SET @Character = 'Clark Kent / Kal-El';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amy Adams';
SET @Character = 'Lois Lane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Shannon';
SET @Character = 'General Zod';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Diane Lane';
SET @Character = 'Martha Kent';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Russell Crowe';
SET @Character = 'Jor-El';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Antje Traue';
SET @Character = 'Faora-Ul';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harry Lennix';
SET @Character = 'General Swanwick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Schiff';
SET @Character = 'Dr. Emil Hamilton';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christopher Meloni';
SET @Character = 'Colonel Nathan Hardy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kevin Costner';
SET @Character = 'Jonathan Kent';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('saving the world', 'flying', 'hope', 'superhero', 'based on comic', 'alien planet', 'superhuman', 'alien invasion', 'super power', 'mysterious force', 'reboot', 'save the day', 'dc extended universe (dceu)', 'save the planet', 'origin story', 'alien spaceship');

GO
-- ============================================

-- Movie: Batman v Superman: Dawn of Justice
DECLARE @MovieTitle VARCHAR(255) = 'Batman v Superman: Dawn of Justice';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Zack Snyder');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Bob Kane', 'Bill Finger',  'Jerry Siegel', 'Joe Shuster',  'William Moulton Marston',  'Chris Terrio',  'David S. Goyer');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ben Affleck';
SET @Character = 'Bruce Wayne / Batman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Henry Cavill';
SET @Character = 'Clark Kent / Superman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amy Adams';
SET @Character = 'Lois';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jesse Eisenberg';
SET @Character = 'Lex Luthor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Diane Lane';
SET @Character = 'Martha Kent';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Laurence Fishburne';
SET @Character = 'Perry White';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeremy Irons';
SET @Character = 'Alfred';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Holly Hunter';
SET @Character = 'Senator Finch';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gal Gadot';
SET @Character = 'Diana Prince / Wonder Woman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scoot McNairy';
SET @Character = 'Wallace Keefe';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('superhero', 'based on comic', 'revenge', 'vigilante', 'leading man', 'super power', 'dc extended universe (dceu)', 'man vs man', 'leading men');

GO
-- ============================================

-- Movie: Zack Snyder''s Justice League
DECLARE @MovieTitle VARCHAR(255) = 'Zack Snyder''s Justice League';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Fantasy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Zack Snyder');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jerry Siegel', 'Joe Shuster',  'Zack Snyder', 'Chris Terrio', 'Will Beall',  'Chris Terrio',  'Gardner Fox',  'Bob Kane', 'Bill Finger',  'William Moulton Marston',  'Jack Kirby');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ben Affleck';
SET @Character = 'Batman / Bruce Wayne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Henry Cavill';
SET @Character = 'Superman / Clark Kent';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amy Adams';
SET @Character = 'Lois Lane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gal Gadot';
SET @Character = 'Wonder Woman / Diana Prince';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ray Fisher';
SET @Character = 'Cyborg / Victor Stone';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jason Momoa';
SET @Character = 'Aquaman / Arthur Curry';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ezra Miller';
SET @Character = 'The Flash / Barry Allen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Willem Dafoe';
SET @Character = 'Vulko';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jesse Eisenberg';
SET @Character = 'Lex Luthor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeremy Irons';
SET @Character = 'Alfred';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('saving the world', 'superhero', 'resurrection', 'based on comic', 'superhero team', 'planet invasion', 'action hero', 'dc extended universe (dceu)', 'superhero teamup');

GO
-- ============================================

-- Movie: Alita: Battle Angel
DECLARE @MovieTitle VARCHAR(255) = 'Alita: Battle Angel';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Robert Rodriguez');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('James Cameron', 'Laeta Kalogridis',  'Yukito Kishiro');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Rosa Salazar';
SET @Character = 'Alita';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christoph Waltz';
SET @Character = 'Dr. Dyson Ido';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jennifer Connelly';
SET @Character = 'Chiren';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mahershala Ali';
SET @Character = 'Vector';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ed Skrein';
SET @Character = 'Zapan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jackie Earle Haley';
SET @Character = 'Grewishka';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Keean Johnson';
SET @Character = 'Hugo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jorge Lendeborg Jr.';
SET @Character = 'Tanji';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lana Condor';
SET @Character = 'Koyomi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Idara Victor';
SET @Character = 'Nurse Gerhad';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('martial arts', 'bounty hunter', 'dystopia', 'extreme sports', 'superhero', 'cyberpunk', 'based on manga', 'female cyborg', 'live action remake', 'floating city', 'gunnm', 'suspenseful', 'assertive', 'enraged', 'straightforward');

GO
-- ============================================

-- Movie: The Martian
DECLARE @MovieTitle VARCHAR(255) = 'The Martian';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure', 'Drama', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Ridley Scott');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Drew Goddard',  'Andy Weir');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Matt Damon';
SET @Character = 'Mark Watney';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jessica Chastain';
SET @Character = 'Melissa Lewis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kristen Wiig';
SET @Character = 'Annie Montrose';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeff Daniels';
SET @Character = 'Teddy Sanders';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Pe√±a';
SET @Character = 'Rick Martinez';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sean Bean';
SET @Character = 'Mitch Henderson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kate Mara';
SET @Character = 'Beth Johanssen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sebastian Stan';
SET @Character = 'Chris Beck';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aksel Hennie';
SET @Character = 'Alex Vogel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chiwetel Ejiofor';
SET @Character = 'Vincent Kapoor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('spacecraft', 'planet mars', 'based on novel or book', 'nasa', 'isolation', 'botanist', 'alone', 'survival', 'space', 'engineering', 'stranded', 'astronaut', 'struggle for survival', 'duringcreditsstinger', 'deep space', 'potatoes', '2030s', 'mars', 'awestruck', 'defiant');

GO
-- ============================================

-- Movie: Meet Joe Black
DECLARE @MovieTitle VARCHAR(255) = 'Meet Joe Black';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Fantasy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Martin Brest');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Ron Osborn', 'Jeff Reno', 'Kevin Wade', 'Bo Goldman',  'Alberto Casella',  'Walter Ferris',  'Maxwell Anderson', 'Gladys Lehman');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Brad Pitt';
SET @Character = 'Joe Black / Young Man in Coffee Shop';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anthony Hopkins';
SET @Character = 'William Parrish';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Claire Forlani';
SET @Character = 'Susan Parrish';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jake Weber';
SET @Character = 'Drew';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Marcia Gay Harden';
SET @Character = 'Allison';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeffrey Tambor';
SET @Character = 'Quince';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David S. Howard';
SET @Character = 'Eddie Sloane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lois Kelly-Miller';
SET @Character = 'Jamaican Woman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jahnni St. John';
SET @Character = 'Jamaican Woman''s Daughter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Clarke';
SET @Character = 'Butler';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('life and death', 'broken engagement', 'love at first sight', 'fireworks', 'religion and supernatural', 'based on play or musical', 'fate', 'teenage crush', 'grim reaper', 'doctor', 'millionaire', 'death personified', 'death incarnate', 'angel of death', 'encontro marcado', 'romantic', 'appreciative', 'compassionate');

GO
-- ============================================

-- Movie: Forrest Gump
DECLARE @MovieTitle VARCHAR(255) = 'Forrest Gump';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Robert Zemeckis');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Winston Groom',  'Eric Roth');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tom Hanks';
SET @Character = 'Forrest Gump';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rebecca Williams';
SET @Character = 'Nurse at Park Bench';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sally Field';
SET @Character = 'Mrs. Gump';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Conner Humphreys';
SET @Character = 'Young Forrest';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harold G. Herthum';
SET @Character = 'Doctor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'George Kelly';
SET @Character = 'Barber';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bob Penny';
SET @Character = 'Crony';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Randall';
SET @Character = 'Crony';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sam Anderson';
SET @Character = 'Principal';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Margo Moorer';
SET @Character = 'Louise';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new year''s eve', 'vietnam war', 'vietnam veteran', 'mentally disabled', 'friendship', 'usa president', 'washington dc', 'usa', 'post-traumatic stress disorder (ptsd)', 'waitress', 'based on novel or book', 'hippie', 'single parent', 'parent child relationship', 'optimism', '1970s', 'drug addiction', 'autism', 'alabama', 'black panther party', 'bus stop', 'family relationships', 'chameleon', 'single mother', 'military', 'anti war protest', '1960s', 'college american football', 'mother son relationship', 'america', 'feel-good');

GO
-- ============================================

-- Movie: Rockstar
DECLARE @MovieTitle VARCHAR(255) = 'Rockstar';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Music', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Imtiaz Ali');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Imtiaz Ali',  'Muazzam Beg');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ranbir Kapoor';
SET @Character = 'Janardan Jakhar';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nargis Fakhri';
SET @Character = 'Heer Kaul';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shammi Kapoor';
SET @Character = 'Ustad Jameel Khan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kumud Mishra';
SET @Character = 'Khatana';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Piyush Mishra';
SET @Character = 'Dhingra';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shernaz Patel';
SET @Character = 'Neena Kaul';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aditi Rao Hydari';
SET @Character = 'Sheena';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sanjana Sanghi';
SET @Character = 'Mandy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shikha Jain';
SET @Character = 'Meena';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jaideep Ahlawat';
SET @Character = 'Jordan''s brother';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('adultery', 'musical', 'terminal illness', 'rebellious youth', 'heartbreak', 'rock musical', 'rockstar', 'bollywood');

GO
-- ============================================

-- Movie: Slumdog Millionaire
DECLARE @MovieTitle VARCHAR(255) = 'Slumdog Millionaire';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Danny Boyle', 'Loveleen Tandan');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Simon Beaufoy',  'Vikas Swarup');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Dev Patel';
SET @Character = 'Older Jamal';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Saurabh Shukla';
SET @Character = 'Sergeant Srinivas';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anil Kapoor';
SET @Character = 'Prem';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Raj Zutshi';
SET @Character = 'Director';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeneva Talwar';
SET @Character = 'Vision Mixer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Freida Pinto';
SET @Character = 'Older Latika';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Irrfan Khan';
SET @Character = 'Police Inspector';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Azharuddin Mohammed Ismail';
SET @Character = 'Youngest Salim';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ayush Mahesh Khedekar';
SET @Character = 'Youngest Jamal';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jira Banjara';
SET @Character = 'Airport Security Guard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('based on novel or book', 'slum', 'cheating', 'suspicion', 'mumbai (bombay)', 'india', 'game show', 'quiz', 'orphan', 'duringcreditsstinger', 'taj mahal', 'india');

GO
-- ============================================

-- Movie: Crazy, Stupid, Love.
DECLARE @MovieTitle VARCHAR(255) = 'Crazy, Stupid, Love.';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Glenn Ficarra', 'John Requa');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Dan Fogelman');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Steve Carell';
SET @Character = 'Cal';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ryan Gosling';
SET @Character = 'Jacob';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julianne Moore';
SET @Character = 'Emily';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emma Stone';
SET @Character = 'Hannah';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lio Tipton';
SET @Character = 'Jessica';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jonah Bobo';
SET @Character = 'Robbie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joey King';
SET @Character = 'Molly';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Marisa Tomei';
SET @Character = 'Kate';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Beth Littleford';
SET @Character = 'Claire';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Carroll Lynch';
SET @Character = 'Bernie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('friendship', 'soulmates', 'marriage crisis', 'midlife crisis', 'babysitter', 'womanizer', 'law school', 'los angeles', 'california', 'middle school', 'relationship', 'love affair', 'divorcee', 'teenage love');

GO
-- ============================================

-- Movie: Silver Linings Playbook
DECLARE @MovieTitle VARCHAR(255) = 'Silver Linings Playbook';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('David O. Russell');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('David O. Russell',  'Matthew Quick');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Bradley Cooper';
SET @Character = 'Pat';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jennifer Lawrence';
SET @Character = 'Tiffany Maxwell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert De Niro';
SET @Character = 'Pat Sr.';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jacki Weaver';
SET @Character = 'Dolores Solitano';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Tucker';
SET @Character = 'Danny';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anupam Kher';
SET @Character = 'Dr. Cliff Patel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Ortiz';
SET @Character = 'Ronnie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shea Whigham';
SET @Character = 'Jake';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julia Stiles';
SET @Character = 'Veronica';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Herman';
SET @Character = 'Randy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('depression', 'infidelity', 'dancing', 'friendship', 'philadelphia', 'pennsylvania', 'based on novel or book', 'widow', 'letter', 'neighbor', 'mental illness', 'ex-wife', 'institutionalization', 'death of husband', 'bipolar', 'restraining order', 'father son relationship', 'male mental health');

GO
-- ============================================

-- Movie: Punch-Drunk Love
DECLARE @MovieTitle VARCHAR(255) = 'Punch-Drunk Love';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Romance', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Paul Thomas Anderson');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Paul Thomas Anderson');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Adam Sandler';
SET @Character = 'Barry Egan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jason Andrews';
SET @Character = 'Operator Carter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Don McManus';
SET @Character = 'Plastic';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emily Watson';
SET @Character = 'Lena Leonard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Luis Guzm√°n';
SET @Character = 'Lance';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Schrempf';
SET @Character = 'Customer #1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Seann Conway';
SET @Character = 'Customer #2';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rico Bueno';
SET @Character = 'Rico';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hazel Mailloux';
SET @Character = 'Rhonda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Karen Kilgariff';
SET @Character = 'Anna';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('depression', 'sibling relationship', 'businessman', 'shyness', 'hawaii', 'dysfunctional family', 'psychological abuse', 'los angeles', 'california', 'scam artist', 'telephone sex', 'pudding', 'sweepstakes', 'harmonium', 'absurdist', 'social anxiety', 'emotional abuse', 'anxious', 'provo utah', 'scam call center', 'overbearing sister', 'romantic');

GO
-- ============================================

-- Movie: Dan in Real Life
DECLARE @MovieTitle VARCHAR(255) = 'Dan in Real Life';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Peter Hedges');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Pierce Gardner', 'Peter Hedges');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Steve Carell';
SET @Character = 'Dan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Juliette Binoche';
SET @Character = 'Marie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dane Cook';
SET @Character = 'Mitch';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alison Pill';
SET @Character = 'Jane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Britt Robertson';
SET @Character = 'Cara';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Marlene Lawston';
SET @Character = 'Lilly';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dianne Wiest';
SET @Character = 'Nana';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Mahoney';
SET @Character = 'Poppy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Norbert Leo Butz';
SET @Character = 'Clay';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amy Ryan';
SET @Character = 'Eileen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('daughter', 'bookshop', 'relationship', 'widower', 'shore', 'advice columnist', 'single father', 'duringcreditsstinger');

GO
-- ============================================

-- Movie: A Walk to Remember
DECLARE @MovieTitle VARCHAR(255) = 'A Walk to Remember';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Adam Shankman');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Nicholas Sparks',  'Karen Janszen');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Shane West';
SET @Character = 'Landon Carter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mandy Moore';
SET @Character = 'Jamie Sullivan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peter Coyote';
SET @Character = 'Reverend Sullivan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daryl Hannah';
SET @Character = 'Cynthia Carter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lauren German';
SET @Character = 'Belinda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Clayne Crawford';
SET @Character = 'Dean';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Al Thompson';
SET @Character = 'Eric';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paz de la Huerta';
SET @Character = 'Tracie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jonathan Parks Jordan';
SET @Character = 'Walker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matt Lutz';
SET @Character = 'Clay Gephardt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('high school', 'based on novel or book', 'theatre group', 'north carolina', 'romance', 'coming of age', 'cancer', 'tragic love', 'valentine''s day', 'nostalgic', 'star crossed lovers', 'teen drama', 'sentimental', 'romantic', 'adoring', 'distressing', 'empathetic', 'hopeful');

GO
-- ============================================

-- Movie: Barbie
DECLARE @MovieTitle VARCHAR(255) = 'Barbie';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure', 'Comedy', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Greta Gerwig');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Greta Gerwig', 'Noah Baumbach');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Margot Robbie';
SET @Character = 'Barbie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Issa Rae';
SET @Character = 'Barbie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kate McKinnon';
SET @Character = 'Weird Barbie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alexandra Shipp';
SET @Character = 'Barbie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emma Mackey';
SET @Character = 'Barbie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hari Nef';
SET @Character = 'Barbie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sharon Rooney';
SET @Character = 'Barbie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ana Cruz Kayne';
SET @Character = 'Barbie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ritu Arya';
SET @Character = 'Barbie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dua Lipa';
SET @Character = 'Barbie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('feminism', 'satire', 'patriarchy', 'based on toy', 'female protagonist', 'doll', 'fantasy world', 'motherhood', 'existentialism', 'woman director', 'mother daughter relationship', 'playful', 'gender discrimination', 'sentimental', 'hilarious', 'secret world', 'whimsical', 'amused', 'audacious', 'celebratory', 'sarcastic', 'sympathetic', 'matel');

GO
-- ============================================

-- Movie: Barfi!
DECLARE @MovieTitle VARCHAR(255) = 'Barfi!';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Anurag Basu');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Anurag Basu', 'Tani Basu',  'Sanjeev Dutta');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ranbir Kapoor';
SET @Character = 'Murphy / Barfi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Priyanka Chopra Jonas';
SET @Character = 'Jhilmil Chatterjee';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ileana D''Cruz';
SET @Character = 'Shruti Ghosh Sengupta';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amar Gupta';
SET @Character = 'Actor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Saurabh Shukla';
SET @Character = 'Sudhanshu Dutta';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Roopa Ganguly';
SET @Character = 'Shruti''s mother';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ashish Vidyarthi';
SET @Character = 'Mr. Chatterjee';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bholaraj Sapkota';
SET @Character = 'Bhola';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jisshu Sengupta';
SET @Character = 'Ranjeet Sengupta';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Haradhan Bannerjee';
SET @Character = 'Daju';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('deaf-mute', 'autism', 'love', 'wedding', 'handicapped', 'bollywood');

GO
-- ============================================

-- Movie: Les Mis√©rables
DECLARE @MovieTitle VARCHAR(255) = 'Les Mis√©rables';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Musical', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Tom Hooper');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('William Nicholson', 'Alain Boublil', 'Claude-Michel Sch√∂nberg', 'Herbert Kretzmer',  'Alain Boublil', 'Claude-Michel Sch√∂nberg',  'Victor Hugo');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Hugh Jackman';
SET @Character = 'Jean Valjean';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Russell Crowe';
SET @Character = 'Javert';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anne Hathaway';
SET @Character = 'Fantine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amanda Seyfried';
SET @Character = 'Cosette';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sacha Baron Cohen';
SET @Character = 'Th√©nardier';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Helena Bonham Carter';
SET @Character = 'Madame Th√©nardier';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eddie Redmayne';
SET @Character = 'Marius';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aaron Tveit';
SET @Character = 'Enjolras';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samantha Barks';
SET @Character = '√âponine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daniel Huttlestone';
SET @Character = 'Gavroche';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('rebellion', 'army', 'robbery', 'france', 'based on novel or book', 'love triangle', 'love at first sight', 'brothel', 'mayor', 'french revolution', 'musical', 'arrest', 'based on play or musical', 'barricade', 'wedding', 'prostitution', 'falling in love', 'corpse', 'parole', 'convict', 'forced prostitution', 'police inspector', 'girl disguised as boy', 'historical drama', '19th century', 'out of wedlock child', 'historical romance', 'death of a child', 'abusive family', 'corrupt businessman', 'indifferent');

GO
-- ============================================

-- Movie: 21 Jump Street
DECLARE @MovieTitle VARCHAR(255) = '21 Jump Street';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Comedy', 'Crime');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Phil Lord', 'Christopher Miller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Michael Bacall',  'Michael Bacall', 'Jonah Hill',  'Patrick Hasburgh', 'Stephen J. Cannell');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jonah Hill';
SET @Character = 'Schmidt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Channing Tatum';
SET @Character = 'Jenko';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brie Larson';
SET @Character = 'Molly Tracey';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dave Franco';
SET @Character = 'Eric Molson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rob Riggle';
SET @Character = 'Mr. Walters';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'DeRay Davis';
SET @Character = 'Domingo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ice Cube';
SET @Character = 'Captain Dickson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dax Flame';
SET @Character = 'Zack';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Parnell';
SET @Character = 'Mr. Gordon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ellie Kemper';
SET @Character = 'Ms. Griggs';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('drug dealer', 'high school', 'investigation', 'nerd', 'male friendship', 'parody', 'jock', 'crude humor', 'undercover cop', 'high school student', 'police academy', 'buddy cop', 'buddy comedy', 'duringcreditsstinger', 'high school rivalry', 'bicycle cop', 'based on tv series', 'cops', 'party drugs', 'high school classmates');

GO
-- ============================================

-- Movie: Superbad
DECLARE @MovieTitle VARCHAR(255) = 'Superbad';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Greg Mottola');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Seth Rogen', 'Evan Goldberg');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jonah Hill';
SET @Character = 'Seth';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Cera';
SET @Character = 'Evan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christopher Mintz-Plasse';
SET @Character = 'Fogell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bill Hader';
SET @Character = 'Officer Slater';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Seth Rogen';
SET @Character = 'Officer Michaels';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Martha MacIsaac';
SET @Character = 'Becca';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emma Stone';
SET @Character = 'Jules';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aviva Baumann';
SET @Character = 'Nicola';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joe Lo Truglio';
SET @Character = 'Francis the Driver';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kevin Corrigan';
SET @Character = 'Mark';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('high school', 'police', 'alcohol', 'chaos', 'nerd', 'coming of age', 'school', 'los angeles', 'california', 'drugs', 'buddy', 'one night', 'fake id', 'serene', 'hilarious');

GO
-- ============================================

-- Movie: Easy A
DECLARE @MovieTitle VARCHAR(255) = 'Easy A';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Will Gluck');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Bert V. Royal');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Emma Stone';
SET @Character = 'Olive';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Penn Badgley';
SET @Character = 'Woodchuck Todd';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amanda Bynes';
SET @Character = 'Marianne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dan Byrd';
SET @Character = 'Brandon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Thomas Haden Church';
SET @Character = 'Mr. Griffith';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Patricia Clarkson';
SET @Character = 'Rosemary';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cam Gigandet';
SET @Character = 'Micah';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lisa Kudrow';
SET @Character = 'Mrs. Griffith';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Malcolm McDowell';
SET @Character = 'Principal Gibbons';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aly Michalka';
SET @Character = 'Rhiannon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('high school', 'small town', 'lie', 'loss of virginity', 'coming of age', 'teen movie', 'school', 'female protagonist', 'high school student', 'teen comedy', 'intelligent', 'duringcreditsstinger', 'small town girl', 'rumor', 'teen drama', 'pretend relationship', 'gay friend', 'teenager');

GO
-- ============================================

-- Movie: Uncut Gems
DECLARE @MovieTitle VARCHAR(255) = 'Uncut Gems';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Benny Safdie', 'Josh Safdie');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Ronald Bronstein', 'Josh Safdie', 'Benny Safdie');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Mesfin Lamengo';
SET @Character = 'Wounded Miner';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sun Zhi Hua-Hilton';
SET @Character = 'Mine Foreman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Liang Wei-Hui-Duncan';
SET @Character = 'Mine Management 1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sunny Wu Jin Zahao';
SET @Character = 'Mine Management 2';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Deneke Muhugeta';
SET @Character = 'Lead Miner 1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Habtunu Africho';
SET @Character = 'Lead Miner 2';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Warren Finkelstein';
SET @Character = 'Dr. Blauman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adam Sandler';
SET @Character = 'Howard Ratner';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Keith William Richards';
SET @Character = 'Phil';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tommy Kominik';
SET @Character = 'Nico';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('bet', 'infidelity', 'new york city', 'gambling', 'auction', 'ethiopia', 'dark comedy', 'basketball', 'money', 'art house', 'debt', 'apartment building', 'opal', 'pawnshop', 'character study', 'jeweler', 'city life', 'neo-noir', 'independent film', 'black opal', 'suspenseful');

GO
-- ============================================

-- Movie: Begin Again
DECLARE @MovieTitle VARCHAR(255) = 'Begin Again';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Music', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('John Carney');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('John Carney');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'James Corden';
SET @Character = 'Steve';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Keira Knightley';
SET @Character = 'Gretta';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Ruffalo';
SET @Character = 'Dan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hailee Steinfeld';
SET @Character = 'Violet';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yasiin Bey';
SET @Character = 'Saul';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Karen Pittman';
SET @Character = 'Business Woman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Romero';
SET @Character = 'Bartender';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Catherine Keener';
SET @Character = 'Miriam';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andrew Sellon';
SET @Character = 'Christian Father';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ed Renninger';
SET @Character = 'Barman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new york city', 'music recording', 'singer-songwriter', 'street musician', 'city life', 'recording session', 'street singer', 'inspirational');

GO
-- ============================================

-- Movie: Zodiac
DECLARE @MovieTitle VARCHAR(255) = 'Zodiac';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('David Fincher');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('James Vanderbilt',  'Robert Graysmith');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jake Gyllenhaal';
SET @Character = 'Robert Graysmith';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Ruffalo';
SET @Character = 'Inspector David Toschi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anthony Edwards';
SET @Character = 'Inspector William Armstrong';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert Downey Jr.';
SET @Character = 'Paul Avery';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brian Cox';
SET @Character = 'Melvin Belli';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Carroll Lynch';
SET @Character = 'Arthur Leigh Allen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richmond Arquette';
SET @Character = 'Zodiac 1 / Zodiac 2';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bob Stephenson';
SET @Character = 'Zodiac 3';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Lacy';
SET @Character = 'Zodiac 4';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chlo√´ Sevigny';
SET @Character = 'Melanie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('newspaper', 'journalist', 'california', 'based on novel or book', 'police', 'san francisco', 'california', 'killing', 'detective', '1970s', 'investigation', 'victim', 'code', 'murder', 'serial killer', 'crime scene', 'reporter', 'whodunit', 'alcoholic', 'young man', 'fourth of july', 'newspaper article', 'curious', 'cartoonist', '1960s', 'zodiac killer', 'clinical', 'bar', 'ambiguous', 'foreboding', 'ominous');

GO
-- ============================================

-- Movie: Free Guy
DECLARE @MovieTitle VARCHAR(255) = 'Free Guy';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Comedy', 'Fantasy', 'Romance', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Shawn Levy');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Matt Lieberman', 'Zak Penn',  'Matt Lieberman');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ryan Reynolds';
SET @Character = 'Guy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jodie Comer';
SET @Character = 'Millie / Molotovgirl';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lil Rel Howery';
SET @Character = 'Buddy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joe Keery';
SET @Character = 'Keys';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Utkarsh Ambudkar';
SET @Character = 'Mouser';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Taika Waititi';
SET @Character = 'Antwan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Channing Tatum';
SET @Character = 'Revenjamin Buttons';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aaron W Reed';
SET @Character = 'Dude';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Britne Oldford';
SET @Character = 'Barista';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Camille Kostek';
SET @Character = 'Bombshell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('hero', 'artificial intelligence (a.i.)', 'video game', 'virtual reality', 'gun', 'code', 'gamer', 'bank robbery', 'bank teller', 'programmer', 'mmorpg', 'heroic', 'vrmmo');

GO
-- ============================================

-- Movie: Guardians of the Galaxy Vol. 3
DECLARE @MovieTitle VARCHAR(255) = 'Guardians of the Galaxy Vol. 3';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Comedy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('James Gunn');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('James Gunn',  'Jim Starlin',  'Stan Lee', 'Larry Lieber', 'Jack Kirby',  'Steve Englehart', 'Don Heck',  'Roger Stern', 'John Buscema', 'Sal Buscema',  'Bill Mantlo', 'Keith Giffen',  'Steve Englehart', 'Steve Gan');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Chukwudi Iwuji';
SET @Character = 'The High Evolutionary';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bradley Cooper';
SET @Character = 'Rocket';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Pom Klementieff';
SET @Character = 'Mantis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dave Bautista';
SET @Character = 'Drax';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Karen Gillan';
SET @Character = 'Nebula';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vin Diesel';
SET @Character = 'Groot';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Austin Freeman';
SET @Character = 'On-Set Groot / Phlektik Guard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephen Blackehart';
SET @Character = 'Steemie Blueliver';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Terence Rosemore';
SET @Character = 'Xlomo Smeth';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maria Bakalova';
SET @Character = 'Cosmo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('hero', 'superhero', 'melancholy', 'mad scientist', 'based on comic', 'sequel', 'superhero team', 'space opera', 'raccoon', 'aftercreditsstinger', 'duringcreditsstinger', 'marvel cinematic universe (mcu)', 'hopeless', 'cosmic', 'outer space', 'chosen family', 'lighthearted', 'hilarious', 'cheerful', 'disheartening', 'empathetic', 'enthusiastic', 'euphoric', 'hopeful', 'straightforward', 'sympathetic');

GO
-- ============================================

-- Movie: Date Night
DECLARE @MovieTitle VARCHAR(255) = 'Date Night';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Crime', 'Romance', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Shawn Levy');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Josh Klausner');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Steve Carell';
SET @Character = 'Phil Foster';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tina Fey';
SET @Character = 'Claire Foster';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Wahlberg';
SET @Character = 'Holbrooke';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Taraji P. Henson';
SET @Character = 'Detective Arroyo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jimmi Simpson';
SET @Character = 'Armstrong';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Common';
SET @Character = 'Collins';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'William Fichtner';
SET @Character = 'DA Frank Crenshaw';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Leighton Meester';
SET @Character = 'Katy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'J.B. Smoove';
SET @Character = 'Cabbie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kristen Wiig';
SET @Character = 'Haley Sullivan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new york city', 'taxi', 'husband wife relationship', 'corruption', 'new jersey', 'expensive restaurant', 'taxi driver', 'blackmail', 'mistaken identity', 'stripper', 'mafia boss', 'muscleman', 'district attorney', 'manhattan', 'new york city', 'aftercreditsstinger', 'duringcreditsstinger', 'outtakes', 'detectives', 'breaking in', 'thieves', 'married couple with children', 'reservation');

GO
-- ============================================

-- Movie: Tag
DECLARE @MovieTitle VARCHAR(255) = 'Tag';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Comedy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Jeff Tomsic');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Rob McKittrick', 'Mark Steilen',  'Mark Steilen',  'Russell Adams');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ed Helms';
SET @Character = 'Hogan ''Hoagie'' Malloy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lil Rel Howery';
SET @Character = 'Reggie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jon Hamm';
SET @Character = 'Bob Callahan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Annabelle Wallis';
SET @Character = 'Rebecca Crosby';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jake Johnson';
SET @Character = 'Randy ''Chilli'' Cilliano';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Isla Fisher';
SET @Character = 'Anna Malloy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hannibal Buress';
SET @Character = 'Kevin Sable';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nora Dunn';
SET @Character = 'Linda Malloy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steve Berg';
SET @Character = 'Lou Seibert';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeremy Renner';
SET @Character = 'Jerry Pierce';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('based on true story', 'travel', 'game', 'group of friends', 'classmates');

GO
-- ============================================

-- Movie: The Nice Guys
DECLARE @MovieTitle VARCHAR(255) = 'The Nice Guys';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Comedy', 'Crime', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Shane Black');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Shane Black', 'Anthony Bagarozzi');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Russell Crowe';
SET @Character = 'Jackson Healy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ryan Gosling';
SET @Character = 'Holland March';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Angourie Rice';
SET @Character = 'Holly March';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matt Bomer';
SET @Character = 'John Boy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Margaret Qualley';
SET @Character = 'Amelia Kuttner';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yaya DaCosta';
SET @Character = 'Tally';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Keith David';
SET @Character = 'Older Guy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Beau Knapp';
SET @Character = 'Blueface';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lois Smith';
SET @Character = 'Mrs. Glenn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Murielle Telio';
SET @Character = 'Misty Mountains';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('daughter', 'pornography', 'detective', '1970s', 'investigation', 'alcoholism', 'private investigator', 'conspiracy', 'whodunit', 'alcoholic', 'buddy cop', 'private eye', 'neo-noir', 'father daughter relationship', 'lighthearted', 'hilarious', 'amused', 'earnest', 'vibrant');

GO
-- ============================================

-- Movie: The Big Sick
DECLARE @MovieTitle VARCHAR(255) = 'The Big Sick';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Michael Showalter');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Emily V. Gordon', 'Kumail Nanjiani');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Kumail Nanjiani';
SET @Character = 'Kumail';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zoe Kazan';
SET @Character = 'Emily';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Holly Hunter';
SET @Character = 'Beth';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ray Romano';
SET @Character = 'Terry';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anupam Kher';
SET @Character = 'Azmat';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zenobia Shroff';
SET @Character = 'Sharmeen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adeel Akhtar';
SET @Character = 'Naveed';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bo Burnham';
SET @Character = 'CJ';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aidy Bryant';
SET @Character = 'Mary';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kurt Braunohler';
SET @Character = 'Chris';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('chicago', 'illinois', 'new york city', 'immigrant', 'muslim', 'roommates', 'sadness', 'sarcasm', 'comedian', 'based on true story', 'one-man show', 'pakistan', 'family relationships', 'film in film', 'matchmaking', 'cultural difference', 'hospital', 'falling in love', 'family', 'illness', 'group of friends', 'intercultural relationship', 'aftercreditsstinger', 'college student', 'uber', 'traditional family', 'comedy club', 'stand-up comedian', 'grad school');

GO
-- ============================================

-- Movie: Oppenheimer
DECLARE @MovieTitle VARCHAR(255) = 'Oppenheimer';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Biography', 'Drama', 'History');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Christopher Nolan');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Christopher Nolan',  'Kai Bird', 'Martin Sherwin');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Cillian Murphy';
SET @Character = 'J. Robert Oppenheimer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emily Blunt';
SET @Character = 'Kitty Oppenheimer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert Downey Jr.';
SET @Character = 'Lewis Strauss';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alden Ehrenreich';
SET @Character = 'Senate Aide';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scott Grimes';
SET @Character = 'Counsel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jason Clarke';
SET @Character = 'Roger Robb';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kurt Koehler';
SET @Character = 'Thomas Morgan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tony Goldwyn';
SET @Character = 'Gordon Gray';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Gowans';
SET @Character = 'Ward Evans';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Macon Blair';
SET @Character = 'Lloyd Garrison';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('husband wife relationship', 'based on novel or book', 'atomic bomb', 'patriotism', 'new mexico', 'world war ii', 'atomic bomb test', 'physics', 'biography', 'based on true story', 'interrogation', 'guilt', 'historical event', 'nuclear weapons', 'communism', 'red scare', 'mccarthyism', 'top secret project', 'moral dilemma', 'usa politics', '1940s', 'antisemitism', '20th century', 'manhattan project', 'los alamos');

GO
-- ============================================

-- Movie: The Pianist
DECLARE @MovieTitle VARCHAR(255) = 'The Pianist';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Biography', 'Drama', 'Music', 'War');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Roman Polanski');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Ronald Harwood',  'Wladyslaw Szpilman');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Adrien Brody';
SET @Character = 'Wladyslaw Szpilman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emilia Fox';
SET @Character = 'Dorota';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michal Zebrowski';
SET @Character = 'Jurek';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ed Stoppard';
SET @Character = 'Henryk';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maureen Lipman';
SET @Character = 'Mother';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Frank Finlay';
SET @Character = 'Father';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jessica Kate Meyer';
SET @Character = 'Halina';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julia Rayner';
SET @Character = 'Regina';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wanja Mues';
SET @Character = 'SS Slapping Father';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Ridings';
SET @Character = 'Mr. Lipa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('concert', 'nazi', 'resistance', 'warsaw ghetto', 'polish resistance', 'homeland', 'holocaust (shoah)', 'hunger', 'world war ii', 'prisoner of war', 'ghetto', 'deportation', 'jew persecution', 'liberation', 'biography', 'survival', 'based on memoir or autobiography', 'pianist', 'poland');

GO
-- ============================================

-- Movie: Marriage Story
DECLARE @MovieTitle VARCHAR(255) = 'Marriage Story';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Noah Baumbach');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Noah Baumbach');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Adam Driver';
SET @Character = 'Charlie Barber';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scarlett Johansson';
SET @Character = 'Nicole Barber';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julia Greer';
SET @Character = 'Street Solicitor #1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Azhy Robertson';
SET @Character = 'Henry Barber';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wallace Shawn';
SET @Character = 'Theater Actor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matthew Maher';
SET @Character = 'Theater Actor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eric Berryman';
SET @Character = 'Theater Actor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mickey Sumner';
SET @Character = 'Theater Actor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Turner';
SET @Character = 'Theater Actor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gideon Glick';
SET @Character = 'Theater Actor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('infidelity', 'new york city', 'husband wife relationship', 'parent child relationship', 'theatre group', 'theater director', 'lawyer', 'los angeles', 'california', 'divorce', 'divorce lawyer', 'thoughtful', 'complex', 'intense', 'sincere');

GO
-- ============================================

-- Movie: Babylon
DECLARE @MovieTitle VARCHAR(255) = 'Babylon';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'History');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Damien Chazelle');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Damien Chazelle');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'J.C. Currais';
SET @Character = 'Truck Driver';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Diego Calva';
SET @Character = 'Manny Torres';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jimmy Ortega';
SET @Character = 'Elephant Wrangler';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Marcos A. Ferraez';
SET @Character = 'Police Officer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shane Powers';
SET @Character = 'Dale';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Phoebe Tonkin';
SET @Character = 'Jane Thornton';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Troy Metcalf';
SET @Character = 'Orville Pickwick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jovan Adepo';
SET @Character = 'Sidney Palmer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hansford Prince';
SET @Character = 'Joe Holiday';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Telvin Griffin';
SET @Character = 'Reggie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('elephant', 'gambling', 'gambling debt', 'movie business', 'orgy', 'cocaine', 'champagne', 'alcoholism', 'hollywood', 'alcoholic', 'filmmaking', 'movie star', 'silent film star', '1920s', 'old hollywood', 'fading star', 'sex');

GO
-- ============================================

-- Movie: Manchester by the Sea
DECLARE @MovieTitle VARCHAR(255) = 'Manchester by the Sea';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Kenneth Lonergan');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Kenneth Lonergan');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Casey Affleck';
SET @Character = 'Lee Chandler';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ivy O''Brien';
SET @Character = 'Young Patrick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kyle Chandler';
SET @Character = 'Joe Chandler';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Donelly';
SET @Character = 'Mr. Martinez';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Virginia Loring Cooke';
SET @Character = 'Mrs. Groom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Quincy Tyler Bernstine';
SET @Character = 'Marianne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Missy Yager';
SET @Character = 'Mrs. Olsen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephen McKinley Henderson';
SET @Character = 'Mr. Emery';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ben Hanson';
SET @Character = 'Lenny - the bartender';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mary Mallen';
SET @Character = 'Sharon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('funeral', 'boston', 'massachusetts', 'brother', 'boat', 'sadness', 'massachusetts', 'loss', 'dysfunctional family', 'grief', 'hospital', 'house fire', 'death', 'nephew', 'ex-wife', 'nonlinear timeline', 'mental health', 'ex-husband ex-wife relationship', 'legal guardian', 'dysfunctional life', 'depressed');

GO
-- ============================================

-- Movie: Birdman or (The Unexpected Virtue of Ignorance)
DECLARE @MovieTitle VARCHAR(255) = 'Birdman or (The Unexpected Virtue of Ignorance)';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Alejandro G. I√±√°rritu');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Alejandro G. I√±√°rritu', 'Nicol√°s Giacobone', 'Alexander Dinelaris', 'Armando Bo',  'Raymond Carver');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Michael Keaton';
SET @Character = 'Riggan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emma Stone';
SET @Character = 'Sam';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kenny Chin';
SET @Character = 'Korean Grocer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jamahl Garrison-Lowe';
SET @Character = 'Stagehand';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zach Galifianakis';
SET @Character = 'Jake';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Naomi Watts';
SET @Character = 'Lesley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeremy Shamos';
SET @Character = 'Ralph';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andrea Riseborough';
SET @Character = 'Laura';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Katherine O''Sullivan';
SET @Character = 'Costume Assistant';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Damian Young';
SET @Character = 'Gabriel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new york city', 'midlife crisis', 'superhero', 'dark comedy', 'times square', 'marijuana', 'broadway', 'magic realism', 'meditative', 'city life', 'father daughter relationship');

GO
-- ============================================

-- Movie: 500 Days of Summer
DECLARE @MovieTitle VARCHAR(255) = '500 Days of Summer';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Marc Webb');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Scott Neustadter', 'Michael H. Weber');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Joseph Gordon-Levitt';
SET @Character = 'Tom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zooey Deschanel';
SET @Character = 'Summer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Geoffrey Arend';
SET @Character = 'McKenzie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chlo√´ Grace Moretz';
SET @Character = 'Rachel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matthew Gray Gubler';
SET @Character = 'Paul';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Clark Gregg';
SET @Character = 'Vance';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Patricia Belcher';
SET @Character = 'Millie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rachel Boston';
SET @Character = 'Alison';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Minka Kelly';
SET @Character = 'Autumn - Girl at Interview';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Charles Walker';
SET @Character = 'Millie''s New Husband';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('jealousy', 'gallery', 'fight', 'date', 'architect', 'interview', 'sister', 'love', 'friends', 'fate', 'los angeles', 'california', 'summer', 'year', 'heartache', 'romantic', 'assertive');

GO
-- ============================================

-- Movie: The Prestige
DECLARE @MovieTitle VARCHAR(255) = 'The Prestige';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Mystery', 'Sci-Fi', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Christopher Nolan');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jonathan Nolan', 'Christopher Nolan',  'Christopher Priest');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Hugh Jackman';
SET @Character = 'Robert Angier';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christian Bale';
SET @Character = 'Alfred Borden';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Caine';
SET @Character = 'Cutter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Piper Perabo';
SET @Character = 'Julia McCullough';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rebecca Hall';
SET @Character = 'Sarah';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scarlett Johansson';
SET @Character = 'Olivia Wenscombe';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samantha Mahurin';
SET @Character = 'Jess';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Bowie';
SET @Character = 'Tesla';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andy Serkis';
SET @Character = 'Alley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daniel Davis';
SET @Character = 'Judge';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('dying and death', 'suicide', 'class society', 'london', 'england', 'magic', 'competition', 'obsession', 'hostility', 'class', 'diary', 'twist', 'tricks', 'illusion', 'rivalry', 'partner', 'steampunk', 'cruelty', 'hanging', 'jail cell', '19th century', 'nikola tesla', 'magician', 'tesla coil', 'bittersweet', 'secret', 'absurd', 'suspenseful', 'tense', 'mind-blowing');

GO
-- ============================================

-- Movie: Jojo Rabbit
DECLARE @MovieTitle VARCHAR(255) = 'Jojo Rabbit';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'War');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Taika Waititi');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Christine Leunens',  'Taika Waititi');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Roman Griffin Davis';
SET @Character = 'Jojo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Thomasin McKenzie';
SET @Character = 'Elsa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scarlett Johansson';
SET @Character = 'Rosie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Taika Waititi';
SET @Character = 'Adolf';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sam Rockwell';
SET @Character = 'Captain Klenzendorf';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rebel Wilson';
SET @Character = 'Fraulein Rahm';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alfie Allen';
SET @Character = 'Finkel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephen Merchant';
SET @Character = 'Deertz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Archie Yates';
SET @Character = 'Yorki';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Luke Brandon Field';
SET @Character = 'Christoph';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('based on novel or book', 'world war ii', 'jew persecution', 'affectation', 'satire', 'imaginary friend', 'hitler youth', 'single mother', 'nazism', '1940s', 'satirical', 'child protagonist', 'adolf hitler', 'children in wartime', 'lighthearted');

GO
-- ============================================

-- Movie: Get Out
DECLARE @MovieTitle VARCHAR(255) = 'Get Out';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Horror', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Jordan Peele');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jordan Peele');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Daniel Kaluuya';
SET @Character = 'Chris Washington';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Allison Williams';
SET @Character = 'Rose Armitage';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Catherine Keener';
SET @Character = 'Missy Armitage';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bradley Whitford';
SET @Character = 'Dean Armitage';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Caleb Landry Jones';
SET @Character = 'Jeremy Armitage';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Marcus Henderson';
SET @Character = 'Walter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Betty Gabriel';
SET @Character = 'Georgina';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'LaKeith Stanfield';
SET @Character = 'Andre Logan King';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephen Root';
SET @Character = 'Jim Hudson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lil Rel Howery';
SET @Character = 'Rod Williams';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('kidnapping', 'externally controlled action', 'manipulation', 'dark comedy', 'hypnosis', 'parents-in-law', 'satire', 'racist', 'revenge', 'interracial relationship', 'disappearance', 'racism', 'psychological thriller', 'biting', 'blunt', 'neurosurgeon', 'missing person', 'stereotype', 'brain surgery', 'race-conscious');

GO
-- ============================================

-- Movie: Baby Driver
DECLARE @MovieTitle VARCHAR(255) = 'Baby Driver';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Crime', 'Drama', 'Music');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Edgar Wright');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Edgar Wright');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ansel Elgort';
SET @Character = 'Baby';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jon Bernthal';
SET @Character = 'Griff';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jon Hamm';
SET @Character = 'Buddy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eiza Gonz√°lez';
SET @Character = 'Darling';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Micah Howard';
SET @Character = 'Barista';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lily James';
SET @Character = 'Debora';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Morgan Brown';
SET @Character = 'Street Preacher';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kevin Spacey';
SET @Character = 'Doc';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Morse Diggs';
SET @Character = 'Morse Diggs';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'CJ Jones';
SET @Character = 'Joseph';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('robbery', 'waitress', 'atlanta', 'crime boss', 'romance', 'heist', 'getaway car', 'on the run', 'shootout', 'bank robbery', 'getaway driver', 'sign languages', 'armed robbery', 'aggressive', 'hearing impaired', 'intense', 'joyful', 'urgent');

GO
-- ============================================

-- Movie: The Social Network
DECLARE @MovieTitle VARCHAR(255) = 'The Social Network';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Biography', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('David Fincher');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Aaron Sorkin',  'Ben Mezrich');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jesse Eisenberg';
SET @Character = 'Mark Zuckerberg';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rooney Mara';
SET @Character = 'Erica Albright';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bryan Barter';
SET @Character = 'Billy Olson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dustin Fitzsimons';
SET @Character = 'Phoenix Club President';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joseph Mazzello';
SET @Character = 'Dustin Moskovitz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Patrick Mapel';
SET @Character = 'Chris Hughes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andrew Garfield';
SET @Character = 'Eduardo Saverin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Toby Meuli';
SET @Character = 'Phoenix Member Playing Facemash';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alecia Svensen';
SET @Character = 'Girl at Phoenix Club';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jami Owen';
SET @Character = 'Student Playing Facemash';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('hacker', 'based on novel or book', 'boston', 'massachusetts', 'ex-girlfriend', 'harvard university', 'narcissism', 'based on true story', 'hacking', 'historical fiction', 'twins', 'double cross', 'creator', 'frat party', 'social network', 'deposition', 'intellectual property', 'entrepreneur', 'arrogance', 'social media', 'meditative', 'young entrepreneur', 'facebook', 'legal drama', 'critical', 'tense', 'antagonistic', 'callous', 'wry');

GO
-- ============================================

-- Movie: Inglourious Basterds
DECLARE @MovieTitle VARCHAR(255) = 'Inglourious Basterds';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure', 'Drama', 'War');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Quentin Tarantino');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Quentin Tarantino');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Brad Pitt';
SET @Character = 'Lt. Aldo Raine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'M√©lanie Laurent';
SET @Character = 'Shosanna Dreyfus';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christoph Waltz';
SET @Character = 'Col. Hans Landa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eli Roth';
SET @Character = 'Sgt. Donny Donowitz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Fassbender';
SET @Character = 'Lt. Archie Hicox';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Diane Kruger';
SET @Character = 'Bridget von Hammersmark';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daniel Br√ºhl';
SET @Character = 'Fredrick Zoller';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Til Schweiger';
SET @Character = 'Sgt. Hugo Stiglitz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gedeon Burkhard';
SET @Character = 'Cpl. Wilhelm Wicki';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jacky Ido';
SET @Character = 'Marcel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('guerrilla warfare', 'swastika', 'paris', 'france', 'nazi', 'self sacrifice', 'sadism', 'dynamite', 'mexican standoff', 'world war ii', 'jew persecution', 'masochism', 'anti-semitism', 'german occupation of france', 'british politics', 'revisionist history', 'adolf hitler');

GO
-- ============================================

-- Movie: Lady Bird
DECLARE @MovieTitle VARCHAR(255) = 'Lady Bird';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Greta Gerwig');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Greta Gerwig');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Saoirse Ronan';
SET @Character = 'Lady Bird McPherson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Laurie Metcalf';
SET @Character = 'Marion McPherson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tracy Letts';
SET @Character = 'Larry McPherson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lucas Hedges';
SET @Character = 'Danny O''Neill';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Timoth√©e Chalamet';
SET @Character = 'Kyle Scheible';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Beanie Feldstein';
SET @Character = 'Julie Steffans';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lois Smith';
SET @Character = 'Sister Sarah Joan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephen McKinley Henderson';
SET @Character = 'Father Leviatch';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Odeya Rush';
SET @Character = 'Jenna Walton';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jordan Rodrigues';
SET @Character = 'Miguel McPherson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('friendship', 'loss of virginity', 'coming of age', 'teen angst', 'high school graduation', 'teenage girl', 'best friend', 'loss of job', 'high school student', 'catholic school', 'first love', 'semi autobiographical', 'sacramento', 'woman director', 'father daughter relationship', 'mother daughter relationship', 'college applications', '2000s');

GO
-- ============================================

-- Movie: 10 Things I Hate About You
DECLARE @MovieTitle VARCHAR(255) = '10 Things I Hate About You';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Gil Junger');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Karen McCullah', 'Kirsten Smith',  'William Shakespeare');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Heath Ledger';
SET @Character = 'Patrick Verona';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julia Stiles';
SET @Character = 'Kat Stratford';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joseph Gordon-Levitt';
SET @Character = 'Cameron James';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Larisa Oleynik';
SET @Character = 'Bianca Stratford';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Krumholtz';
SET @Character = 'Michael Eckman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andrew Keegan';
SET @Character = 'Joey Donner';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Susan May Pratt';
SET @Character = 'Mandella';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gabrielle Union';
SET @Character = 'Chastity';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Larry Miller';
SET @Character = 'Walter Stratford';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daryl Mitchell';
SET @Character = 'Mr. Morgan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('high school', 'deception', 'based on play or musical', 'coming of age', 'teen movie', 'shrew', 'valentine''s day', 'shakespeare in modern dress', 'opposites attract', 'duringcreditsstinger', 'teenage romance', 'overprotective father', 'romantic');

GO
-- ============================================

-- Movie: Scott Pilgrim vs. the World
DECLARE @MovieTitle VARCHAR(255) = 'Scott Pilgrim vs. the World';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Comedy', 'Fantasy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Edgar Wright');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Michael Bacall', 'Edgar Wright',  'Bryan Lee O''Malley');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Michael Cera';
SET @Character = 'Scott Pilgrim';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kieran Culkin';
SET @Character = 'Wallace Wells';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anna Kendrick';
SET @Character = 'Stacey Pilgrim';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alison Pill';
SET @Character = 'Kim Pine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aubrey Plaza';
SET @Character = 'Julie Powers';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mary Elizabeth Winstead';
SET @Character = 'Ramona Flowers';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jason Schwartzman';
SET @Character = 'Gideon Graves';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Johnny Simmons';
SET @Character = 'Young Neil';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Webber';
SET @Character = 'Stephen Stills';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ellen Wong';
SET @Character = 'Knives Chau';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('video game', 'skateboarding', 'ex-boyfriend', 'ex-girlfriend', 'toronto', 'canada', 'animated scene', 'dating', 'guitar player', 'break-up', 'based on graphic novel', 'group of friends', 'whipping', 'hipster', 'underage girlfriend', 'unconsciousness', 'girl fight', 'vegan', 'aftercreditsstinger', 'garage band', 'band competition');

GO
-- ============================================

-- Movie: Inception
DECLARE @MovieTitle VARCHAR(255) = 'Inception';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Christopher Nolan');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Christopher Nolan');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Leonardo DiCaprio';
SET @Character = 'Cobb';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joseph Gordon-Levitt';
SET @Character = 'Arthur';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Elliot Page';
SET @Character = 'Ariadne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Hardy';
SET @Character = 'Eames';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ken Watanabe';
SET @Character = 'Saito';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dileep Rao';
SET @Character = 'Yusuf';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cillian Murphy';
SET @Character = 'Robert Fischer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Berenger';
SET @Character = 'Browning';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Marion Cotillard';
SET @Character = 'Mal';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Pete Postlethwaite';
SET @Character = 'Maurice Fischer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('rescue', 'mission', 'dreams', 'airplane', 'paris', 'france', 'virtual reality', 'kidnapping', 'philosophy', 'spy', 'allegory', 'manipulation', 'car crash', 'heist', 'memory', 'architecture', 'los angeles', 'california', 'dream world', 'subconscious', 'awestruck', 'complicated', 'powerful');

GO
-- ============================================

-- Movie: The Grand Budapest Hotel
DECLARE @MovieTitle VARCHAR(255) = 'The Grand Budapest Hotel';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Wes Anderson');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Stefan Zweig',  'Wes Anderson',  'Wes Anderson', 'Hugo Guinness');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ralph Fiennes';
SET @Character = 'M. Gustave';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'F. Murray Abraham';
SET @Character = 'Mr. Moustafa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mathieu Amalric';
SET @Character = 'Serge X.';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adrien Brody';
SET @Character = 'Dmitri';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Willem Dafoe';
SET @Character = 'Jopling';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeff Goldblum';
SET @Character = 'Deputy Kovacs';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harvey Keitel';
SET @Character = 'Ludwig';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jude Law';
SET @Character = 'Young Writer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bill Murray';
SET @Character = 'M. Ivan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Edward Norton';
SET @Character = 'Henckels';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('hotel', 'painting', 'wartime', 'affectation', 'eastern europe', 'author', 'gunfight', 'theft', 'bellboy', 'mentor prot√©g√© relationship', 'european', 'hotel lobby', 'renaissance painting', '1960s', '1930s', 'ironic', 'complex', 'loving', 'joyous', 'admiring', 'adoring', 'celebratory', 'cheerful', 'comforting', 'conceited', 'euphoric', 'forceful', 'joyful');

GO
-- ============================================

-- Movie: The Dark Knight
DECLARE @MovieTitle VARCHAR(255) = 'The Dark Knight';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Crime', 'Drama', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Christopher Nolan');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jonathan Nolan', 'Christopher Nolan',  'Christopher Nolan', 'David S. Goyer',  'Bob Kane');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Christian Bale';
SET @Character = 'Bruce Wayne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Heath Ledger';
SET @Character = 'Joker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aaron Eckhart';
SET @Character = 'Harvey Dent';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Caine';
SET @Character = 'Alfred';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maggie Gyllenhaal';
SET @Character = 'Rachel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gary Oldman';
SET @Character = 'Gordon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Morgan Freeman';
SET @Character = 'Lucius Fox';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Monique Gabriela Curnen';
SET @Character = 'Ramirez';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ron Dean';
SET @Character = 'Wuertz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cillian Murphy';
SET @Character = 'Scarecrow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('joker', 'sadism', 'chaos', 'secret identity', 'crime fighter', 'superhero', 'anti hero', 'scarecrow', 'based on comic', 'vigilante', 'organized crime', 'tragic hero', 'anti villain', 'criminal mastermind', 'district attorney', 'super power', 'super villain', 'neo-noir', 'bold');

GO
-- ============================================

-- Movie: Eternal Sunshine of the Spotless Mind
DECLARE @MovieTitle VARCHAR(255) = 'Eternal Sunshine of the Spotless Mind';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Romance', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Michel Gondry');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Charlie Kaufman', 'Michel Gondry', 'Pierre Bismuth',  'Charlie Kaufman');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jim Carrey';
SET @Character = 'Joel Barish';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kate Winslet';
SET @Character = 'Clementine Kruczynski';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gerry Robert Byrne';
SET @Character = 'Train Conductor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Elijah Wood';
SET @Character = 'Patrick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Thomas Jay Ryan';
SET @Character = 'Frank';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Ruffalo';
SET @Character = 'Stan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jane Adams';
SET @Character = 'Carrie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Cross';
SET @Character = 'Rob';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kirsten Dunst';
SET @Character = 'Mary';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Wilkinson';
SET @Character = 'Dr. Mierzwiak';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new york city', 'regret', 'jealousy', 'deja vu', 'amnesia', 'dreams', 'operation', 'relationship problems', 'love', 'memory', 'brainwashing', 'relationship', 'heartbreak', 'nonlinear timeline', '2000s', 'memory manipulation', 'joyful');

GO
-- ============================================

-- Movie: Spider-Man: Into the Spider-Verse
DECLARE @MovieTitle VARCHAR(255) = 'Spider-Man: Into the Spider-Verse';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Action', 'Adventure', 'Comedy', 'Family', 'Fantasy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Bob Persichetti', 'Peter Ramsey', 'Rodney Rothman');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Phil Lord', 'Rodney Rothman',  'Phil Lord');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Shameik Moore';
SET @Character = 'Miles Morales';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jake Johnson';
SET @Character = 'Peter B. Parker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hailee Steinfeld';
SET @Character = 'Gwen Stacy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mahershala Ali';
SET @Character = 'Uncle Aaron';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brian Tyree Henry';
SET @Character = 'Jefferson Davis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lily Tomlin';
SET @Character = 'Aunt May';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Luna Lauren Velez';
SET @Character = 'Rio Morales';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zo√´ Kravitz';
SET @Character = 'Mary Jane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Mulaney';
SET @Character = 'Spider-Ham';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kimiko Glenn';
SET @Character = 'Peni Parker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('superhero', 'based on comic', 'aftercreditsstinger', 'alternate universe');

GO
-- ============================================

-- Movie: Interstellar
DECLARE @MovieTitle VARCHAR(255) = 'Interstellar';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure', 'Drama', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Christopher Nolan');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jonathan Nolan', 'Christopher Nolan');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ellen Burstyn';
SET @Character = 'Murph';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matthew McConaughey';
SET @Character = 'Cooper';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mackenzie Foy';
SET @Character = 'Murph';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Lithgow';
SET @Character = 'Donald';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Timoth√©e Chalamet';
SET @Character = 'Tom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Oyelowo';
SET @Character = 'School Principal';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Collette Wolfe';
SET @Character = 'Ms. Hanley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Francis X. McCarthy';
SET @Character = 'Boots';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bill Irwin';
SET @Character = 'TARS';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anne Hathaway';
SET @Character = 'Brand';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('rescue', 'future', 'spacecraft', 'race against time', 'artificial intelligence (a.i.)', 'nasa', 'time warp', 'dystopia', 'expedition', 'space travel', 'wormhole', 'famine', 'hibernation', 'black hole', 'quantum mechanics', 'family relationships', 'space', 'robot', 'astronaut', 'scientist', 'single father', 'farmer', 'space station', 'space adventure', 'time paradox', 'cryonics', 'father daughter relationship', '2060s', 'cornfield', 'time manipulation', 'amused');

GO
-- ============================================

-- Movie: tick, tick... BOOM!
DECLARE @MovieTitle VARCHAR(255) = 'tick, tick... BOOM!';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Biography', 'Comedy', 'Drama', 'Musical');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Lin-Manuel Miranda');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Steven Levenson',  'Jonathan Larson');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Andrew Garfield';
SET @Character = 'Jonathan Larson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alexandra Shipp';
SET @Character = 'Susan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robin de Jesus';
SET @Character = 'Michael';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vanessa Hudgens';
SET @Character = 'Karessa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joshua Henry';
SET @Character = 'Roger';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jonathan Marc Sherman';
SET @Character = 'Ira Weitzman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michaela Ja√©  Rodriguez';
SET @Character = 'Carolyn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ben Levi Ross';
SET @Character = 'Freddy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Judith Light';
SET @Character = 'Rosa Stevens';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bradley Whitford';
SET @Character = 'Stephen Sondheim';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new york city', 'composer', 'artist', 'melancholy', 'musical', 'based on true story', 'based on play or musical', 'singing', 'boyfriend girlfriend relationship', 'struggling artist', '1990s', 'portrait of an artist', 'hiv/aids epidemic', 'inspirational', 'theater');

GO
-- ============================================

-- Movie: La La Land
DECLARE @MovieTitle VARCHAR(255) = 'La La Land';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Music', 'Musical', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Damien Chazelle');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Damien Chazelle');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ryan Gosling';
SET @Character = 'Sebastian';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emma Stone';
SET @Character = 'Mia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amiee Conn';
SET @Character = 'Famous Actress';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Terry Walters';
SET @Character = 'Linda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Thom Shelton';
SET @Character = 'Coffee Spiller';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cinda Adams';
SET @Character = 'Casting Director';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Callie Hernandez';
SET @Character = 'Tracy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jessica Rothe';
SET @Character = 'Alexis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sonoya Mizuno';
SET @Character = 'Caitlin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rosemarie DeWitt';
SET @Character = 'Laura';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('dancing', 'dance', 'jazz', 'musical', 'ambition', 'casting', 'coffee shop', 'jazz club', 'traffic jam', 'hollywood', 'los angeles', 'california', 'pianist', 'pier', 'audition', 'valentine''s day', 'planetarium', 'aspiring actor', 'movie set', 'sunset', 'one woman show', 'pool party', 'griffith observatory', 'romantic', 'exuberant', 'tragic');

GO
-- ============================================

-- Movie: Nope
DECLARE @MovieTitle VARCHAR(255) = 'Nope';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Horror', 'Mystery', 'Sci-Fi', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Jordan Peele');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jordan Peele');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Daniel Kaluuya';
SET @Character = 'OJ Haywood';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Keke Palmer';
SET @Character = 'Emerald Haywood';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brandon Perea';
SET @Character = 'Angel Torres';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Wincott';
SET @Character = 'Antlers Holst';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steven Yeun';
SET @Character = 'Ricky ''Jupe'' Park';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wrenn Schmidt';
SET @Character = 'Amber Park';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Keith David';
SET @Character = 'Otis Haywood Sr.';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Devon Graye';
SET @Character = 'Ryder Muybridge';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Terry Notary';
SET @Character = 'Gordy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Barbie Ferreira';
SET @Character = 'Nessie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('california', 'horse', 'exploitation', 'video surveillance', 'death of father', 'alien', 'ufo', 'social commentary', 'psychological thriller', 'alien invasion', 'child star', 'chimpanzee', 'aftercreditsstinger', 'horse farm', 'african american man', 'racial issues', 'brother sister relationship');

GO
-- ============================================

-- Movie: Bullet Train
DECLARE @MovieTitle VARCHAR(255) = 'Bullet Train';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Comedy', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('David Leitch');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Zak Olkewicz',  'K√¥tar√¥ Isaka');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Brad Pitt';
SET @Character = 'Ladybug';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joey King';
SET @Character = 'Prince';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aaron Taylor-Johnson';
SET @Character = 'Tangerine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brian Tyree Henry';
SET @Character = 'Lemon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andrew Koji';
SET @Character = 'Kimura';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hiroyuki Sanada';
SET @Character = 'The Elder';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Shannon';
SET @Character = 'White Death';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sandra Bullock';
SET @Character = 'Maria';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bad Bunny';
SET @Character = 'Wolf';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Logan Lerman';
SET @Character = 'The Son';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('mission', 'japan', 'assassin', 'based on novel or book', 'train', 'luck', 'deadly snake', 'duringcreditsstinger', 'shinkansen');

GO
-- ============================================

-- Movie: Everything Everywhere All at Once
DECLARE @MovieTitle VARCHAR(255) = 'Everything Everywhere All at Once';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Comedy', 'Drama', 'Fantasy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Daniel Kwan', 'Daniel Scheinert');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Daniel Kwan', 'Daniel Scheinert');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Michelle Yeoh';
SET @Character = 'Evelyn Wang';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephanie Hsu';
SET @Character = 'Joy Wang / Jobu Tupaki';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ke Huy Quan';
SET @Character = 'Waymond Wang';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Hong';
SET @Character = 'Gong Gong';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jamie Lee Curtis';
SET @Character = 'Deirdre Beaubeirdre';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tallie Medel';
SET @Character = 'Becky Sregor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jenny Slate';
SET @Character = 'Debbie the Dog Mom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harry Shum Jr.';
SET @Character = 'Chad';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Biff Wiff';
SET @Character = 'Rick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sunita Mani';
SET @Character = 'TV Musical - Queen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('mother', 'martial arts', 'kung fu', 'philosophy', 'generations conflict', 'chinese woman', 'surrealism', 'laundromat', 'chinese', 'east asian lead', 'divorce', 'family', 'lgbt', 'hot dog', 'asian woman', 'chinese immigrant', 'imaginative', 'mother daughter relationship', 'action comedy', 'asian american', 'intergenerational trauma', 'internal revenue service', 'interdimensional travel', 'absurd', 'Áû¨ÊÅØÂÖ®ÂÆáÂÆô');

GO
-- ============================================

-- Movie: The Banshees of Inisherin
DECLARE @MovieTitle VARCHAR(255) = 'The Banshees of Inisherin';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Martin McDonagh');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Martin McDonagh');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Colin Farrell';
SET @Character = 'P√°draic S√∫illeabh√°in';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brendan Gleeson';
SET @Character = 'Colm Doherty';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kerry Condon';
SET @Character = 'Siobh√°n S√∫illeabh√°in';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Pat Shortt';
SET @Character = 'Jonjo Devine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gary Lydon';
SET @Character = 'Peadar Kearney';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jon Kenny';
SET @Character = 'Gerry';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Barry Keoghan';
SET @Character = 'Dominic Kearney';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sheila Flitton';
SET @Character = 'Mrs. McCormick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Carty';
SET @Character = 'Older Musician 1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Oliver Farrelly';
SET @Character = 'Older Musician 2';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('friendship', 'island', 'donkey', 'dark comedy', 'irish civil war (1922-23)', 'church', 'ireland', 'drinking', 'former best friend', 'self mutilation', 'fiddle', '1920s', 'brother sister relationship', 'pub');

GO
-- ============================================

-- Movie: Knives Out
DECLARE @MovieTitle VARCHAR(255) = 'Knives Out';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Crime', 'Drama', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Rian Johnson');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Rian Johnson');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Daniel Craig';
SET @Character = 'Benoit Blanc';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Evans';
SET @Character = 'Ransom Drysdale';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ana de Armas';
SET @Character = 'Marta Cabrera';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jamie Lee Curtis';
SET @Character = 'Linda Drysdale';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Shannon';
SET @Character = 'Walt Thrombey';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Don Johnson';
SET @Character = 'Richard Drysdale';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Toni Collette';
SET @Character = 'Joni Thrombey';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'LaKeith Stanfield';
SET @Character = 'Lieutenant Elliott';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christopher Plummer';
SET @Character = 'Harlan Thrombey';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Katherine Langford';
SET @Character = 'Meg Thrombey';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('immigrant', 'detective', 'massachusetts', 'investigation', 'big family', 'mansion', 'whodunit', 'family home', 'murder mystery', 'neo-noir', 'privilege', 'absurd', 'suspenseful');

GO
-- ============================================

-- Movie: Chungking Express
DECLARE @MovieTitle VARCHAR(255) = 'Chungking Express';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Crime', 'Drama', 'Mystery', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Wong Kar-Wai');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Wong Kar-Wai');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Brigitte Lin';
SET @Character = 'Woman in Blonde Wig';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tony Leung Chiu-wai';
SET @Character = 'Cop 663';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Faye Wong';
SET @Character = 'Faye';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Takeshi Kaneshiro';
SET @Character = 'He Zhiwu, Cop 223';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Valerie Chow';
SET @Character = 'Air Hostess';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Piggy Chan';
SET @Character = 'Manager of ''Midnight Express''';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lee-Na Kwan';
SET @Character = 'Richard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zhiming Huang';
SET @Character = 'Man';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Liang Zhen';
SET @Character = 'The 2nd May';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Songshen Zuo';
SET @Character = 'Man';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('drug smuggling', 'police', 'ex-girlfriend', 'girlfriend', 'snack bar', 'romance', 'hong kong', 'expiration date', 'flight attendant', 'cleaning');

GO
-- ============================================

-- Movie: The Pursuit of Happyness
DECLARE @MovieTitle VARCHAR(255) = 'The Pursuit of Happyness';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Biography', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Gabriele Muccino');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Steve Conrad');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Will Smith';
SET @Character = 'Chris Gardner';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jaden Smith';
SET @Character = 'Christopher';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Thandiwe Newton';
SET @Character = 'Linda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brian Howe';
SET @Character = 'Jay Twistle';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Karen';
SET @Character = 'Martin Frohm';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dan Castellaneta';
SET @Character = 'Alan Frakesh';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kurt Fuller';
SET @Character = 'Walter Ribbon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Takayo Fischer';
SET @Character = 'Mrs. Chu';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kevin West';
SET @Character = 'World''s Greatest Dad';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'George Cheung';
SET @Character = 'Chinese Maintenance Worker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('work', 'worker', 'homeless person', 'single parent', 'san francisco', 'california', 'bus', 'homelessness', 'church service', 'bad luck', 'biography', 'based on true story', 'salesman', 'stockbroker', 'single father', 'inspiring story', 'poor', 'working life', 'inspirational', 'happiness');

GO
-- ============================================

-- Movie: The Substance
DECLARE @MovieTitle VARCHAR(255) = 'The Substance';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Horror', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Coralie Fargeat');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Coralie Fargeat');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Demi Moore';
SET @Character = 'Elisabeth';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Margaret Qualley';
SET @Character = 'Sue';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dennis Quaid';
SET @Character = 'Harvey';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Edward Hamilton-Clark';
SET @Character = 'Fred';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gore Abrams';
SET @Character = 'Oliver';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Oscar Lesage';
SET @Character = 'Troy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christian Erickson';
SET @Character = 'Man at Diner';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robin Greer';
SET @Character = 'Male Nurse';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Morton';
SET @Character = 'Doctor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hugo Diego Garcia';
SET @Character = 'Diego - Boyfriend';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new year''s eve', 'capitalism', 'black market', 'identity', 'beauty', 'satire', 'aging', 'celebrity', 'female protagonist', 'los angeles', 'california', 'has been', 'aerobics', 'disfigurement', 'woman director', 'beauty standards', 'insecure woman', 'toxic masculinity', 'drug', 'body horror', 'female rage', 'youth', 'actress', 'distressing');

GO
-- ============================================

-- Movie: Joyland
DECLARE @MovieTitle VARCHAR(255) = 'Joyland';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Crime', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Saim Sadiq');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Saim Sadiq',  'Maggie Briggs');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ali Junejo';
SET @Character = 'Haider';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rasti Farooq';
SET @Character = 'Mumtaz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alina Khan';
SET @Character = 'Biba';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sarwat Gilani';
SET @Character = 'Nucchi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Salmaan Peerzada';
SET @Character = 'Father Aman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sohail Sameer';
SET @Character = 'Saleem';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sania Saeed';
SET @Character = 'Fayyaz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ramiz Law';
SET @Character = 'Qaiser';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Honey Albela';
SET @Character = 'Ashfaq Saab';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Priya Usman Khan';
SET @Character = 'Shagnam Rani';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('dance', 'husband wife relationship', 'dancer', 'love', 'attraction', 'lgbt', 'pakistani culture', 'gay theme', 'transgender', 'tragic');

GO
-- ============================================

-- Movie: Circus of Life
DECLARE @MovieTitle VARCHAR(255) = 'Circus of Life';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Sarmad Sultan Khoosat');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Nirmal Bano');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Arif Hassan';
SET @Character = 'Rahat Khawaja';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samiya Mumtaz';
SET @Character = 'Farkhanda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eman Suleman';
SET @Character = 'Sadaf';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ali Kureshi';
SET @Character = 'Danish';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nadia Afgan';
SET @Character = 'TV Show Hostess';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adeel Afzal';
SET @Character = 'Usman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mehar Bano';
SET @Character = 'Cousin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hammad Haider Butt';
SET @Character = 'Cleric';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Agha Haider';
SET @Character = '';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ali Hasnain';
SET @Character = 'DJ';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('circus', 'social life', 'social justice', 'social');

GO
-- ============================================

-- Movie: The Godfather
DECLARE @MovieTitle VARCHAR(255) = 'The Godfather';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Francis Ford Coppola');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Mario Puzo', 'Francis Ford Coppola',  'Mario Puzo');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Marlon Brando';
SET @Character = 'Don Vito Corleone';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Al Pacino';
SET @Character = 'Michael';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Caan';
SET @Character = 'Sonny';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard S. Castellano';
SET @Character = 'Clemenza';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert Duvall';
SET @Character = 'Tom Hagen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sterling Hayden';
SET @Character = 'Capt. McCluskey';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Marley';
SET @Character = 'Jack Woltz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Conte';
SET @Character = 'Barzini';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Al Lettieri';
SET @Character = 'Sollozzo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Diane Keaton';
SET @Character = 'Kay Adams';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('based on novel or book', 'loss of loved one', 'love at first sight', 'italy', 'symbolism', 'patriarch', 'europe', 'organized crime', 'mafia', 'religion', 'lawyer', 'revenge motive', 'crime family', 'sicilian mafia', 'religious hypocrisy', 'macabre', 'gun violence', 'rise to power', 'dead horse', 'gang violence', 'aggressive', '1940s', '1950s', 'mafia war', 'vindictive', 'suspenseful', 'tense', 'admiring', 'audacious', 'commanding');

GO
-- ============================================

-- Movie: Pulp Fiction
DECLARE @MovieTitle VARCHAR(255) = 'Pulp Fiction';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Quentin Tarantino');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Quentin Tarantino', 'Roger Avary',  'Quentin Tarantino');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tim Roth';
SET @Character = 'Pumpkin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amanda Plummer';
SET @Character = 'Honey Bunny';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Laura Lovelace';
SET @Character = 'Waitress';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Travolta';
SET @Character = 'Vincent Vega';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samuel L. Jackson';
SET @Character = 'Jules Winnfield';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Phil LaMarr';
SET @Character = 'Marvin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Frank Whaley';
SET @Character = 'Brett';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Burr Steers';
SET @Character = 'Roger';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bruce Willis';
SET @Character = 'Butch Coolidge';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ving Rhames';
SET @Character = 'Marsellus Wallace';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('drug dealer', 'boxer', 'massage', 'stolen money', 'briefcase', 'crime boss', 'redemption', 'heirloom', 'dance competition', 'los angeles', 'california', 'theft', 'blunt', 'nonlinear timeline', 'multiple storylines', 'aggressive', 'neo-noir', 'philosophical', 'grand', 'ambiguous', 'vibrant');

GO
-- ============================================

-- Movie: October
DECLARE @MovieTitle VARCHAR(255) = 'October';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Shoojit Sircar');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Juhi Chaturvedi', 'Wajid Shaikh');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Varun Dhawan';
SET @Character = 'Danish Walia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Banita Sandhu';
SET @Character = 'Shiuli Iyer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gitanjali Rao';
SET @Character = 'Prof. Vidya Iyer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sahil Vedoliyaa';
SET @Character = 'Manjeet';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Isha Chaturvedi';
SET @Character = 'Ishani';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Prateek Kapoor';
SET @Character = 'Asthana';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Iteeva Pande';
SET @Character = 'Kaveri';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Karamveer Kanwar';
SET @Character = 'Kunal';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ashish Ghosh';
SET @Character = 'Dr. Ghosh';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rachica Oswal';
SET @Character = 'Danish''s Mother';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('bollywood');

GO
-- ============================================

-- Movie: Dune: Part One
DECLARE @MovieTitle VARCHAR(255) = 'Dune: Part One';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Drama', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Denis Villeneuve');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jon Spaihts', 'Denis Villeneuve', 'Eric Roth',  'Frank Herbert');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Timoth√©e Chalamet';
SET @Character = 'Paul Atreides';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rebecca Ferguson';
SET @Character = 'Lady Jessica Atreides';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Oscar Isaac';
SET @Character = 'Duke Leto Atreides';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jason Momoa';
SET @Character = 'Duncan Idaho';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stellan Skarsg√•rd';
SET @Character = 'Baron Vladimir Harkonnen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephen McKinley Henderson';
SET @Character = 'Thufir Hawat';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Josh Brolin';
SET @Character = 'Gurney Halleck';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Javier Bardem';
SET @Character = 'Stilgar';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sharon Duncan-Brewster';
SET @Character = 'Dr. Liet Kynes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chang Chen';
SET @Character = 'Dr. Wellington Yueh';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('empire', 'future', 'epic', 'army', 'based on novel or book', 'prophecy', 'dystopia', 'emperor', 'sand', 'spice', 'hallucinogen', 'treason', 'baron', 'revenge', 'premonition', 'betrayal', 'space', 'water shortage', 'creature', 'desert', 'knife fight', 'destiny', 'giant worm', 'space opera', 'sand dune', 'messiah', 'domineering', 'mother son relationship', 'wonder', 'giant creature', 'suspenseful', 'intense', 'bold', 'commanding', 'foreboding', 'powerful');

GO

-- ============================================

-- Movie: Up
DECLARE @MovieTitle VARCHAR(255) = 'Up';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Adventure', 'Comedy', 'Drama', 'Family');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Pete Docter', 'Bob Peterson');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Pete Docter', 'Bob Peterson', 'Tom McCarthy',  'Bob Peterson', 'Pete Docter');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Edward Asner';
SET @Character = 'Carl Fredricksen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christopher Plummer';
SET @Character = 'Charles Muntz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jordan Nagai';
SET @Character = 'Russell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bob Peterson';
SET @Character = 'Dug / Alpha';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Delroy Lindo';
SET @Character = 'Beta';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jerome Ranft';
SET @Character = 'Gamma';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Ratzenberger';
SET @Character = 'Construction Foreman Tom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Kaye';
SET @Character = 'Newsreel Announcer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Elie Docter';
SET @Character = 'Young Ellie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeremy Leary';
SET @Character = 'Young Carl';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('central and south america', 'age difference', 'villain', 'balloon', 'travel', 'dog', 'duringcreditsstinger', 'pets', 'exploring', 'senior', 'sentimental');

GO
-- ============================================

-- Movie: Dragon Ball Daima
DECLARE @MovieTitle VARCHAR(255) = 'Dragon Ball Daima';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Action', 'Adventure', 'Comedy', 'Fantasy', 'Sci-Fi');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Y√ªko Kakihara', 'Y√ªko Kakihara', 'Akira Toriyama');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Masako Nozawa';
SET @Character = 'Son Goku / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'K√¥ki Uchiyama';
SET @Character = 'Gurorio';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aaron Dismuke';
SET @Character = 'Glorio';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephanie Nadolny';
SET @Character = 'Goku';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yumiko Kobayashi';
SET @Character = 'Kai√¥shin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nia Celeste';
SET @Character = 'Supreme Kai';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ai Fairouz';
SET @Character = 'Panji';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sh√¥tar√¥ Morikubo';
SET @Character = 'King Gom√¢';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Laflin';
SET @Character = 'King Gomah';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Veronica Laux';
SET @Character = 'Panzy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Dragon Ball GT
DECLARE @MovieTitle VARCHAR(255) = 'Dragon Ball GT';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Action', 'Adventure', 'Comedy', 'Fantasy', 'Sci-Fi', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Akira Toriyama', 'Akira Toriyama', 'Atsushi Maekawa');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Elise Baughman';
SET @Character = 'Pan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andrew Chandler';
SET @Character = 'Narrator / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Masako Nozawa';
SET @Character = 'Son Gok√ª / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Y√ªko Minaguchi';
SET @Character = 'Pan / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'J√¥ji Yanami';
SET @Character = 'Narrator / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Caitlynne Medrek';
SET @Character = 'Pan / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeremiah Yurk';
SET @Character = 'Adult Goku / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephanie Nadolny';
SET @Character = 'Young Goku / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eric Vale';
SET @Character = 'Trunks / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matthew Erickson';
SET @Character = 'Gill / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: My Hero Academia
DECLARE @MovieTitle VARCHAR(255) = 'My Hero Academia';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Action', 'Adventure', 'Fantasy', 'Sci-Fi');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('K√¥hei Horikoshi', 'K√¥hei Horikoshi', 'K√¥hei Horikoshi');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Daiki Yamashita';
SET @Character = 'Izuku Midoriya';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Justin Briner';
SET @Character = 'Izuku Midoriya';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nobuhiko Okamoto';
SET @Character = 'Katsuki Bakugou';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ayane Sakura';
SET @Character = 'Ochako Uraraka / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Y√ªki Kaji';
SET @Character = 'Shouto Todoroki';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kaito Ishikawa';
SET @Character = 'Tenya Iida / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Clifford Chapin';
SET @Character = 'Katsuki Bakugo / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Toshiki Masuda';
SET @Character = 'Eijirou Kirishima / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jun''ichi Suwabe';
SET @Character = 'Shouta Aizawa / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Luci Christian';
SET @Character = 'Ochaco Uraraka / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Attack on Titan
DECLARE @MovieTitle VARCHAR(255) = 'Attack on Titan';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Action', 'Adventure', 'Drama', 'Fantasy', 'Horror');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Hajime Isayama', 'Hajime Isayama', 'Yasuko Kobayashi');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jessie James Grelle';
SET @Character = 'Armin Arlert / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bryce Papenbrook';
SET @Character = 'Eren Jaeger / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Trina Nishimura';
SET @Character = 'Mikasa Ackermann / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Y√ªki Kaji';
SET @Character = 'Eren Yeager';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yui Ishikawa';
SET @Character = 'Mikasa Ackerman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Marina Inoue';
SET @Character = 'Armin Arlert / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kish√¥ Taniyama';
SET @Character = 'Jean Kirstein';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hiro Shimono';
SET @Character = 'Connie Springer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Clifford Chapin';
SET @Character = 'Conny Springer / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mike McFarland';
SET @Character = 'Jean Kirschtein / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Naruto
DECLARE @MovieTitle VARCHAR(255) = 'Naruto';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Action', 'Adventure', 'Comedy', 'Fantasy');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Masashi Kishimoto', 'Masashi Kishimoto', 'Masashi Kishimoto');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Junko Takeuchi';
SET @Character = 'Naruto Uzumaki / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maile Flanagan';
SET @Character = 'Naruto Uzumaki';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kate Higgins';
SET @Character = 'Sakura Haruno / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chie Nakamura';
SET @Character = 'Sakura Haruno';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Noriaki Sugiyama';
SET @Character = 'Sasuke Uchiha';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yuri Lowenthal';
SET @Character = 'Sasuke Uchiha / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dave Wittenberg';
SET @Character = 'Kakashi Hatake / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tony Beck';
SET @Character = 'Gaara';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Laurent Vernin';
SET @Character = 'Itachi Uchiha';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Colleen O''Shaughnessey';
SET @Character = 'Ino Yamanaka / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: One Piece
DECLARE @MovieTitle VARCHAR(255) = 'One Piece';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Action', 'Adventure', 'Comedy', 'Drama', 'Fantasy');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Eiichir√¥ Oda', 'Eiichir√¥ Oda', 'Eiichir√¥ Oda');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Mayumi Tanaka';
SET @Character = 'Monkey D. Luffy / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Akemi Okamura';
SET @Character = 'Nami / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Laurent Vernin';
SET @Character = 'Mr. 7';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tony Beck';
SET @Character = 'Roronoa Zoro';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kazuya Nakai';
SET @Character = 'Roronoa Zoro / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kappei Yamaguchi';
SET @Character = 'Usopp / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hiroaki Hirata';
SET @Character = 'Sanji / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ikue √îtani';
SET @Character = 'Tony Tony Chopper / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Colleen Clinkenbeard';
SET @Character = 'Monkey D. Luffy / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yuriko Yamaguchi';
SET @Character = 'Nico Robin / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Bleach
DECLARE @MovieTitle VARCHAR(255) = 'Bleach';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Action', 'Adventure', 'Fantasy');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Tite Kubo', 'Tite Kubo', 'Masashi Sogo');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Johnny Yong Bosch';
SET @Character = 'Ichigo Kurosaki / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michelle Ruff';
SET @Character = 'Rukia Kuchiki / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephanie Sheh';
SET @Character = 'Orihime Inoue / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jamieson Price';
SET @Character = 'Yasutora ''Chad'' Sado / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steve Prince';
SET @Character = 'Uryu Ishida / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wally Wingert';
SET @Character = 'Renji Abarai / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kirk Thornton';
SET @Character = 'Narrator / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steve Staley';
SET @Character = 'Toshiro Hitsugaya / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wendee Lee';
SET @Character = 'Yoruichi Shihoin / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Masakazu Morita';
SET @Character = 'Ichigo Kurosaki / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Breaking Bad
DECLARE @MovieTitle VARCHAR(255) = 'Breaking Bad';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Vince Gilligan', 'Vince Gilligan', 'Peter Gould');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Bryan Cranston';
SET @Character = 'Walter White';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anna Gunn';
SET @Character = 'Skyler White';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aaron Paul';
SET @Character = 'Jesse Pinkman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Betsy Brandt';
SET @Character = 'Marie Schrader';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'RJ Mitte';
SET @Character = 'Walter White, Jr.';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dean Norris';
SET @Character = 'Hank Schrader';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bob Odenkirk';
SET @Character = 'Saul Goodman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steven Michael Quezada';
SET @Character = 'Steven Gomez / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jonathan Banks';
SET @Character = 'Mike Ehrmantraut';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Giancarlo Esposito';
SET @Character = 'Gus Fring';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Better Call Saul
DECLARE @MovieTitle VARCHAR(255) = 'Better Call Saul';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Vince Gilligan', 'Vince Gilligan', 'Peter Gould');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Bob Odenkirk';
SET @Character = 'Jimmy McGill';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jonathan Banks';
SET @Character = 'Mike Ehrmantraut';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rhea Seehorn';
SET @Character = 'Kim Wexler';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Patrick Fabian';
SET @Character = 'Howard Hamlin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Mando';
SET @Character = 'Nacho Varga';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Giancarlo Esposito';
SET @Character = 'Gus Fring';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael McKean';
SET @Character = 'Chuck McGill';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tony Dalton';
SET @Character = 'Lalo Salamanca';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Margolis';
SET @Character = 'Hector Salamanca';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kerry Condon';
SET @Character = 'Stacey Ehrmantraut';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: After Life
DECLARE @MovieTitle VARCHAR(255) = 'After Life';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Ricky Gervais', 'Ricky Gervais', 'Ricky Gervais');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ricky Gervais';
SET @Character = 'Tony';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Basden';
SET @Character = 'Matt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tony Way';
SET @Character = 'Lenny';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Diane Morgan';
SET @Character = 'Kath';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kerry Godliman';
SET @Character = 'Lisa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ashley Jensen';
SET @Character = 'Nurse / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anti';
SET @Character = 'Brandy the Dog';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michelle Greenidge';
SET @Character = 'Valerie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joe Wilkinson';
SET @Character = 'Pat';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Penelope Wilton';
SET @Character = 'Anne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Ted Lasso
DECLARE @MovieTitle VARCHAR(255) = 'Ted Lasso';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Sport');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Brendan Hunt', 'Brendan Hunt', 'Brendan Hunt');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jeremy Swift';
SET @Character = 'Leslie Higgins';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jason Sudeikis';
SET @Character = 'Ted Lasso';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hannah Waddingham';
SET @Character = 'Rebecca Welton';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brett Goldstein';
SET @Character = 'Roy Kent';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Juno Temple';
SET @Character = 'Keeley Jones';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Phil Dunster';
SET @Character = 'Jamie Tartt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brendan Hunt';
SET @Character = 'Coach Beard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nick Mohammed';
SET @Character = 'Nathan Shelley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Toheeb Jimoh';
SET @Character = 'Sam Obisanya';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kola Bokinni';
SET @Character = 'Isaac McAdoo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Money Heist
DECLARE @MovieTitle VARCHAR(255) = 'Money Heist';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Crime', 'Drama', 'Mystery', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('√Ålex Pina', '√Ålex Pina', '√Ålex Pina');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = '√örsula Corber√≥';
SET @Character = 'Tokio';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = '√Ålvaro Morte';
SET @Character = 'El Profesor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Itziar Itu√±o';
SET @Character = 'Raquel Murillo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Pedro Alonso';
SET @Character = 'Berl√≠n';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Miguel Herr√°n';
SET @Character = 'R√≠o';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jaime Lorente';
SET @Character = 'Denver';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Esther Acebo';
SET @Character = 'M√≥nica Gaztambide';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Darko Peric';
SET @Character = 'Helsinki';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mike Manning';
SET @Character = 'Denver';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Enrique Arce';
SET @Character = 'Arturo Rom√°n';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Squid Game
DECLARE @MovieTitle VARCHAR(255) = 'Squid Game';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Drama', 'Mystery', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Hwang Dong-hyuk');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Lee Jung-jae';
SET @Character = 'Seong Gi-hun';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Choi';
SET @Character = 'Front Man / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Greg Chun';
SET @Character = 'Choi Seung-hyun / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wi Ha-joon';
SET @Character = 'Hwang Jun-ho';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lee Byung-hun';
SET @Character = 'Front Man / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeon Young-soo';
SET @Character = 'Game Guide / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Park Hae-soo';
SET @Character = 'Cho Sang-woo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hoyeon';
SET @Character = 'Kang Sae-byeok / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kim Byung-cheol';
SET @Character = 'Instructions Guard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yasushi Iwaki';
SET @Character = 'Others';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: The Office
DECLARE @MovieTitle VARCHAR(255) = 'The Office';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Greg Daniels', 'Greg Daniels', 'Greg Daniels');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Rainn Wilson';
SET @Character = 'Dwight Schrute';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Krasinski';
SET @Character = 'Jim Halpert';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jenna Fischer';
SET @Character = 'Pam Beesly';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Leslie David Baker';
SET @Character = 'Stanley Hudson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brian Baumgartner';
SET @Character = 'Kevin Malone';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Angela Kinsey';
SET @Character = 'Angela Martin / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kate Flannery';
SET @Character = 'Meredith Palmer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Phyllis Smith';
SET @Character = 'Phyllis Vance / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Creed Bratton';
SET @Character = 'Creed Bratton';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Oscar Nu√±ez';
SET @Character = 'Oscar Martinez';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Friends
DECLARE @MovieTitle VARCHAR(255) = 'Friends';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Romance');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('David Crane', 'David Crane', 'David Crane');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jennifer Aniston';
SET @Character = 'Rachel Green';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Courteney Cox';
SET @Character = 'Monica Geller / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lisa Kudrow';
SET @Character = 'Phoebe Buffay / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matt LeBlanc';
SET @Character = 'Joey Tribbiani';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matthew Perry';
SET @Character = 'Chandler Bing';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Schwimmer';
SET @Character = 'Dr. Ross Geller / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Michael Tyler';
SET @Character = 'Gunther';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Elliott Gould';
SET @Character = 'Jack Geller';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christina Pickles';
SET @Character = 'Judy Geller';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maggie Wheeler';
SET @Character = 'Janice';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Stranger Things
DECLARE @MovieTitle VARCHAR(255) = 'Stranger Things';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Fantasy', 'Horror', 'Mystery', 'Sci-Fi', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Matt Duffer', 'Matt Duffer', 'Matt Duffer');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Winona Ryder';
SET @Character = 'Joyce Byers';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Harbour';
SET @Character = 'Jim Hopper';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Finn Wolfhard';
SET @Character = 'Mike Wheeler';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gaten Matarazzo';
SET @Character = 'Dustin Henderson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Caleb McLaughlin';
SET @Character = 'Lucas Sinclair';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Natalia Dyer';
SET @Character = 'Nancy Wheeler';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Charlie Heaton';
SET @Character = 'Jonathan Byers';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joe Keery';
SET @Character = 'Steve Harrington';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Millie Bobby Brown';
SET @Character = 'Eleven / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Noah Schnapp';
SET @Character = 'Will Byers';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Game of Thrones
DECLARE @MovieTitle VARCHAR(255) = 'Game of Thrones';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Drama', 'Fantasy');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('David Benioff', 'David Benioff', 'David Benioff');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Peter Dinklage';
SET @Character = 'Tyrion Lannister';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lena Headey';
SET @Character = 'Cersei Lannister';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kit Harington';
SET @Character = 'Jon Snow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emilia Clarke';
SET @Character = 'Daenerys Targaryen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sophie Turner';
SET @Character = 'Sansa Stark';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maisie Williams';
SET @Character = 'Arya Stark';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nikolaj Coster-Waldau';
SET @Character = 'Jaime Lannister';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Iain Glen';
SET @Character = 'Jorah Mormont';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Bradley';
SET @Character = 'Samwell Tarly';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alfie Allen';
SET @Character = 'Theon Greyjoy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: House of the Dragon
DECLARE @MovieTitle VARCHAR(255) = 'House of the Dragon';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Drama', 'Fantasy', 'Romance');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Ryan J. Condal', 'Ryan J. Condal', 'Ryan J. Condal');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Matt Smith';
SET @Character = 'Prince Daemon Targaryen / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Fabien Frankel';
SET @Character = 'Ser Criston Cole';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steve Toussaint';
SET @Character = 'Lord Corlys ''The Sea Snake'' Velaryon / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emma D''Arcy';
SET @Character = 'Queen Rhaenyra Targaryen / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rhys Ifans';
SET @Character = 'Ser Otto Hightower';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Olivia Cooke';
SET @Character = 'Queen Alicent Hightower';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jefferson Hall';
SET @Character = 'Ser Tyland Lannister / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sonoya Mizuno';
SET @Character = 'Mysaria ''The White Worm''';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kurt Egyiawan';
SET @Character = 'Grand Maester Orwyle / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matthew Needham';
SET @Character = 'Lord Larys ''The Clubfoot'' Strong / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Peaky Blinders
DECLARE @MovieTitle VARCHAR(255) = 'Peaky Blinders';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Steven Knight', 'Steven Knight', 'Steven Knight');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Cillian Murphy';
SET @Character = 'Thomas Shelby';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Anderson';
SET @Character = 'Arthur Shelby';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sophie Rundle';
SET @Character = 'Ada Shelby / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Helen McCrory';
SET @Character = 'Polly Gray / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ned Dennehy';
SET @Character = 'Charlie Strong';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Finn Cole';
SET @Character = 'Michael Gray';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Natasha O''Keeffe';
SET @Character = 'Lizzie Stark';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ian Peck';
SET @Character = 'Curly';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harry Kirton';
SET @Character = 'Finn Shelby';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Packy Lee';
SET @Character = 'Johnny Dogs';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Black Mirror
DECLARE @MovieTitle VARCHAR(255) = 'Black Mirror';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Mystery', 'Sci-Fi', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Charlie Brooker', 'Charlie Brooker', 'Charlie Brooker');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Cristin Milioti';
SET @Character = 'Nanette Cole';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jimmi Simpson';
SET @Character = 'Walton';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Billy Magnussen';
SET @Character = 'Karl / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wunmi Mosaku';
SET @Character = 'Katie / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Monica Dolan';
SET @Character = 'CS Linda Grace / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Milanka Brooks';
SET @Character = 'Elena Tulaska';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Osy Ikhile';
SET @Character = 'Nate Packer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daniel Lapaine';
SET @Character = 'Dawson / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hannah John-Kamen';
SET @Character = 'Selma Telse / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michaela Coel';
SET @Character = 'Airport Stewardess / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: The Crown
DECLARE @MovieTitle VARCHAR(255) = 'The Crown';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Biography', 'Drama', 'History');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Peter Morgan', 'Peter Morgan', 'Peter Morgan');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Claire Foy';
SET @Character = 'Queen Elizabeth II / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Olivia Colman';
SET @Character = 'Queen Elizabeth II';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Imelda Staunton';
SET @Character = 'Queen Elizabeth II';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matt Smith';
SET @Character = 'Philip, Duke of Edinburgh / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tobias Menzies';
SET @Character = 'Prince Philip, Duke of Edinburgh';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dominic West';
SET @Character = 'Prince Charles';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Charles Edwards';
SET @Character = 'Martin Charteris';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jonathan Pryce';
SET @Character = 'Prince Philip, Duke of Edinburgh';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vanessa Kirby';
SET @Character = 'Princess Margaret / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Marion Bailey';
SET @Character = 'Queen Elizabeth the Queen Mother';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Sherlock
DECLARE @MovieTitle VARCHAR(255) = 'Sherlock';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Mystery', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Mark Gatiss', 'Mark Gatiss', 'Mark Gatiss');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Benedict Cumberbatch';
SET @Character = 'Sherlock Holmes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Martin Freeman';
SET @Character = 'Dr. John Watson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Una Stubbs';
SET @Character = 'Mrs. Hudson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rupert Graves';
SET @Character = 'DI Lestrade / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Louise Brealey';
SET @Character = 'Molly Hooper / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Gatiss';
SET @Character = 'Mycroft Holmes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andrew Scott';
SET @Character = 'Jim Moriarty / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amanda Abbington';
SET @Character = 'Mary Morstan / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jonathan Aris';
SET @Character = 'Anderson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vinette Robinson';
SET @Character = 'Sgt Sally Donovan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Westworld
DECLARE @MovieTitle VARCHAR(255) = 'Westworld';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Mystery', 'Sci-Fi');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Michael Crichton', 'Michael Crichton', 'Lisa Joy');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Thandiwe Newton';
SET @Character = 'Maeve Millay';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeffrey Wright';
SET @Character = 'Bernard Lowe';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ed Harris';
SET @Character = 'Man in Black';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Evan Rachel Wood';
SET @Character = 'Dolores Abernathy / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tessa Thompson';
SET @Character = 'Charlotte Hale';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Marsden';
SET @Character = 'Teddy Flood';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Luke Hemsworth';
SET @Character = 'Ashley Stubbs';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Angela Sarafyan';
SET @Character = 'Clementine Pennyfeather';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anthony Hopkins';
SET @Character = 'Dr. Robert Ford';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aaron Paul';
SET @Character = 'Caleb Nichols';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: True Detective
DECLARE @MovieTitle VARCHAR(255) = 'True Detective';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Mystery', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Nic Pizzolatto', 'Nic Pizzolatto', 'Nic Pizzolatto');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Matthew McConaughey';
SET @Character = 'Detective Rust Cohle';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Colin Farrell';
SET @Character = 'Detective Ray Velcoro';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mahershala Ali';
SET @Character = 'Detective Wayne Hays';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Woody Harrelson';
SET @Character = 'Detective Marty Hart';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rachel McAdams';
SET @Character = 'Detective Ani Bezzerides';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Carmen Ejogo';
SET @Character = 'Amelia Reardon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michelle Monaghan';
SET @Character = 'Maggie Hart';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Taylor Kitsch';
SET @Character = 'Officer Paul Woodrugh';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephen Dorff';
SET @Character = 'Detective Roland West';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Potts';
SET @Character = 'Detective Maynard Gilbough';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: The Boys
DECLARE @MovieTitle VARCHAR(255) = 'The Boys';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Comedy', 'Crime', 'Drama', 'Sci-Fi');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Garth Ennis', 'Garth Ennis', 'Garth Ennis');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Karl Urban';
SET @Character = 'Billy Butcher';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jack Quaid';
SET @Character = 'Hughie Campbell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Antony Starr';
SET @Character = 'Homelander';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Erin Moriarty';
SET @Character = 'Starlight / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jessie T. Usher';
SET @Character = 'A-Train / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Laz Alonso';
SET @Character = 'Mother''s Milk';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chace Crawford';
SET @Character = 'The Deep / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tomer Capone';
SET @Character = 'Frenchie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Karen Fukuhara';
SET @Character = 'Kimiko Miyashiro';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nathan Mitchell';
SET @Character = 'Black Noir / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Fargo
DECLARE @MovieTitle VARCHAR(255) = 'Fargo';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle AND Type = 'Series';

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Noah Hawley', 'Noah Hawley', 'Lee Edward Colston');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Allison Tolman';
SET @Character = 'Molly Solverson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Billy Bob Thornton';
SET @Character = 'Lorne Malvo / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Colin Hanks';
SET @Character = 'Gus Grimly';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jason Schwartzman';
SET @Character = 'Josto Fadda / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Martin Freeman';
SET @Character = 'Lester Nygaard / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Russell Harvard';
SET @Character = 'Mr. Wrench';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bokeem Woodbine';
SET @Character = 'Mike Milligan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brad Mann';
SET @Character = 'Gale Kitchen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kirsten Dunst';
SET @Character = 'Peggy Blumquist';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ewan McGregor';
SET @Character = 'Emmit Stussy / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Dark
DECLARE @MovieTitle VARCHAR(255) = 'Dark';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Mystery', 'Sci-Fi', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Baran bo Odar', 'Jantje Friese', 'Jantje Friese');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Louis Hofmann';
SET @Character = 'Jonas Kahnwald';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Karoline Eichhorn';
SET @Character = 'Charlotte Doppler / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lisa Vicari';
SET @Character = 'Martha Nielsen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maja Sch√∂ne';
SET @Character = 'Hannah Kahnwald / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'J√∂rdis Triebel';
SET @Character = 'Katharina Nielsen / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andreas Pietschmann';
SET @Character = 'The Stranger / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephan Kampwirth';
SET @Character = 'Peter Doppler / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Lux';
SET @Character = 'Bartosz Tiedemann / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Oliver Masucci';
SET @Character = 'Ulrich Nielsen / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Moritz Jahn';
SET @Character = 'Magnus Nielsen / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Ozark
DECLARE @MovieTitle VARCHAR(255) = 'Ozark';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Bill Dubuque', 'Bill Dubuque', 'Bill Dubuque');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jason Bateman';
SET @Character = 'Martin ''Marty'' Byrde';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Laura Linney';
SET @Character = 'Wendy Byrde';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sofia Hublitz';
SET @Character = 'Charlotte Byrde';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Skylar Gaertner';
SET @Character = 'Jonah Byrde';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julia Garner';
SET @Character = 'Ruth Langmore';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Charlie Tahan';
SET @Character = 'Wyatt Langmore / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lisa Emery';
SET @Character = 'Darlene Snell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Carson Holmes';
SET @Character = 'Three Langmore / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jordana Spiro';
SET @Character = 'Rachel / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jessica Frances Dukes';
SET @Character = 'Special Agent Maya Miller';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Succession
DECLARE @MovieTitle VARCHAR(255) = 'Succession';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jesse Armstrong', 'Jesse Armstrong', 'Jamie Carragher');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Nicholas Braun';
SET @Character = 'Greg Hirsch';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brian Cox';
SET @Character = 'Logan Roy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kieran Culkin';
SET @Character = 'Roman Roy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peter Friedman';
SET @Character = 'Frank Vernon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matthew Macfadyen';
SET @Character = 'Tom Wambsgans';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alan Ruck';
SET @Character = 'Connor Roy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sarah Snook';
SET @Character = 'Shiv Roy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeremy Strong';
SET @Character = 'Kendall Roy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'J. Smith-Cameron';
SET @Character = 'Gerri Kellman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scott Nicholson';
SET @Character = 'Colin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Narcos
DECLARE @MovieTitle VARCHAR(255) = 'Narcos';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Biography', 'Crime', 'Drama', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Carlo Bernard', 'Carlo Bernard', 'Carlo Bernard');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Pedro Pascal';
SET @Character = 'Javier Pe√±a';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wagner Moura';
SET @Character = 'Pablo Escobar';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Boyd Holbrook';
SET @Character = 'Steve Murphy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alberto Ammann';
SET @Character = 'Pacho Herrera';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paulina Gaitan';
SET @Character = 'Tata Escobar';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Juan Murcia';
SET @Character = 'Juan Pablo Escobar';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jorge Monterrosa';
SET @Character = 'Trujillo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dami√°n Alc√°zar';
SET @Character = 'Gilberto Rodr√≠guez Orejuela / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Francisco Denis';
SET @Character = 'Miguel Rodr√≠guez Orejuela / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ra√∫l M√©ndez';
SET @Character = 'C√©sar Gaviria';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Mindhunter
DECLARE @MovieTitle VARCHAR(255) = 'Mindhunter';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Mystery', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('John Douglas', 'Mark Olshaker', 'Joe Penhall');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jonathan Groff';
SET @Character = 'Holden Ford';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Holt McCallany';
SET @Character = 'Bill Tench';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anna Torv';
SET @Character = 'Dr. Wendy Carr / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sonny Valicenti';
SET @Character = 'ADT Serviceman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stacey Roca';
SET @Character = 'Nancy Tench';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hannah Gross';
SET @Character = 'Debbie Mitford';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joe Tuttle';
SET @Character = 'Gregg Smith';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zachary Scott Ross';
SET @Character = 'Brian Tench';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cotter Smith';
SET @Character = 'Unit Chief Shepard / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Albert Jones';
SET @Character = 'Jim Barney / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: The Witcher
DECLARE @MovieTitle VARCHAR(255) = 'The Witcher';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Drama', 'Fantasy', 'Mystery');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Lauren Schmidt Hissrich', 'Lauren Schmidt Hissrich', 'Lauren Schmidt Hissrich');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Freya Allan';
SET @Character = 'Ciri';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Henry Cavill';
SET @Character = 'Geralt of Rivia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anya Chalotra';
SET @Character = 'Yennefer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eamon Farren';
SET @Character = 'Cahir';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mim√Æ M Khayisa';
SET @Character = 'Fringilla';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'MyAnna Buring';
SET @Character = 'Tissaia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joey Batey';
SET @Character = 'Jaskier';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wilson Mbomio';
SET @Character = 'Dara';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anna Shaffer';
SET @Character = 'Triss';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Royce Pierreson';
SET @Character = 'Istredd';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Mad Men
DECLARE @MovieTitle VARCHAR(255) = 'Mad Men';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Matthew Weiner', 'Matthew Weiner', 'Jonathan Igla');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jon Hamm';
SET @Character = 'Don Draper';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Elisabeth Moss';
SET @Character = 'Peggy Olson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vincent Kartheiser';
SET @Character = 'Pete Campbell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'January Jones';
SET @Character = 'Betty Francis / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christina Hendricks';
SET @Character = 'Joan Harris / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aaron Staton';
SET @Character = 'Ken Cosgrove';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rich Sommer';
SET @Character = 'Harry Crane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Slattery';
SET @Character = 'Roger Sterling';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kiernan Shipka';
SET @Character = 'Sally Draper';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert Morse';
SET @Character = 'Bertram Cooper';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Lost
DECLARE @MovieTitle VARCHAR(255) = 'Lost';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure', 'Drama', 'Fantasy', 'Mystery', 'Sci-Fi', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('J.J. Abrams', 'J.J. Abrams', 'J.J. Abrams');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jorge Garcia';
SET @Character = 'Hugo ''Hurley'' Reyes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Josh Holloway';
SET @Character = 'James ''Sawyer'' Ford';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yunjin Kim';
SET @Character = 'Sun-Hwa Kwon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Evangeline Lilly';
SET @Character = 'Kate Austen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Terry O''Quinn';
SET @Character = 'John Locke / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Naveen Andrews';
SET @Character = 'Sayid Jarrah';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matthew Fox';
SET @Character = 'Dr. Jack Shephard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daniel Dae Kim';
SET @Character = 'Jin-Soo Kwon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emilie de Ravin';
SET @Character = 'Claire Littleton';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Emerson';
SET @Character = 'Ben Linus / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Prison Break
DECLARE @MovieTitle VARCHAR(255) = 'Prison Break';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Crime', 'Drama', 'Mystery', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Paul T. Scheuring', 'Paul T. Scheuring', 'Paul T. Scheuring');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Dominic Purcell';
SET @Character = 'Lincoln ''Linc'' Burrows / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wentworth Miller';
SET @Character = 'Michael Scofield';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amaury Nolasco';
SET @Character = 'Fernando Sucre';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert Knepper';
SET @Character = 'Theodore ''T-Bag'' Bagwell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sarah Wayne Callies';
SET @Character = 'Sara Tancredi / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wade Williams';
SET @Character = 'Brad Bellick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'William Fichtner';
SET @Character = 'Alexander Mahone / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Adelstein';
SET @Character = 'Paul Kellerman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rockmond Dunbar';
SET @Character = 'Benjamin Miles ''C-Note'' Franklin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jodi Lyn O''Keefe';
SET @Character = 'Gretchen Morgan / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: The Mandalorian
DECLARE @MovieTitle VARCHAR(255) = 'The Mandalorian';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Fantasy', 'Sci-Fi');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jon Favreau', 'Jon Favreau', 'George Lucas');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Pedro Pascal';
SET @Character = 'The Mandalorian';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Bartlett';
SET @Character = 'Nevarro Copper Droid / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Katee Sackhoff';
SET @Character = 'Bo-Katan Kryze';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Carl Weathers';
SET @Character = 'Greef Karga';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Giancarlo Esposito';
SET @Character = 'Moff Gideon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emily Swallow';
SET @Character = 'The Armorer / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brendan Wayne';
SET @Character = 'The Mandalorian / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Misty Rosas';
SET @Character = 'Kuiil Performance Artist / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Leilani Shiu';
SET @Character = 'Jawa / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lateef Crowder';
SET @Character = 'The Mandalorian';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Dexter
DECLARE @MovieTitle VARCHAR(255) = 'Dexter';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Mystery', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jeff Lindsay', 'James Manos Jr.', 'James Manos Jr.');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Michael C. Hall';
SET @Character = 'Dexter Morgan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jennifer Carpenter';
SET @Character = 'Debra Morgan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Zayas';
SET @Character = 'Sgt. Angel Batista / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Remar';
SET @Character = 'Harry Morgan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'C.S. Lee';
SET @Character = 'Vince Masuka';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Luna Lauren Velez';
SET @Character = 'Lt. Maria LaGuerta / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Desmond Harrington';
SET @Character = 'Det. Joseph ''Joey'' Quinn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julie Benz';
SET @Character = 'Rita Bennett / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christina Robinson';
SET @Character = 'Astor Bennett';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Geoff Pierson';
SET @Character = 'Deputy Chief Tom Matthews / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: How I Met Your Mother
DECLARE @MovieTitle VARCHAR(255) = 'How I Met Your Mother';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Romance');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Carter Bays', 'Carter Bays', 'Craig Thomas');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Josh Radnor';
SET @Character = 'Ted Mosby';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jason Segel';
SET @Character = 'Marshall Eriksen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cobie Smulders';
SET @Character = 'Robin Scherbatsky';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Neil Patrick Harris';
SET @Character = 'Barney Stinson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alyson Hannigan';
SET @Character = 'Lily Aldrin / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lyndsy Fonseca';
SET @Character = 'Daughter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Henrie';
SET @Character = 'Son';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cristin Milioti';
SET @Character = 'Tracy McConnell / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Marshall Manesh';
SET @Character = 'Ranjit';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joe Nieves';
SET @Character = 'Carl';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Brooklyn Nine-Nine
DECLARE @MovieTitle VARCHAR(255) = 'Brooklyn Nine-Nine';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Crime');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Dan Goor', 'Dan Goor', 'Michael Schur');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Andy Samberg';
SET @Character = 'Jake Peralta';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephanie Beatriz';
SET @Character = 'Rosa Diaz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Terry Crews';
SET @Character = 'Terry Jeffords';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Melissa Fumero';
SET @Character = 'Amy Santiago';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joe Lo Truglio';
SET @Character = 'Charles Boyle';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andre Braugher';
SET @Character = 'Raymond Holt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dirk Blocker';
SET @Character = 'Hitchcock';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joel McKinnon Miller';
SET @Character = 'Scully';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chelsea Peretti';
SET @Character = 'Gina Linetti';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Marc Evan Jackson';
SET @Character = 'Kevin Cozner';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: The Big Bang Theory
DECLARE @MovieTitle VARCHAR(255) = 'The Big Bang Theory';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Romance');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Chuck Lorre', 'Chuck Lorre', 'Chuck Lorre');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Johnny Galecki';
SET @Character = 'Leonard Hofstadter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jim Parsons';
SET @Character = 'Sheldon Cooper';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kaley Cuoco';
SET @Character = 'Penny / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Simon Helberg';
SET @Character = 'Howard Wolowitz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kunal Nayyar';
SET @Character = 'Raj Koothrappali';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Melissa Rauch';
SET @Character = 'Bernadette Rostenkowski';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mayim Bialik';
SET @Character = 'Amy Farrah Fowler';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kevin Sussman';
SET @Character = 'Stuart Bloom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Carol Ann Susi';
SET @Character = 'Debbie Wolowitz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Ross Bowie';
SET @Character = 'Barry Kripke';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Parks and Recreation
DECLARE @MovieTitle VARCHAR(255) = 'Parks and Recreation';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Greg Daniels', 'Greg Daniels', 'Michael Schur');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Amy Poehler';
SET @Character = 'Leslie Knope';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aubrey Plaza';
SET @Character = 'April Ludgate';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nick Offerman';
SET @Character = 'Ron Swanson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jim O''Heir';
SET @Character = 'Jerry Gergich';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aziz Ansari';
SET @Character = 'Tom Haverford';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Retta';
SET @Character = 'Donna Meagle';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Pratt';
SET @Character = 'Andy Dwyer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rashida Jones';
SET @Character = 'Ann Perkins';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adam Scott';
SET @Character = 'Ben Wyatt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rob Lowe';
SET @Character = 'Chris Traeger';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Community
DECLARE @MovieTitle VARCHAR(255) = 'Community';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Dan Harmon', 'Dan Harmon', 'Tim Saccardo');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Joel McHale';
SET @Character = 'Jeff Winger / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gillian Jacobs';
SET @Character = 'Britta Perry / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Danny Pudi';
SET @Character = 'Abed Nadir / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alison Brie';
SET @Character = 'Annie Edison / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ken Jeong';
SET @Character = 'Ben Chang / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yvette Nicole Brown';
SET @Character = 'Shirley Bennett / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jim Rash';
SET @Character = 'Dean Pelton / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Donald Glover';
SET @Character = 'Troy Barnes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chevy Chase';
SET @Character = 'Pierce Hawthorne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Erdman';
SET @Character = 'Leonard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Mr. Robot
DECLARE @MovieTitle VARCHAR(255) = 'Mr. Robot';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Sam Esmail', 'Sam Esmail', 'Randolph Leon');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Rami Malek';
SET @Character = 'Elliot Alderson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christian Slater';
SET @Character = 'Mr. Robot';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Carly Chaikin';
SET @Character = 'Darlene';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Martin Wallstr√∂m';
SET @Character = 'Tyrell Wellick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Portia Doubleday';
SET @Character = 'Angela Moss';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Cristofer';
SET @Character = 'Phillip Price';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Grace Gummer';
SET @Character = 'Dominique DiPierro';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'BD Wong';
SET @Character = 'Whiterose';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephanie Corneliussen';
SET @Character = 'Joanna Wellick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vaishnavi Sharma';
SET @Character = 'Elliot''s Mother';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Hannibal
DECLARE @MovieTitle VARCHAR(255) = 'Hannibal';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Horror', 'Mystery', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Bryan Fuller', 'Bryan Fuller', 'Bryan Fuller');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Hugh Dancy';
SET @Character = 'Will Graham';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mads Mikkelsen';
SET @Character = 'Dr. Hannibal Lecter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Caroline Dhavernas';
SET @Character = 'Dr. Alana Bloom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Laurence Fishburne';
SET @Character = 'Jack Crawford';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scott Thompson';
SET @Character = 'Jimmy Price';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aaron Abrams';
SET @Character = 'Brian Zeller';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gillian Anderson';
SET @Character = 'Dr. Bedelia Du Maurier';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hettienne Park';
SET @Character = 'Beverly Katz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kacey Rohl';
SET @Character = 'Abigail Hobbs';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lara Jean Chorostecki';
SET @Character = 'Freddie Lounds';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: The Umbrella Academy
DECLARE @MovieTitle VARCHAR(255) = 'The Umbrella Academy';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Comedy', 'Drama', 'Fantasy', 'Sci-Fi');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Steve Blackman', 'Steve Blackman', 'Steve Blackman');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Elliot Page';
SET @Character = 'Vanya Hargreeves / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Hopper';
SET @Character = 'Luther Hargreeves';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Casta√±eda';
SET @Character = 'Diego Hargreeves';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emmy Raver-Lampman';
SET @Character = 'Allison Hargreeves';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert Sheehan';
SET @Character = 'Klaus Hargreeves';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aidan Gallagher';
SET @Character = 'Number Five';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Justin H. Min';
SET @Character = 'Ben Hargreeves';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Colm Feore';
SET @Character = 'Reginald Hargreeves';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ritu Arya';
SET @Character = 'Lila Pitts';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jordan Claire Robbins';
SET @Character = 'Grace';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: The Last of Us
DECLARE @MovieTitle VARCHAR(255) = 'The Last of Us';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Drama', 'Horror', 'Sci-Fi', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Craig Mazin', 'Craig Mazin', 'Neil Druckmann');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Pedro Pascal';
SET @Character = 'Joel Miller';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bella Ramsey';
SET @Character = 'Ellie Williams';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kaitlyn Dever';
SET @Character = 'Abby Anderson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brendan Rozario';
SET @Character = 'Guard / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anna Torv';
SET @Character = 'Theresa ''Tess'' Servopoulos';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gabriel Luna';
SET @Character = 'Tommy Miller';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Catherine O''Hara';
SET @Character = 'Gail';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lamar Johnson';
SET @Character = 'Henry Burrell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Melanie Lynskey';
SET @Character = 'Kathleen Coghlan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nico Parker';
SET @Character = 'Sarah Miller';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Arrow
DECLARE @MovieTitle VARCHAR(255) = 'Arrow';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Crime', 'Drama', 'Mystery', 'Sci-Fi');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Greg Berlanti', 'Greg Berlanti', 'Marc Guggenheim');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'David Ramsey';
SET @Character = 'John Diggle / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephen Amell';
SET @Character = 'Oliver Queen / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emily Bett Rickards';
SET @Character = 'Felicity Smoak / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Katie Cassidy';
SET @Character = 'Laurel Lance / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Blackthorne';
SET @Character = 'Quentin Lance';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Willa Holland';
SET @Character = 'Thea Queen / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Colton Haynes';
SET @Character = 'Roy Harper / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rick Gonzalez';
SET @Character = 'Rene Ramirez / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Echo Kellum';
SET @Character = 'Curtis Holt / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Barrowman';
SET @Character = 'Malcolm Merlyn / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: The Flash
DECLARE @MovieTitle VARCHAR(255) = 'The Flash';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Drama', 'Sci-Fi');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Greg Berlanti', 'Greg Berlanti', 'Geoff Johns');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Grant Gustin';
SET @Character = 'Barry Allen / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Candice Patton';
SET @Character = 'Iris West-Allen / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Danielle Panabaker';
SET @Character = 'Caitlin Snow / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jesse L. Martin';
SET @Character = 'Joe West / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Carlos Valdes';
SET @Character = 'Cisco Ramon / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Cavanagh';
SET @Character = 'Dr. Harry Wells / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Danielle Nicolet';
SET @Character = 'Cecile Horton / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kayla Compton';
SET @Character = 'Allegra Garcia / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brandon McKnight';
SET @Character = 'Chester P. Runk';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hartley Sawyer';
SET @Character = 'Ralph Dibny / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Smallville
DECLARE @MovieTitle VARCHAR(255) = 'Smallville';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Drama', 'Sci-Fi');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Alfred Gough', 'Alfred Gough', 'Alfred Gough');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tom Welling';
SET @Character = 'Clark Kent / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Allison Mack';
SET @Character = 'Chloe Sullivan / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kristin Kreuk';
SET @Character = 'Lana Lang / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Rosenbaum';
SET @Character = 'Lex Luthor / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Glover';
SET @Character = 'Lionel Luthor / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Erica Durance';
SET @Character = 'Lois Lane / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Annette O''Toole';
SET @Character = 'Martha Kent / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Schneider';
SET @Character = 'Jonathan Kent / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Justin Hartley';
SET @Character = 'Oliver Queen / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sam Jones III';
SET @Character = 'Pete Ross';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Heroes
DECLARE @MovieTitle VARCHAR(255) = 'Heroes';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Fantasy', 'Mystery', 'Sci-Fi', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Tim Kring', 'Tim Kring', 'Yule Caise');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jack Coleman';
SET @Character = 'Noah Bennet';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hayden Panettiere';
SET @Character = 'Claire Bennet';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Milo Ventimiglia';
SET @Character = 'Peter Petrelli';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Masi Oka';
SET @Character = 'Hiro Nakamura';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sendhil Ramamurthy';
SET @Character = 'Mohinder Suresh';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Greg Grunberg';
SET @Character = 'Matt Parkman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Kyson';
SET @Character = 'Ando Masahashi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adrian Pasdar';
SET @Character = 'Nathan Petrelli';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zachary Quinto';
SET @Character = 'Sylar';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ali Larter';
SET @Character = 'Niki Sanders / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Daredevil: Born Again
DECLARE @MovieTitle VARCHAR(255) = 'Daredevil: Born Again';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Crime', 'Drama', 'Fantasy', 'Sci-Fi', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Matt Corman', 'Matt Corman', 'Chris Ord');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Charlie Cox';
SET @Character = 'Daredevil / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Margarita Levieva';
SET @Character = 'Heather Glenn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vincent D''Onofrio';
SET @Character = 'Wilson Fisk';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Genneya Walton';
SET @Character = 'BB Urich';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wilson Bethel';
SET @Character = 'Benjamin ''Dex'' Poindexter / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jon Bernthal';
SET @Character = 'Frank Castle / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Deborah Ann Woll';
SET @Character = 'Karen Page';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Arty Froushan';
SET @Character = 'Buck Cashman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nikki M. James';
SET @Character = 'Kirsten Mcduffie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ayelet Zurer';
SET @Character = 'Vanessa Fisk';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Jessica Jones
DECLARE @MovieTitle VARCHAR(255) = 'Jessica Jones';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Crime', 'Drama', 'Sci-Fi', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Brian Michael Bendis', 'Michael Gaydos', 'Melissa Rosenberg');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Krysten Ritter';
SET @Character = 'Jessica Jones';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rachael Taylor';
SET @Character = 'Trish Walker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eka Darville';
SET @Character = 'Malcolm Ducasse';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Carrie-Anne Moss';
SET @Character = 'Jeri Hogarth';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Ventimiglia';
SET @Character = 'Detective Costa / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Tennant';
SET @Character = 'Kilgrave';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rebecca De Mornay';
SET @Character = 'Dorothy / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'J.R. Ramirez';
SET @Character = 'Oscar Arocho';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Janet McTeer';
SET @Character = 'Alisa Jones';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Benjamin Walker';
SET @Character = 'Erik Gelden';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Luke Cage
DECLARE @MovieTitle VARCHAR(255) = 'Luke Cage';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Crime', 'Drama', 'Sci-Fi', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Cheo Hodari Coker', 'Cheo Hodari Coker', 'Archie Goodwin');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Mike Colter';
SET @Character = 'Luke Cage';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Simone Missick';
SET @Character = 'Misty Knight';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Theo Rossi';
SET @Character = 'Hernan ''Shades'' Alvarez';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alfre Woodard';
SET @Character = 'Mariah Dillard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Justin Swain';
SET @Character = 'Detective Mark Bailey / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sean Ringgold';
SET @Character = 'Sugar';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Clarence Stewart';
SET @Character = 'Alex / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Karen Pittman';
SET @Character = 'Inspector Priscilla Ridley / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ron Cephas Jones';
SET @Character = 'Bobby Fish';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeremiah Craft';
SET @Character = 'D.W. Griffith / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Iron Fist
DECLARE @MovieTitle VARCHAR(255) = 'Iron Fist';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Crime', 'Fantasy', 'Sci-Fi');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Scott Buck', 'Scott Buck', 'Gil Kane');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Finn Jones';
SET @Character = 'Danny Rand';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jessica Henwick';
SET @Character = 'Colleen Wing';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jessica Stroup';
SET @Character = 'Joy Meachum';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Pelphrey';
SET @Character = 'Ward Meachum';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sacha Dhawan';
SET @Character = 'Davos';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Wenham';
SET @Character = 'Harold Meachum';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alice Eve';
SET @Character = 'Mary Walker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wai Ching Ho';
SET @Character = 'Madame Gao';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Giullian Yao Gioiello';
SET @Character = 'BB';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christine Toy Johnson';
SET @Character = 'Mrs. Yang';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: The Defenders
DECLARE @MovieTitle VARCHAR(255) = 'The Defenders';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Crime', 'Fantasy', 'Sci-Fi');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Brian Michael Bendis', 'Bill Everett', 'Michael Gaydos');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Charlie Cox';
SET @Character = 'Matt Murdock / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Krysten Ritter';
SET @Character = 'Jessica Jones';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mike Colter';
SET @Character = 'Luke Cage';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Finn Jones';
SET @Character = 'Danny Rand';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Elodie Yung';
SET @Character = 'Elektra Natchios';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jessica Henwick';
SET @Character = 'Colleen Wing';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scott Glenn';
SET @Character = 'Stick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sigourney Weaver';
SET @Character = 'Alexandra Reid';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rosario Dawson';
SET @Character = 'Claire Temple';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wai Ching Ho';
SET @Character = 'Madame Gao / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Titans
DECLARE @MovieTitle VARCHAR(255) = 'Titans';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Crime', 'Drama', 'Fantasy', 'Sci-Fi');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Greg Berlanti', 'Greg Berlanti', 'Akiva Goldsman');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Brenton Thwaites';
SET @Character = 'Dick Grayson / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anna Diop';
SET @Character = 'Kory Anders / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ryan Potter';
SET @Character = 'Gar Logan / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Teagan Croft';
SET @Character = 'Rachel Roth / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joshua Orpin';
SET @Character = 'Conner Kent / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Curran Walters';
SET @Character = 'Jason Todd / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Conor Leslie';
SET @Character = 'Donna Troy / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Minka Kelly';
SET @Character = 'Dawn Granger / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jay Lycurgo';
SET @Character = 'Tim Drake / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alan Ritchson';
SET @Character = 'Hank Hall / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Gotham
DECLARE @MovieTitle VARCHAR(255) = 'Gotham';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Crime', 'Drama', 'Mystery', 'Sci-Fi', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Bruno Heller', 'Bruno Heller', 'Bill Finger');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ben McKenzie';
SET @Character = 'James Gordon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Donal Logue';
SET @Character = 'Harvey Bullock';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Mazouz';
SET @Character = 'Bruce Wayne / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robin Lord Taylor';
SET @Character = 'Oswald Cobblepot / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Camren Bicondova';
SET @Character = 'Selina Kyle';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cory Michael Smith';
SET @Character = 'Edward Nygma / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sean Pertwee';
SET @Character = 'Alfred Pennyworth';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Erin Richards';
SET @Character = 'Barbara Kean';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Morena Baccarin';
SET @Character = 'Leslie Thompkins';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Chalk';
SET @Character = 'Lucius Fox';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Supernatural
DECLARE @MovieTitle VARCHAR(255) = 'Supernatural';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Fantasy', 'Horror', 'Mystery', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Eric Kripke', 'Eric Kripke', 'Eric Kripke');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jared Padalecki';
SET @Character = 'Sam Winchester / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jensen Ackles';
SET @Character = 'Dean Winchester / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Misha Collins';
SET @Character = 'Castiel / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Sheppard';
SET @Character = 'Crowley / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jim Beaver';
SET @Character = 'Bobby Singer / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alexander Calvert';
SET @Character = 'Jack / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Pellegrino';
SET @Character = 'Lucifer / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samantha Smith';
SET @Character = 'Mary Winchester / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ruth Connell';
SET @Character = 'Rowena MacLeod / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rob Benedict';
SET @Character = 'Chuck Shurley / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: Lucifer
DECLARE @MovieTitle VARCHAR(255) = 'Lucifer';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Fantasy');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Mike Dringenberg', 'Mike Dringenberg', 'Mike Dringenberg');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tom Ellis';
SET @Character = 'Lucifer Morningstar / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lauren German';
SET @Character = 'Chloe Decker / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kevin Alejandro';
SET @Character = 'Dan Espinoza / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'D.B. Woodside';
SET @Character = 'Amenadiel / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lesley-Ann Brandt';
SET @Character = 'Mazikeen / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rachael Harris';
SET @Character = 'Linda Martin / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aimee Garcia';
SET @Character = 'Ella Lopez / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scarlett Estevez';
SET @Character = 'Trixie Espinoza';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tricia Helfer';
SET @Character = 'Charlotte / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Welling';
SET @Character = 'Marcus Pierce';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: American Horror Story
DECLARE @MovieTitle VARCHAR(255) = 'American Horror Story';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Horror', 'Sci-Fi', 'Thriller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Brad Falchuk', 'Brad Falchuk', 'Ryan Murphy');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Evan Peters';
SET @Character = 'James March / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sarah Paulson';
SET @Character = 'Lana Winters / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Denis O''Hare';
SET @Character = 'Spalding / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lily Rabe';
SET @Character = 'Misty Day / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kathy Bates';
SET @Character = 'Madame Delphine LaLaurie / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Frances Conroy';
SET @Character = 'Myrtle Snow / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emma Roberts';
SET @Character = 'Madison Montgomery / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jessica Lange';
SET @Character = 'Constance Langdon / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Billie Lourd';
SET @Character = 'Winter Anderson / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Leslie Grossman';
SET @Character = 'Barbara Read / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: The Penguin
DECLARE @MovieTitle VARCHAR(255) = 'The Penguin';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Bill Finger', 'Bob Kane', 'Lauren LeFranc');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Colin Farrell';
SET @Character = 'Oswald ''Oz'' Cobb';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cristin Milioti';
SET @Character = 'Sofia Falcone';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rhenzy Feliz';
SET @Character = 'Victor Aguilar';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Deirdre O''Connell';
SET @Character = 'Francis Cobb';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Carmen Ejogo';
SET @Character = 'Eve Karlo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Theo Rossi';
SET @Character = 'Dr. Julian Rush';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Clancy Brown';
SET @Character = 'Salvatore Maroni';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daniel J. Watts';
SET @Character = 'Bruno Tess';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David H. Holmes';
SET @Character = 'Nick Fuchs';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Kelly';
SET @Character = 'Johnny Vitti / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
-- No Data Available 

GO
-- ============================================

-- Movie: The Sopranos
DECLARE @MovieTitle VARCHAR(255) = 'The Sopranos';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('David Chase', 'David Chase', 'David Chase');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'James Gandolfini';
SET @Character = 'Tony Soprano';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Edie Falco';
SET @Character = 'Carmela Soprano';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Imperioli';
SET @Character = 'Christopher Moltisanti';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steven Van Zandt';
SET @Character = 'Silvio Dante';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert Iler';
SET @Character = 'A.J. Soprano';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tony Sirico';
SET @Character = 'Paulie ''Walnuts'' Gualtieri';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jamie-Lynn Sigler';
SET @Character = 'Meadow Soprano';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lorraine Bracco';
SET @Character = 'Dr. Jennifer Melfi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dominic Chianese';
SET @Character = 'Junior Soprano';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aida Turturro';
SET @Character = 'Janice Soprano / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

print('All Initial Data Loaded into database :)');





--------------------------------------------------------------------------------------------------------------------------
GO 


-- ============================================
-- Movie: A Minecraft Movie
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'A Minecraft Movie';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Comedy', 'Family', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Jared Hess');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Chris Bowman', 'Hubbel Palmer', 'Neil Widener', 'Gavin James', 'Chris Galletta', 'Allison Schroeder');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jason Momoa';
SET @Character = 'Garrett';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jack Black';
SET @Character = 'Steve';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sebastian Hansen';
SET @Character = 'Henry';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emma Myers';
SET @Character = 'Natalie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Danielle Brooks';
SET @Character = 'Dawn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jennifer Coolidge';
SET @Character = 'Vice Principal Marlene';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rachel House';
SET @Character = 'Malgosha';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Allan Henry';
SET @Character = 'Malgosha';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bram Scott-Breheny';
SET @Character = 'Young Steve';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Moana Williams';
SET @Character = 'Young Garrett';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('friendship', 'surrealism', 'exploration', 'portal', 'miner', 'friends', 'survival', 'zombie', 'blunt', 'based on video game', 'aftercreditsstinger', 'duringcreditsstinger', 'journey', 'frantic', 'imagination', 'teamwork', 'fantasy', 'building');

GO


-- ============================================
-- Movie: Novocaine
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Novocaine';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Comedy', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Dan Berk', 'Robert Olsen');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Lars Jacobson');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jack Quaid';
SET @Character = 'Nate';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amber Midthunder';
SET @Character = 'Sherry';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ray Nicholson';
SET @Character = 'Simon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jacob Batalon';
SET @Character = 'Roscoe';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Betty Gabriel';
SET @Character = 'Mincy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matt Walsh';
SET @Character = 'Coltraine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Conrad Kemp';
SET @Character = 'Andre';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Evan Hengst';
SET @Character = 'Ben';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Craig Jackson';
SET @Character = 'Nigel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lou Beatty Jr.';
SET @Character = 'Earl';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('pain', 'dark comedy', 'bank robbery', 'held hostage', 'aggressive', 'frantic', 'comedy thriller', 'comedy', 'action', 'ambivalent', 'amused', 'joyful', 'super hero', 'one-person film', 'car chase');

GO


-- ============================================
-- Movie: Mickey 17
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Mickey 17';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure', 'Comedy', 'Fantasy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Bong Joon Ho');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Bong Joon Ho', 'Edward Ashton');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Robert Pattinson';
SET @Character = 'Mickey Barnes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steven Yeun';
SET @Character = 'Timo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Monroe';
SET @Character = 'Matthew';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Patsy Ferran';
SET @Character = 'Dorothy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cameron Britton';
SET @Character = 'Arkady';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christian Patterson';
SET @Character = 'Chainsaw Guy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lloyd Hutchinson';
SET @Character = 'Underboss';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samuel Blenkin';
SET @Character = 'Delinquent Borrower';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ian Hanmore';
SET @Character = 'Darius Blank';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sabet Choudhury';
SET @Character = 'News Reporter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('based on novel or book', 'dark comedy', 'space travel', 'space colony', 'alien planet', 'creature', 'space adventure', 'human cloning', 'spaceship', 'space sci-fi', 'black comedy');

GO


-- ============================================
-- Movie: I Want to Talk
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'I Want to Talk';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Shoojit Sircar');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Ritesh Shah');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Abhishek Bachchan';
SET @Character = 'Arjun';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ahilya Bamroo';
SET @Character = 'Reya';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nirvan Patnaik';
SET @Character = 'Reya''s Boyfriend';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Johny Lever';
SET @Character = 'Johny';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom McLaren';
SET @Character = 'Dr. Tanner';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Janet Carter';
SET @Character = 'Dr. Randal';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kristin Goddard';
SET @Character = 'Nancy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joe Russell';
SET @Character = 'Marc';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Caprice Ott';
SET @Character = 'Chloe';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mike Sears';
SET @Character = 'Bill';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('bollywood');

GO


-- ============================================
-- Movie: The Mehta Boys
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Mehta Boys';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Boman Irani');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Alexander Dinelaris', 'Boman Irani');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Boman Irani';
SET @Character = 'Mr. Shiv Mehta';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Avinash Tiwary';
SET @Character = 'Amay Mehta';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shreya Chaudhry';
SET @Character = 'Zara';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Puja Sarup';
SET @Character = 'Anu Mehta Patel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Flora Jacob';
SET @Character = 'Receptionist Flora';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harssh Singh';
SET @Character = 'Sam Makhija';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Siddhartha Basu';
SET @Character = 'Saumik Sen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shreyas Jadhav';
SET @Character = 'Omkar';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jignesh Bhatt';
SET @Character = 'Ramnik Bhai Taxi Driver 1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Morli Patel';
SET @Character = 'Shivani Mehta';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('bollywood');

GO


-- ============================================
-- Movie: Heretic
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Heretic';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Horror', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Scott Beck', 'Bryan Woods');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Scott Beck', 'Bryan Woods');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Hugh Grant';
SET @Character = 'Mr. Reed';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sophie Thatcher';
SET @Character = 'Sister Barnes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chloe East';
SET @Character = 'Sister Paxton';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Topher Grace';
SET @Character = 'Elder Kennedy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Elle Young';
SET @Character = 'Prophet';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julie Lynn Mortensen';
SET @Character = 'Pedestrian';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Haylie Hansen';
SET @Character = 'Teenager';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Elle McKinnon';
SET @Character = 'Teenager';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hanna Huffman';
SET @Character = 'Teenager';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anesha Bailey';
SET @Character = 'Neighbor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('faith', 'affectation', 'religion', 'cat and mouse', 'mormon missionary', 'eccentric man', 'women of faith', 'appreciative', 'excited', 'frightened');

GO


-- ============================================
-- Movie: Speak No Evil
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Speak No Evil';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Horror', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('James Watkins');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('James Watkins', 'Christian Tafdrup', 'Mads Tafdrup');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'James McAvoy';
SET @Character = 'Paddy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mackenzie Davis';
SET @Character = 'Louise Dalton';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scoot McNairy';
SET @Character = 'Ben Dalton';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aisling Franciosi';
SET @Character = 'Ciara';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alix West Lefler';
SET @Character = 'Agnes Dalton';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dan Hough';
SET @Character = 'Ant';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kris Hitchen';
SET @Character = 'Mike';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Motaz Malhees';
SET @Character = 'Muhjid';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jakob H√∏jlev J√∏rgensen';
SET @Character = 'Torsten';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('husband wife relationship', 'manipulation', 'remake', 'hopeless', 'weekend getaway', 'europe vacation', 'children in danger', 'psychological horror', 'disturbing', 'suspenseful', 'depressing', 'gloomy', 'ominous');

GO


-- ============================================
-- Movie: Joker: Folie √† Deux
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Joker: Folie √† Deux';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Musical', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Todd Phillips');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Scott Silver', 'Todd Phillips', 'Bob Kane', 'Bill Finger', 'Jerry Robinson', 'Paul Dini', 'Bruce Timm');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Joaquin Phoenix';
SET @Character = 'Arthur Fleck';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lady Gaga';
SET @Character = 'Lee Quinzel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brendan Gleeson';
SET @Character = 'Jackie Sullivan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Catherine Keener';
SET @Character = 'Maryanne Stewart';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zazie Beetz';
SET @Character = 'Sophie Dumond';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steve Coogan';
SET @Character = 'Paddy Meyers';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harry Lawtey';
SET @Character = 'Harvey Dent';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Leigh Gill';
SET @Character = 'Gary Puddles';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ken Leung';
SET @Character = 'Dr. Victor Liu';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jacob Lofland';
SET @Character = 'Ricky Meline';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('asylum', 'villain', 'musical', 'insane asylum', 'based on comic', 'sequel', 'courtroom', 'mental illness', 'madness', 'super villain', 'supervillain', '1980s', 'prisoner abuse', 'dark romance', 'jukebox musical', 'romantic');

GO


-- ============================================
-- Movie: Beetlejuice Beetlejuice
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Beetlejuice Beetlejuice';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Fantasy', 'Horror');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Tim Burton');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Michael McDowell', 'Larry Wilson', 'Alfred Gough', 'Miles Millar', 'Seth Grahame-Smith');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Michael Keaton';
SET @Character = 'Beetlejuice';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Winona Ryder';
SET @Character = 'Lydia Deetz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Catherine O''Hara';
SET @Character = 'Delia Deetz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jenna Ortega';
SET @Character = 'Astrid Deetz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Justin Theroux';
SET @Character = 'Rory';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Willem Dafoe';
SET @Character = 'Wolf Jackson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Monica Bellucci';
SET @Character = 'Delores';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Arthur Conti';
SET @Character = 'Jeremy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nick Kellington';
SET @Character = 'Bob-Shrinker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Santiago Cabrera';
SET @Character = 'Richard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('afterlife', 'haunted house', 'sequel', 'paranormal', 'teenage girl', 'gothic', 'death', 'new england', 'ghost', 'horror comedy', 'unexpected death', 'mother daughter relationship', 'fantasy', 'ghoulish');

GO


-- ============================================
-- Movie: Beetlejuice
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Beetlejuice';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Tim Burton');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Michael McDowell', 'Larry Wilson', 'Warren Skaaren');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Alec Baldwin';
SET @Character = 'Adam';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Geena Davis';
SET @Character = 'Barbara';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Annie McEnroe';
SET @Character = 'Jane Butterfield';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maurice Page';
SET @Character = 'Ernie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hugo Stanger';
SET @Character = 'Old Bill';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Keaton';
SET @Character = 'Betelgeuse';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rachel Mittelman';
SET @Character = 'Little Jane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Catherine O''Hara';
SET @Character = 'Delia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'J. Jay Saunders';
SET @Character = 'Moving Man #1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Ettlinger';
SET @Character = 'Moving Man #2';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('skeleton', 'afterlife', 'calypso', 'supernatural', 'arts', 'halloween', 'haunted house', 'minister', 'possession', 'giant snake', 'surrealism', 'child bride', 'teenage girl', 'gothic', 'death', 'madness', 'dead', 'ghost', 'property', 'mischievous', 'earnest');

GO


-- ============================================
-- Movie: Deadpool & Wolverine
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Deadpool & Wolverine';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Comedy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Shawn Levy');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Ryan Reynolds', 'Rhett Reese', 'Paul Wernick', 'Zeb Wells', 'Shawn Levy', 'Rob Liefeld', 'Fabian Nicieza', 'Len Wein', 'John Romita Sr.', 'Herb Trimpe', 'Roy Thomas', 'Joe Simon', 'Jack Kirby', 'Frank Miller');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ryan Reynolds';
SET @Character = 'Wade Wilson / Deadpool / Nicepool';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hugh Jackman';
SET @Character = 'Logan / Wolverine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emma Corrin';
SET @Character = 'Cassandra Nova';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matthew Macfadyen';
SET @Character = 'Mr. Paradox';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dafne Keen';
SET @Character = 'Laura / X-23';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jon Favreau';
SET @Character = 'Happy Hogan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Morena Baccarin';
SET @Character = 'Vanessa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rob Delaney';
SET @Character = 'Peter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Leslie Uggams';
SET @Character = 'Blind Al';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jennifer Garner';
SET @Character = 'Elektra';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('hero', 'superhero', 'anti hero', 'mutant', 'breaking the fourth wall', 'aftercreditsstinger', 'duringcreditsstinger', 'marvel cinematic universe (mcu)', 'mutants', 'superhero teamup');

GO


-- ============================================
-- Movie: Longlegs
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Longlegs';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Horror', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Osgood Perkins');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Osgood Perkins');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Maika Monroe';
SET @Character = 'Agent Lee Harker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nicolas Cage';
SET @Character = 'Longlegs';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Blair Underwood';
SET @Character = 'Agent Carter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alicia Witt';
SET @Character = 'Ruth Harker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michelle Choi-Lee';
SET @Character = 'Agent Browning';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dakota Daulby';
SET @Character = 'Agent Fisk';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lauren Acala';
SET @Character = 'Young Lee Harker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kiernan Shipka';
SET @Character = 'Carrie Anne Camera';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maila Hosie';
SET @Character = 'Young Carrie Anne Camera';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jason William Day';
SET @Character = 'Father Camera';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('homicide', 'fbi', 'religion and supernatural', 'haunting', 'satanism', 'barn', 'satanist', 'code', 'oregon', 'usa', 'flashback', 'murder', 'serial killer', 'religion', 'female protagonist', 'corpse', 'series of murders', 'violent death', 'killing spree', 'catholic', 'death', 'death in family', 'occult', 'satanic ritual', 'macabre', 'satanic cult', 'clairvoyant', 'crime spree', 'rookie', 'crime investigation', 'manic', 'sadistic psychopath', 'unsettling', 'mysterious', 'disturbed', 'scary doll', 'accomplice', '1990s', 'dread', 'creepy doll', 'psychological terror', 'singing in a car', 'haunted doll', 'homicide investigation', 'supernatural horror', 'female investigator', 'police procedural', 'children in danger', 'criminal plot', 'psychological horror', 'horrific crime', 'suspenseful', 'intense', 'horrified');

GO


-- ============================================
-- Movie: A Quiet Place
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'A Quiet Place';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Horror', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('John Krasinski');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Bryan Woods', 'Scott Beck', 'John Krasinski');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Emily Blunt';
SET @Character = 'Evelyn Abbott';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Krasinski';
SET @Character = 'Lee Abbott';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Millicent Simmonds';
SET @Character = 'Regan Abbott';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Noah Jupe';
SET @Character = 'Marcus Abbott';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cade Woodward';
SET @Character = 'Beau Abbott';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Leon Russom';
SET @Character = 'Man in the Woods';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rhoda Pell';
SET @Character = 'Old Man''s Dead Wife';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('pregnancy', 'fireworks', 'deaf', 'post-apocalyptic future', 'alien life-form', 'child in peril', 'creature', 'alien invasion', 'parenting', 'survival horror', 'human vs alien', 'sign languages', 'angry');

GO


-- ============================================
-- Movie: A Quiet Place Part II
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'A Quiet Place Part II';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Horror', 'Sci-Fi', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('John Krasinski');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('John Krasinski', 'Bryan Woods', 'Scott Beck');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Emily Blunt';
SET @Character = 'Evelyn Abbott';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Krasinski';
SET @Character = 'Lee Abbott';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Millicent Simmonds';
SET @Character = 'Regan Abbott';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Noah Jupe';
SET @Character = 'Marcus Abbott';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cillian Murphy';
SET @Character = 'Emmett';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Djimon Hounsou';
SET @Character = 'Man on Island';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Okieriete Onaodowan';
SET @Character = 'Police Officer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scoot McNairy';
SET @Character = 'Marina Man';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zachary Golinger';
SET @Character = 'Emmett''s Son';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Blake DeLong';
SET @Character = 'Umpire';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new york city', 'island', 'post-apocalyptic future', 'radio transmission', 'alien life-form', 'death of father', 'child in peril', 'sequel', 'alien', 'flashback', 'psychological thriller', 'creature', 'alien invasion', 'parenting', 'family', 'survival horror', 'alien monster', 'human vs alien', 'sign languages', 'alien attack', 'hostile', 'hearing impaired', 'newborn baby', 'anxious', 'dreary', 'suspenseful', 'tense', 'frightened');

GO


-- ============================================
-- Movie: A Quiet Place: Day One
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'A Quiet Place: Day One';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Horror', 'Sci-Fi', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Michael Sarnoski');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Michael Sarnoski', 'John Krasinski', 'Bryan Woods', 'Scott Beck');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Lupita Nyong''o';
SET @Character = 'Samira';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joseph Quinn';
SET @Character = 'Eric';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alex Wolff';
SET @Character = 'Reuben';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Djimon Hounsou';
SET @Character = 'Henri';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eliane Umuhire';
SET @Character = 'Zena';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Takunda Khumalo';
SET @Character = 'Osahar';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alfie Todd';
SET @Character = 'Max';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Avy Berry';
SET @Character = 'Young Sister';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ronnie Le Drew';
SET @Character = 'Marvin Monroe';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Benjamin Wong';
SET @Character = 'Cashier';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('monster', 'escape', 'cat', 'alien', 'prequel', 'survival', 'survivalist', 'fear', 'spin off', 'noise', 'silence', 'quiet', 'hopeful');

GO


-- ============================================
-- Movie: Flow
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Flow';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Adventure', 'Family', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Gints Zilbalodis');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Gints Zilbalodis', 'Matiss Kaza', 'Ron Dyens');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('ocean', 'cat', 'boat', 'dystopia', 'dog', 'ruins', 'flood', 'lemur', 'bird', '3d animation', 'no dialogue', 'teamwork', 'fantasy', 'capybara', 'adventure', 'animated film', 'labrador', 'kucing', 'laut', 'animasi', 'burung', 'film bisu', 'anjing', 'kapibara', 'bencana alam', 'bencana');

GO


-- ============================================
-- Movie: Anora
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Anora';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Sean Baker');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Sean Baker');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Mikey Madison';
SET @Character = 'Ani';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Weissman';
SET @Character = 'Nick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yura Borisov';
SET @Character = 'Igor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lindsey Normington';
SET @Character = 'Diamond';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emily Weider';
SET @Character = 'Nikki';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Luna Sof√≠a Miranda';
SET @Character = 'Lulu';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vincent Radwinsky';
SET @Character = 'Jimmy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brittney Rodriguez';
SET @Character = 'Dawn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sophia Carnabuci';
SET @Character = 'Jenny';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Eydelshteyn';
SET @Character = 'Ivan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new year''s eve', 'new york city', 'marriage', 'boardwalk', 'baptism', 'strip club', 'coney island', 'female protagonist', 'mansion', 'class differences', 'las vegas', 'lap dance', 'home invasion', 'drunk', 'brooklyn', 'new york city', 'screwball comedy', 'new york subway', 'hedonism', 'immaturity', 'city hall', 'exotic dancer', 'sex worker', 'naive children', 'female stripping', 'meddling parents', 'annulment', 'strip show', 'russian oligarch', 'sex', 'party', 'female rage', 'vegas wedding', 'romantic dramedy', 'cinderella story', 'depressing', 'apathetic', 'conceited', 'modest', 'female nudity', 'brighton beach');

GO


-- ============================================
-- Movie: The Apprentice
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Apprentice';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Biography', 'Drama', 'History');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Ali Abbasi');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Gabriel Sherman');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Sebastian Stan';
SET @Character = 'Donald Trump';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeremy Strong';
SET @Character = 'Roy Cohn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Martin Donovan';
SET @Character = 'Fred Trump';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maria Bakalova';
SET @Character = 'Ivana Trump';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Catherine McNally';
SET @Character = 'Mary Anne Trump';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Charlie Carrick';
SET @Character = 'Freddy Trump';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ben Sullivan';
SET @Character = 'Russell Eldridge';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Rendall';
SET @Character = 'Roger Stone';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joe Pingue';
SET @Character = 'Tony Salerno';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ron Lea';
SET @Character = 'Victor Palmieri';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new york city', 'rape', 'corruption', 'aids', 'funeral', 'politics', 'blackmail', '1970s', 'biography', 'based on true story', 'atlantic city', 'lawyer', 'debt', 'bribery', 'misogyny', 'death of brother', 'character study', 'marital rape', 'wiretapping', 'mentor prot√©g√© relationship', 'real estate', 'discrimination', 'degenerate', '1980s', 'closeted homosexual', 'father son relationship', 'brother brother relationship', 'absurd', 'malfeasance');

GO


-- ============================================
-- Movie: Once Upon a Time... in Hollywood
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Once Upon a Time... in Hollywood';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Quentin Tarantino');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Quentin Tarantino');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Leonardo DiCaprio';
SET @Character = 'Rick Dalton';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brad Pitt';
SET @Character = 'Cliff Booth';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Margot Robbie';
SET @Character = 'Sharon Tate';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emile Hirsch';
SET @Character = 'Jay Sebring';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Margaret Qualley';
SET @Character = 'Pussycat';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Timothy Olyphant';
SET @Character = 'James Stacy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julia Butters';
SET @Character = 'Trudi Fraser';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Austin Butler';
SET @Character = 'Tex Watson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dakota Fanning';
SET @Character = 'Squeaky Fromme';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bruce Dern';
SET @Character = 'George Spahn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('movie business', 'male friendship', 'cult', 'based on true story', 'celebrity', 'fame', 'hollywood', 'los angeles', 'california', 'historical fiction', 'buddy', 'filmmaking', 'struggling actor', 'satanic cult', 'revisionist history', 'duringcreditsstinger', 'western filmmaking', 'manson family murders', 'disturbed', '1960s', 'stunt double', 'old hollywood', 'sharon tate', 'charles manson', 'disgusted');

GO


-- ============================================
-- Movie: Dumb Money
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Dumb Money';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Biography', 'Comedy', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Craig Gillespie');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Lauren Schuker Blum', 'Rebecca Angelo', 'Ben Mezrich');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Paul Dano';
SET @Character = 'Keith Gill';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Pete Davidson';
SET @Character = 'Kevin Gill';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vincent D''Onofrio';
SET @Character = 'Steve Cohen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'America Ferrera';
SET @Character = 'Jenny';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Myha''la';
SET @Character = 'Riri';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nick Offerman';
SET @Character = 'Ken Griffin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anthony Ramos';
SET @Character = 'Marcos Garcia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Seth Rogen';
SET @Character = 'Gabe Plotkin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Talia Ryder';
SET @Character = 'Harmony Williams';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sebastian Stan';
SET @Character = 'Vlad Tenev';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('massachusetts', 'manipulation of the media', 'based on true story', 'securities', 'stocks and bonds', 'stock price', 'social media', 'stock market', 'meditative', 'dramedy', 'philosophical', 'investing', 'investment', 'stockholder', 'stock swindle', 'insider trading', 'vlogger', 'brother brother relationship', 'internet scam', 'social media influencer', 'finance trading', 'inspirational', 'manipulative relationship', 'critical', 'internet personality', 'intense', 'gamestop', 'reddit', 'audacious', 'bold', 'compassionate', 'defiant', 'dignified', 'earnest', 'instructive', 'powerful', 'urgent', '2020s');

GO


-- ============================================
-- Movie: The Big Short
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Big Short';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Biography', 'Comedy', 'Drama', 'History');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Adam McKay');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Charles Randolph', 'Adam McKay', 'Michael Lewis');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ryan Gosling';
SET @Character = 'Jared Vennett';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rudy Eisenzopf';
SET @Character = 'Lewis Ranieri';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Casey Groves';
SET @Character = 'Fund Manager';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Charlie Talbert';
SET @Character = 'Lewis Bond Trader';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harold Gervais';
SET @Character = 'Lewis Bond Trader';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maria Frangos';
SET @Character = 'Exotic Dancer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christian Bale';
SET @Character = 'Michael Burry';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hunter Burke';
SET @Character = 'Analyst';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bernard Hocke';
SET @Character = 'Coach';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shauna Rappold';
SET @Character = 'Michael Burry''s Mom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('based on novel or book', 'bank', 'fraud', 'wall street', 'biography', 'based on true story', 'finances', 'animated scene', 'historical fiction', 'loan', 'cynical', 'financial crisis', 'real estate', 'mortgage', 'factual', 'complicated');

GO


-- ============================================
-- Movie: 1408
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = '1408';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Fantasy', 'Horror', 'Mystery');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Mikael H√•fstr√∂m');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Matt Greenberg', 'Scott Alexander', 'Larry Karaszewski', 'Stephen King');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'John Cusack';
SET @Character = 'Mike Enslin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tony Shalhoub';
SET @Character = 'Sam Farrell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Len Cariou';
SET @Character = 'Mike''s Father';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Isiah Whitlock Jr.';
SET @Character = 'Hotel Engineer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jasmine Jessica Anthony';
SET @Character = 'Katie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Birchard';
SET @Character = 'Mr. Innkeeper';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Margot Leicester';
SET @Character = 'Mrs. Innkeeper';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Walter Lewis';
SET @Character = 'Book Store Cashier';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eric Meyers';
SET @Character = 'Man #1 at Book Signing';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Nicholson';
SET @Character = 'Man #2 at Book Signing';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('hotel', 'hotel room', 'new york city', 'research', 'fire', 'husband wife relationship', 'window', 'loss of loved one', 'door', 'painting', 'telephone', 'haunted house', 'writer', 'ghost hunter');

GO


-- ============================================
-- Movie: Conclave
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Conclave';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Edward Berger');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Peter Straughan', 'Robert Harris');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ralph Fiennes';
SET @Character = 'Lawrence';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jacek Koman';
SET @Character = 'Wozniak';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lucian Msamati';
SET @Character = 'Adeyemi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stanley Tucci';
SET @Character = 'Bellini';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Lithgow';
SET @Character = 'Tremblay';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bruno Novelli';
SET @Character = 'Dead Pope';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Thomas Loibl';
SET @Character = 'Mandorff';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Br√≠an F. O''Byrne';
SET @Character = 'O''Malley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Isabella Rossellini';
SET @Character = 'Sister Agnes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rony Kramer';
SET @Character = 'Mendoza';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('vatican (holy see)', 'religion', 'election', 'roman catholic church', 'catholicism', 'questioning', 'cardinal', 'papal conclave', 'intimate', 'conceited');

GO


-- ============================================
-- Movie: Dev.D
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Dev.D';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Anurag Kashyap');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Sarat Chandra Chattopadhyay', 'Abhay Deol', 'Vikramaditya Motwane', 'Anurag Kashyap');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Abhay Deol';
SET @Character = 'Dev / Devindra Dhillon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mahie Gill';
SET @Character = 'Paro / Parminder';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kalki Koechlin';
SET @Character = 'Leni / Chanda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dibyendu Bhattacharya';
SET @Character = 'Chunni';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Manoj Bakshi';
SET @Character = 'Inspector';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gurkirtan';
SET @Character = 'Satpal Dhillon / Sattu';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Satwant Kaur';
SET @Character = 'Kaushalya Dhillon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Parakh Madan';
SET @Character = 'Rasika';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kuldeep Sharma';
SET @Character = 'Paro''s father';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jimi the Quiff';
SET @Character = 'The Twilight Players';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('drug addiction', 'tragic love', 'bollywood');

GO


-- ============================================
-- Movie: Get Away
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Get Away';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Horror');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Steffen Haars');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Nick Frost');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Nick Frost';
SET @Character = 'Richard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aisling Bea';
SET @Character = 'Susan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ville Virtanen';
SET @Character = 'Detective Forsberg';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sebastian Croft';
SET @Character = 'Sam';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maisie Ayres';
SET @Character = 'Jessie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jouko Ahola';
SET @Character = 'Sven';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eero Milonoff';
SET @Character = 'Matts';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anitta Suikkari';
SET @Character = 'Klara';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ilkka Koivula';
SET @Character = 'Man / Harbour Cafe Owner';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Verneri Lilja';
SET @Character = 'Ingemar';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('island', 'tourist', 'vacation', 'stranded', 'serial killer', 'finland');

GO


-- ============================================
-- Movie: We Live in Time
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'We Live in Time';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('John Crowley');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Nick Payne');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Andrew Garfield';
SET @Character = 'Tobias';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Florence Pugh';
SET @Character = 'Almut';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Grace Delaney';
SET @Character = 'Ella';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lee Braithwaite';
SET @Character = 'Jade';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aoife Hinds';
SET @Character = 'Skye';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adam James';
SET @Character = 'Simon Maxson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Douglas Hodge';
SET @Character = 'Reginald';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amy Morgan';
SET @Character = 'Leah';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Niamh Cusack';
SET @Character = 'Sylvia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lucy Briers';
SET @Character = 'Dr. Kerri Weaver';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('marriage', 'father', 'romance', 'love', 'relationship', 'family', 'kids', 'sick mother', 'love story', 'moving', 'modern', 'sad', 'heartfelt', 'meaningful');

GO


-- ============================================
-- Movie: Juror #2
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Juror #2';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Clint Eastwood');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jonathan A. Abrams');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Nicholas Hoult';
SET @Character = 'Justin Kemp';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zoey Deutch';
SET @Character = 'Allison Crewson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Megan Mieduch';
SET @Character = 'Allison''s Friend';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Toni Collette';
SET @Character = 'Faith Killebrew';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Melanie Harrison';
SET @Character = 'Campaign Manager';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adrienne C. Moore';
SET @Character = 'Yolanda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Drew Scheid';
SET @Character = 'Brody';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Leslie Bibb';
SET @Character = 'Denice Aldworth';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hedy Nasser';
SET @Character = 'Courtney';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Phil Biedron';
SET @Character = 'Vince';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('jury duty', 'moral dilemma', 'murder trial', 'philosophical', 'courtroom drama');

GO


-- ============================================
-- Movie: A Real Pain
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'A Real Pain';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Jesse Eisenberg');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jesse Eisenberg');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Kieran Culkin';
SET @Character = 'Benji Kaplan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jesse Eisenberg';
SET @Character = 'David Kaplan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Olha Bosova';
SET @Character = 'Flight Attendant';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Banner Eisenberg';
SET @Character = 'Abe';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jakub Gasowski';
SET @Character = 'Receptionist';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Will Sharpe';
SET @Character = 'James';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daniel Oreskes';
SET @Character = 'Mark';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Liza Sadovy';
SET @Character = 'Diane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kurt Egyiawan';
SET @Character = 'Eloge';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jennifer Grey';
SET @Character = 'Marcia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('pain', 'suicide attempt', 'holocaust (shoah)', 'jfk international airport', 'vacation', 'grief', 'jewish american', 'poland', 'cousin cousin relationship', 'reflection', 'dramedy', 'coping mechanisms', 'heritage', 'jewish', 'tour', 'death of grandmother', 'depressing', 'gentle', 'pretentious');

GO


-- ============================================
-- Movie: Y2K
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Y2K';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Horror', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Kyle Mooney');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Kyle Mooney', 'Evan Winter');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jaeden Martell';
SET @Character = 'Eli';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rachel Zegler';
SET @Character = 'Laura';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julian Dennison';
SET @Character = 'Danny';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daniel Zolghadri';
SET @Character = 'CJ';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lachlan Watson';
SET @Character = 'Ash';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Fred Durst';
SET @Character = 'Fred Durst';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kyle Mooney';
SET @Character = 'Garret';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eduardo Franco';
SET @Character = 'Farkas';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mason Gooding';
SET @Character = 'Jonas';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'The Kid Laroi';
SET @Character = 'Soccer Chris';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new year''s eve', 'y2k', '1990s', 'satirical', 'playful', 'party', 'absurd', 'computers', 'new year''s party', 'hilarious', 'mocking', 'wry');

GO


-- ============================================
-- Movie: Zombieland: Double Tap
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Zombieland: Double Tap';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Comedy', 'Horror');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Ruben Fleischer');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Rhett Reese', 'Paul Wernick', 'Dave Callaham');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Woody Harrelson';
SET @Character = 'Tallahassee';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jesse Eisenberg';
SET @Character = 'Columbus';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emma Stone';
SET @Character = 'Wichita';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Abigail Breslin';
SET @Character = 'Little Rock';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zoey Deutch';
SET @Character = 'Madison';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Avan Jogia';
SET @Character = 'Berkeley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rosario Dawson';
SET @Character = 'Nevada';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Luke Wilson';
SET @Character = 'Albuquerque';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Thomas Middleditch';
SET @Character = 'Flagstaff';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Victoria Hall';
SET @Character = 'Babylonian Gatekeeper';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('marriage proposal', 'the white house', 'gore', 'road trip', 'sequel', 'survival', 'spoof', 'zombie', 'recreational vehicle', 'aftercreditsstinger', 'frantic', 'graceland', 'minivan', 'christmas present', 'absurd', 'hilarious', 'whimsical', 'ambiguous', 'amused', 'frightened');

GO


-- ============================================
-- Movie: Venom: The Last Dance
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Venom: The Last Dance';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Kelly Marcel');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Kelly Marcel', 'Tom Hardy', 'Todd McFarlane', 'David Michelinie');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tom Hardy';
SET @Character = 'Eddie Brock / Venom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chiwetel Ejiofor';
SET @Character = 'Strickland';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Juno Temple';
SET @Character = 'Dr. Teddy Paine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rhys Ifans';
SET @Character = 'Martin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephen Graham';
SET @Character = 'Detective Mulligan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peggy Lu';
SET @Character = 'Mrs. Chen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Clark Backo';
SET @Character = 'Sadie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alanna Ubach';
SET @Character = 'Nova';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cristo Fern√°ndez';
SET @Character = 'Barman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jared Abrahamson';
SET @Character = 'Captain Forrest';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('hero', 'superhero', 'anti hero', 'villain', 'alien life-form', 'based on comic', 'sequel', 'aftercreditsstinger', 'woman director', 'angry', 'amused', 'indifferent');

GO


-- ============================================
-- Movie: Spirited Away
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Spirited Away';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Adventure', 'Family', 'Fantasy', 'Mystery');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Hayao Miyazaki');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Hayao Miyazaki');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Rumi Hiiragi';
SET @Character = 'Chihiro Ogino / Sen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Miyu Irino';
SET @Character = 'Haku';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mari Natsuki';
SET @Character = 'Yubaba / Zeniba';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Takashi Nait√¥';
SET @Character = 'Akio Ogino';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yasuko Sawaguchi';
SET @Character = 'Y√ªko Ogino';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tatsuya Gash√ªin';
SET @Character = 'Aogaeru';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ry√ªnosuke Kamiki';
SET @Character = 'B√¥';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yumi Tamai';
SET @Character = 'Rin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Y√¥ √îizumi';
SET @Character = 'Bandai-gaeru';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Koba Hayashi';
SET @Character = 'Kawa no Kami';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('witch', 'parent child relationship', 'darkness', 'bath house', 'magic', 'spirit', 'parallel world', 'amusement park', 'youkai', 'japanese mythology', 'anime');

GO


-- ============================================
-- Movie: Blackmail
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Blackmail';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Abhinay Deo');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Parveez Shaikh', 'Pradhuman Singh');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Irrfan Khan';
SET @Character = 'Dev Kaushal';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Divya Dutta';
SET @Character = 'Dolly Verma';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kirti Kulhari';
SET @Character = 'Reena';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Arunoday Singh';
SET @Character = 'Ranjit Arora';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gajraj Rao';
SET @Character = 'Chawla';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Urmila Matondkar';
SET @Character = 'Mili';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Omi Vaidya';
SET @Character = 'DK';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anuja Sathe';
SET @Character = 'Prabha Ghatpande';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vibha Chhibber';
SET @Character = 'Blind woman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alfredo Tavares';
SET @Character = 'Inspector Andrew';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('blackmail', 'extramarital affair', 'bollywood');

GO


-- ============================================
-- Movie: After Hours
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'After Hours';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Crime', 'Drama', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Martin Scorsese');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Joseph Minion');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Griffin Dunne';
SET @Character = 'Paul Hackett';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rosanna Arquette';
SET @Character = 'Marcy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Verna Bloom';
SET @Character = 'June';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tommy Chong';
SET @Character = 'Pepe';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Linda Fiorentino';
SET @Character = 'Kiki';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Teri Garr';
SET @Character = 'Julie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Heard';
SET @Character = 'Tom the Bartender';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cheech Marin';
SET @Character = 'Neil';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Catherine O''Hara';
SET @Character = 'Gail';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dick Miller';
SET @Character = 'Waiter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new york city', 'suicide', 'date', 'subway', 'nightclub', 'overdose', 'artist', 'surreal', 'punk rock', 'surrealism', 'coincidence', 'thief', 'murder', 'mobster', 'one night', 'vigilantism', 'soho', 'district', 'circumstance', 'paper mache', 'anxious', 'playful', 'bar', 'vigilante gang', 'absurd', 'hilarious', 'whimsical', 'amused');

GO


-- ============================================
-- Movie: Arrival
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Arrival';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Mystery', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Denis Villeneuve');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Eric Heisserer', 'Ted Chiang');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Amy Adams';
SET @Character = 'Louise Banks';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeremy Renner';
SET @Character = 'Ian Donnelly';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Forest Whitaker';
SET @Character = 'Colonel Weber';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Stuhlbarg';
SET @Character = 'Agent Halpern';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark O''Brien';
SET @Character = 'Captain Marks';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tzi Ma';
SET @Character = 'General Shang';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Abigail Pniowsky';
SET @Character = '8-Year-Old-Hannah';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julia Scarlett Dan';
SET @Character = '12-Year-Old-Hannah';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jadyn Malone';
SET @Character = '6-Year-Old-Hannah';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Frank Schorpion';
SET @Character = 'Dr. Kettler';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('spacecraft', 'loss', 'time', 'alien', 'language', 'female protagonist', 'scientist', 'heartbreak', 'based on short story', 'military', 'alien language', 'linguist', 'first contact', 'communication', 'linguistics', 'time-manipulation', 'determinism', 'time manipulation');

GO


-- ============================================
-- Movie: The Boy and the Heron
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Boy and the Heron';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Adventure', 'Drama', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Hayao Miyazaki');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Hayao Miyazaki');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Soma Santoki';
SET @Character = 'Mahito Maki';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Masaki Suda';
SET @Character = 'The Grey Heron';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'K√¥ Shibasaki';
SET @Character = 'Kiriko';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aimyon';
SET @Character = 'Himi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yoshino Kimura';
SET @Character = 'Natsuko';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Takuya Kimura';
SET @Character = 'Shoichi Maki';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Keiko Takeshita';
SET @Character = 'Maid #1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jun Fubuki';
SET @Character = 'Maid #2';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sawako Agawa';
SET @Character = 'Maid #3';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Karen Takizawa';
SET @Character = 'Wara Wara';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('loss of loved one', 'world war ii', 'education', 'coming of age', 'spirituality', 'poverty', 'teenage boy', 'troubled childhood', 'semi autobiographical', 'moving to a city', 'anime', 'hand drawn animation', 'magic world', 'animation', 'courage', 'suspenseful');

GO


-- ============================================
-- Movie: Furiosa: A Mad Max Saga
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Furiosa: A Mad Max Saga';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('George Miller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('George Miller', 'Nick Lathouris');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Anya Taylor-Joy';
SET @Character = 'Furiosa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Hemsworth';
SET @Character = 'Dementus';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Burke';
SET @Character = 'Praetorian Jack';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alyla Browne';
SET @Character = 'Young Furiosa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'George Shevtsov';
SET @Character = 'The History Man';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lachy Hulme';
SET @Character = 'Immortan Joe / Rizzdale Pell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Howard';
SET @Character = 'The People Eater';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Angus Sampson';
SET @Character = 'Organic Mechanic';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Charlee Fraser';
SET @Character = 'Mary Jabassa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Elsa Pataky';
SET @Character = 'Vuvalini General / Mr. Norton';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('chase', 'post-apocalyptic future', 'warlord', 'prequel', 'wasteland', 'spin off', 'struggle for survival', 'desert', 'tyrant', 'tyranny', 'masculinity', 'grim', 'revenge murderer', 'mother daughter relationship', 'child abduction', 'car', 'brisk');

GO


-- ============================================
-- Movie: I Saw the TV Glow
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'I Saw the TV Glow';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Mystery');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Jane Schoenbrun');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jane Schoenbrun');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Justice Smith';
SET @Character = 'Owen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jack Haven';
SET @Character = 'Maddy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ian Foreman';
SET @Character = 'Young Owen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Helena Howard';
SET @Character = 'Isabel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lindsey Jordan';
SET @Character = 'Tara';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Danielle Deadwyler';
SET @Character = 'Brenda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Fred Durst';
SET @Character = 'Frank';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Conner O''Malley';
SET @Character = 'Dave';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emma Portner';
SET @Character = 'Mr. Melancholy / Marco / Amanda / Evil Clown';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Madaline Riley';
SET @Character = 'Polo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('high school', 'friendship', 'loss of sense of reality', 'sexuality', 'identity', 'obsession', 'surrealism', 'asthma', 'sleepover', 'nostalgia', 'buried alive', 'suburbia', 'coming of age', 'loneliness', 'arcade', 'vhs', 'tv show in film', 'guilt', 'lgbt', 'lgbt teen', 'planetarium', 'running away', 'gender dysphoria', 'existentialism', 'mysterious', '1990s', 'repression', 'escapism', 'subconscious', '2000s', '2010s', 'gay theme', 'movie theater', 'bar', 'independent film', 'body horror', 'intimate', 'teenager', 'liminal space', 'nonbinary director', 'audacious', 'awestruck', 'comforting', 'earnest', 'gloomy', 'powerful');

GO


-- ============================================
-- Movie: My Neighbor Totoro
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'My Neighbor Totoro';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Comedy', 'Family', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Hayao Miyazaki');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Hayao Miyazaki');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Noriko Hidaka';
SET @Character = 'Satsuki';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chika Sakamoto';
SET @Character = 'Mei';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shigesato Itoi';
SET @Character = 'Tatsuo Kusakabe';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sumi Shimamoto';
SET @Character = 'Yasuko Kusakabe';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tanie Kitabayashi';
SET @Character = 'Granny';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hitoshi Takagi';
SET @Character = 'Totoro';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hiroko Maruyama';
SET @Character = 'Kanta''s Mother';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Machiko Washio';
SET @Character = 'School teacher';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Reiko Suzuki';
SET @Character = 'Originator grandma';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Masashi Hirose';
SET @Character = 'Kanta''s Father';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('mother', 'sibling relationship', 'village', 'leave', 'rural area', 'hospital', 'new neighbor', 'new home', 'super power', 'magical creature', 'anime', 'admiring');

GO


-- ============================================
-- Movie: Civil War
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Civil War';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Alex Garland');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Alex Garland');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Nick Offerman';
SET @Character = 'President';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kirsten Dunst';
SET @Character = 'Lee';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wagner Moura';
SET @Character = 'Joel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jefferson White';
SET @Character = 'Dave';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nelson Lee';
SET @Character = 'Tony';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Evan Lai';
SET @Character = 'Bohai';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cailee Spaeny';
SET @Character = 'Jessie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephen McKinley Henderson';
SET @Character = 'Sammy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vince Pisani';
SET @Character = 'Concierge';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Justin James Boykin';
SET @Character = 'American Soldier';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('sniper', 'new york city', 'race against time', 'washington dc', 'usa', 'the white house', 'civil war', 'post-traumatic stress disorder (ptsd)', 'photographer', 'journalism', 'dystopia', 'war photographer', 'road trip', 'president', 'female protagonist', 'soldier', 'fictional war', 'photojournalism', 'xenophobia', 'assassination of president', 'suicide bombing', 'usa politics', 'war trauma', 'mass grave', 'war journalism', 'charlottesville', 'near future', 'violence', 'distressing', 'ominous', 'urgent');

GO


-- ============================================
-- Movie: The Holdovers
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Holdovers';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Alexander Payne');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('David Hemingson');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Paul Giamatti';
SET @Character = 'Paul Hunham';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dominic Sessa';
SET @Character = 'Angus Tully';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Da''Vine Joy Randolph';
SET @Character = 'Mary Lamb';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Carrie Preston';
SET @Character = 'Miss Lydia Crane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brady Hepner';
SET @Character = 'Teddy Kountze';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ian Dolley';
SET @Character = 'Alex Ollerman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jim Kaplan';
SET @Character = 'Ye-Joon Park';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Provost';
SET @Character = 'Jason Smith';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andrew Garman';
SET @Character = 'Dr. Hardy Woodrup';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Naheem Garcia';
SET @Character = 'Danny';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('vietnam war', 'winter', 'boarding school', 'holiday', 'boston', 'massachusetts', '1970s', 'alcoholism', 'grief', 'misfit', 'mental illness', 'teacher student relationship', 'new england', 'nostalgic', 'boys'' boarding school', 'christmas', 'winter break', 'troubled youth', 'loss of son', 'playful', 'intimate', 'christmas time', 'cook', 'sentimental', 'hilarious', 'compassionate');

GO


-- ============================================
-- Movie: Challengers
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Challengers';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Romance', 'Sport');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Luca Guadagnino');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Justin Kuritzkes');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Mike Faist';
SET @Character = 'Art Donaldson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Josh O''Connor';
SET @Character = 'Patrick Zweig';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zendaya';
SET @Character = 'Tashi Donaldson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Darnell Appling';
SET @Character = 'Umpire';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bryan Doo';
SET @Character = 'Art''s Physiotherapist';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shane T Harris';
SET @Character = 'Art''s Security Guard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nada Despotovich';
SET @Character = 'Tashi''s Mother';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joan Mcshane';
SET @Character = 'Line Judge';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Fowler';
SET @Character = 'TV Sports Commentator';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mary Joe Fernandez';
SET @Character = 'TV Sports Commentator';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('infidelity', 'husband wife relationship', 'love triangle', 'sports', 'tennis', 'competition', 'eroticism', 'atlanta', 'tennis player', 'male friendship', 'rivalry', 'interracial marriage', 'tennis court', 'ex-boyfriend ex-girlfriend relationship', 'knee injury', 'new rochelle', 'new york', 'aggressive', 'prodigy', 'tennis pro', '2000s', 'codependency', '2010s', 'gay theme', 'female coach', 'psychosexual', 'sports drama', 'power dynamics', 'tense', 'ambiguous', 'disgusted', '–≥–µ–π-–ø–µ—Ä—Å–æ–Ω–∞–∂', '–ª–≥–±—Ç–∫', '–≥–µ–π-–ø–æ—Ü–µ–ª—É–π');

GO


-- ============================================
-- Movie: Godzilla x Kong: The New Empire
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Godzilla x Kong: The New Empire';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Fantasy', 'Sci-Fi', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Adam Wingard');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Terry Rossio', 'Adam Wingard', 'Simon Barrett', 'Jeremy Slater');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Rebecca Hall';
SET @Character = 'Ilene Andrews';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brian Tyree Henry';
SET @Character = 'Bernie Hayes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dan Stevens';
SET @Character = 'Trapper';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kaylee Hottle';
SET @Character = 'Jia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alex Ferns';
SET @Character = 'Mikael';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Fala Chen';
SET @Character = 'Iwi Queen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rachel House';
SET @Character = 'Hampton';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ron Smyck';
SET @Character = 'Harris';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chantelle Jamieson';
SET @Character = 'Jayne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Greg Hatton';
SET @Character = 'Lewis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('giant monster', 'sequel', 'dinosaur', 'monkey', 'kaiju', 'fantasy world', 'giant ape', 'langue fran√ßaise', 'godzilla', 'king kong');

GO


-- ============================================
-- Movie: Lost Ladies
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Lost Ladies';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Kiran Rao');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Biplab Goswami', 'Sneha Desai', 'Divy Nidhi Sharma');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Nitanshi Goel';
SET @Character = 'Phool Kumari';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Pratibha Ranta';
SET @Character = 'Jaya';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sparsh Shrivastava';
SET @Character = 'Deepak Kumar';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chhaya Kadam';
SET @Character = 'Manju Maai';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ravi Kishan';
SET @Character = 'Insp. Shyam Manohar';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Geeta Agrawal Sharma';
SET @Character = 'Yashoda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Pankaj Sharma';
SET @Character = 'Deepak''s Father';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Satendra Soni';
SET @Character = 'Chhotu';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Abeer Sandeep Jain';
SET @Character = 'Bablu';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rachna Gupta';
SET @Character = 'Poonam';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('bride', 'rural india', 'bollywood', 'adventure');

GO


-- ============================================
-- Movie: Citizen Kane
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Citizen Kane';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Mystery');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Orson Welles');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Herman J. Mankiewicz', 'Orson Welles', 'John Houseman', 'Roger Q. Denny', 'Mollie Kent');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Joseph Cotten';
SET @Character = 'Jedediah Leland / Screening Room Reporter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dorothy Comingore';
SET @Character = 'Susan Alexander Kane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Agnes Moorehead';
SET @Character = 'Mary Kane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ruth Warrick';
SET @Character = 'Emily Monroe Norton Kane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ray Collins';
SET @Character = 'James W. Gettys';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Erskine Sanford';
SET @Character = 'Herbert Carter / Screening Room Reporter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Everett Sloane';
SET @Character = 'Mr. Bernstein';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'William Alland';
SET @Character = 'Jerry Thompson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Stewart';
SET @Character = 'Raymond';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'George Coulouris';
SET @Character = 'Walter Parks Thatcher';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('media tycoon', 'florida', 'art collector', 'newspaper', 'capitalist', 'journalist', 'sleigh', 'banker', 'american dream', 'failure', 'money', 'black and white', 'told in flashback', 'snowglobes', 'kids', 'serious', 'based on real person');

GO


-- ============================================
-- Movie: Late Night with the Devil
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Late Night with the Devil';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Horror');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Cameron Cairnes', 'Colin Cairnes');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Colin Cairnes', 'Cameron Cairnes');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'David Dastmalchian';
SET @Character = 'Jack Delroy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Laura Gordon';
SET @Character = 'June Ross-Mitchell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ian Bliss';
SET @Character = 'Carmichael Haig';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Fayssal Bazzi';
SET @Character = 'Christou';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ingrid Torelli';
SET @Character = 'Lilly';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rhys Auteri';
SET @Character = 'Gus McConnell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Georgina Haig';
SET @Character = 'Madeleine Piper';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Josh Quong Tart';
SET @Character = 'Leo Fiske';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steve Mouzakis';
SET @Character = 'Szandor D''Abo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paula Arundell';
SET @Character = 'Diane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new york city', '1970s', 'halloween', 'possession', 'hallucination', 'evil', 'hypnotism', 'macabre', 'found footage', 'satanic cult', 'shocking', 'death of wife', 'parapsychology', 'magician', 'late-night show', 'supernatural horror', 'provocative', 'satanic panic', 'ambiguous', 'scathing');

GO


-- ============================================
-- Movie: Under the Silver Lake
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Under the Silver Lake';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('David Robert Mitchell');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('David Robert Mitchell');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Andrew Garfield';
SET @Character = 'Sam';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wendy Vanden Heuvel';
SET @Character = 'Topless Bird Woman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Deborah Geffner';
SET @Character = 'Mom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Riley Keough';
SET @Character = 'Sarah';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Riki Lindhome';
SET @Character = 'Actress';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeannine Cota';
SET @Character = 'Botox Reporter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Gann';
SET @Character = 'Jefferson Sevence';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Callie Hernandez';
SET @Character = 'Millicent Sevence';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jessica Makinson';
SET @Character = 'Mrs. Sevence';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Reese Hartwig';
SET @Character = 'Sevence Kid #1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('secret society', 'seduction', 'dark comedy', 'surrealism', 'dream sequence', 'voyeur', 'part animation', 'neo-noir', 'hollywood hills', 'subliminal message');

GO


-- ============================================
-- Movie: 12 Angry Men
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = '12 Angry Men';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Sidney Lumet');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Reginald Rose');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Martin Balsam';
SET @Character = 'Juror 1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Fiedler';
SET @Character = 'Juror 2';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lee J. Cobb';
SET @Character = 'Juror 3';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'E.G. Marshall';
SET @Character = 'Juror 4';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jack Klugman';
SET @Character = 'Juror 5';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Edward Binns';
SET @Character = 'Juror 6';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jack Warden';
SET @Character = 'Juror 7';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Henry Fonda';
SET @Character = 'Juror 8';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joseph Sweeney';
SET @Character = 'Juror 9';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ed Begley';
SET @Character = 'Juror 10';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('death penalty', 'anonymity', 'court case', 'court', 'judge', 'jurors', 'father murder', 'class', 'heat', 'innocence', 'puerto rico', 'based on play or musical', 'black and white', 'courtroom', 'hostile', 'courtroom drama', 'cautionary', 'dialog driven', 'callous', 'persidangan', 'sidang');

GO


-- ============================================
-- Movie: Children of Heaven
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Children of Heaven';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Family', 'Sport');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Majid Majidi');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Majid Majidi');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Reza Naji';
SET @Character = 'Ali''s Father';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amir Farrokh Hashemian';
SET @Character = 'Ali';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bahare Seddiqi';
SET @Character = 'Zahra';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nafise Jafar-Mohammadi';
SET @Character = 'Roya';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Fereshte Sarabandi';
SET @Character = 'Ali''s Mother';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kamal Mirkarimi';
SET @Character = 'Assistant';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Behzad Rafiei';
SET @Character = 'Trainer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hossein Ahamdloo';
SET @Character = 'Photographer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Seyed Karym Alikhani';
SET @Character = 'Runner';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kazem Asqarpoor';
SET @Character = 'Grand Father';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('sibling relationship', 'class', 'foot race', 'anxious', 'suspenseful', 'gentle');

GO


-- ============================================
-- Movie: Ricky Stanicky
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Ricky Stanicky';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Peter Farrelly');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jeffrey Bushell', 'Brian Jarvis', 'James Lee Freeman', 'Peter Farrelly', 'Pete Jones', 'Mike Cerrone', 'David Occhino', 'Jason Decker');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Riley Stiles';
SET @Character = 'Young Dean';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Oscar Wilson';
SET @Character = 'Young JT';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gaius Nolan';
SET @Character = 'Young Wes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brian Jarvis';
SET @Character = 'Police Chief';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jackie Flynn';
SET @Character = 'Fire Chief Grunberg';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kevin J. Flynn';
SET @Character = 'Fireman Mycroft';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jasmine Anders';
SET @Character = 'Officer Parfitt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lex Scott Davis';
SET @Character = 'Erin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zac Efron';
SET @Character = 'Dean';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stan Grant';
SET @Character = 'Stan Grant';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('lie', 'male friendship', 'atlantic city', 'lgbt', 'lying', 'actor', 'playful', 'absurd', 'hilarious', 'compassionate', 'farcical');

GO


-- ============================================
-- Movie: Fargo
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Fargo';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle AND TYPE = 'Movie' AND MovieLength = '98 minutes';

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Joel Coen', 'Ethan Coen');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Ethan Coen', 'Joel Coen');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'William H. Macy';
SET @Character = 'Jerry Lundegaard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steve Buscemi';
SET @Character = 'Carl Showalter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peter Stormare';
SET @Character = 'Gaear Grimsrud';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kristin Rudr√ºd';
SET @Character = 'Jean Lundegaard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harve Presnell';
SET @Character = 'Wade Gustafson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tony Denman';
SET @Character = 'Scotty Lundegaard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gary Houston';
SET @Character = 'Irate Customer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sally Wingert';
SET @Character = 'Irate Customer''s Wife';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kurt Schweickhardt';
SET @Character = 'Car Salesman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Larissa Kokernot';
SET @Character = 'Hooker #1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('salesclerk', 'unsociability', 'police', 'cheating', 'ransom', 'winter', 'kidnapping', 'minnesota', 'dark comedy', 'north dakota', 'money', 'murder', 'police officer', 'car dealership', 'woodchipper', 'macabre', 'false history', 'neo-noir', 'complex', 'minneapolis');

GO


-- ============================================
-- Movie: Burn After Reading
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Burn After Reading';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Crime', 'Drama', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Ethan Coen', 'Joel Coen');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Joel Coen', 'Ethan Coen');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'George Clooney';
SET @Character = 'Harry Pfarrer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Frances McDormand';
SET @Character = 'Linda Litzke';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brad Pitt';
SET @Character = 'Chad Feldheimer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Malkovich';
SET @Character = 'Osborne Cox';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tilda Swinton';
SET @Character = 'Katie Cox';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Jenkins';
SET @Character = 'Ted';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Elizabeth Marvel';
SET @Character = 'Sandy Pfarrer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Rasche';
SET @Character = 'CIA Officer Palmer DeBakey Smith';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'J.K. Simmons';
SET @Character = 'CIA Superior';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Olek Krupa';
SET @Character = 'Krapotkin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('washington dc', 'usa', 'blackmail', 'paranoia', 'black humor', 'plastic surgery', 'autobiography', 'memory', 'corpse', 'divorce', 'gym', 'disc', 'ex priest', 'fitness', 'online dating', 'memoirs', 'personal trainer');

GO


-- ============================================
-- Movie: Lisa Frankenstein
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Lisa Frankenstein';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Horror', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Zelda Williams');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Diablo Cody');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Kathryn Newton';
SET @Character = 'Lisa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Liza Soberano';
SET @Character = 'Taffy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jenna Davis';
SET @Character = 'Lori';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Trina LaFargue';
SET @Character = 'Tricia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paola Andino';
SET @Character = 'Misty';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joshua Montes';
SET @Character = 'Vince';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Greening';
SET @Character = 'Jock';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mae Anglim';
SET @Character = 'Drunk Girl';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joey Harris';
SET @Character = 'Tamara';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Henry Eikenberry';
SET @Character = 'Michael Trent';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('high school', 'cemetery', 'dark comedy', 'coming of age', 'murder', 'teenage girl', 'female protagonist', 'corpse', 'body mutilation', 'death of mother', 'reanimated corpse', 'woman director', '1980s', 'adoring', 'inspired by novel or book');

GO


-- ============================================
-- Movie: Poor Things
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Poor Things';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Romance', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Yorgos Lanthimos');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Tony McNamara', 'Alasdair Gray');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Emma Stone';
SET @Character = 'Bella Baxter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Willem Dafoe';
SET @Character = 'Godwin Baxter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vicki Pepperdine';
SET @Character = 'Mrs. Prim';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ramy Youssef';
SET @Character = 'Max McCandles';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jack Barton';
SET @Character = 'Fop 1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Charlie Hiscock';
SET @Character = 'Fop 2';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Attila Dobai';
SET @Character = 'Hapless Student';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emma Hindle';
SET @Character = 'Woman with Kid in London Street';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anders Olof Grundberg';
SET @Character = 'Kid in London Street';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Attila Kecskem√©thy';
SET @Character = 'Burly Guy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('ship', 'london', 'england', 'experiment', 'paris', 'france', 'based on novel or book', 'obsession', 'lisbon', 'portugal', 'crooked lawyer', 'love', 'domestic abuse', 'female protagonist', 'doctor', 'prostitution', 'cruelty', 'scientist', 'masturbation', 'disfigured face', 'sexual awakening', 'exploring sexuality', 'sex worker', 'female empowerment', 'curious', 'female sexuality', 'brain transplant', 'absurdism', 'quest for knowledge', 'spousal abuse', 'women''s liberation', 'alexandria egypt', 'victorian era', 'quest for identity', 'frankenstein', 'body horror', 'amused', 'audacious', 'awestruck', 'euphoric', 'exuberant', 'melodramatic', 'wry');

GO


-- ============================================
-- Movie: White Chicks
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'White Chicks';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Crime');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Keenen Ivory Wayans');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Keenen Ivory Wayans', 'Shawn Wayans', 'Marlon Wayans', 'Andrew McElfresh', 'Michael Anthony Snowden', 'Xavier Cook');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Shawn Wayans';
SET @Character = 'Kevin Copeland';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Marlon Wayans';
SET @Character = 'Marcus Copeland';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jaime King';
SET @Character = 'Heather Vandergeld';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Frankie Faison';
SET @Character = 'Chief Elliott Gordon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lochlyn Munro';
SET @Character = 'Agent Jake Harper';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Heard';
SET @Character = 'Warren Vandergeld';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Busy Philipps';
SET @Character = 'Karen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Terry Crews';
SET @Character = 'Latrell Spencer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brittany Daniel';
SET @Character = 'Megan Vandergeld';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eddie Velez';
SET @Character = 'Agent Vincent Gomez';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('undercover', 'fbi', 'cross dressing', 'car accident', 'high society', 'buddy cop', 'hamptons', 'amused', 'familiar');

GO


-- ============================================
-- Movie: The Zone of Interest
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Zone of Interest';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'History', 'War');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Jonathan Glazer');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jonathan Glazer', 'Martin Amis');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Christian Friedel';
SET @Character = 'Rudolf H√∂ss';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sandra H√ºller';
SET @Character = 'Hedwig H√∂ss';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Johann Karthaus';
SET @Character = 'Claus H√∂ss';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Luis Noah Witte';
SET @Character = 'Hans H√∂ss';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nele Ahrensmeier';
SET @Character = 'Inge-Brigitt H√∂ss';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lilli Falk';
SET @Character = 'Heideraud H√∂ss';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anastazja Drobniak';
SET @Character = 'Annagret H√∂ss';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cecylia Pekala';
SET @Character = 'Annagret H√∂ss';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kalman Wilson';
SET @Character = 'Annagret H√∂ss';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Medusa Knopf';
SET @Character = 'Elfryda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('husband wife relationship', 'based on novel or book', 'nazi', 'concentration camp', 'holocaust (shoah)', 'world war ii', 'auschwitz-birkenau concentration camp', 'garden', 'biography', 'based on true story', 'nazi officer', 'genocide', '1940s', 'commandant', 'complicity');

GO


-- ============================================
-- Movie: Anyone But You
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Anyone But You';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Will Gluck');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Ilana Wolpert', 'Will Gluck');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Sydney Sweeney';
SET @Character = 'Bea';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Glen Powell';
SET @Character = 'Ben';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mia Artemis';
SET @Character = 'Barista';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nat Buchanan';
SET @Character = 'Miranda Clerk';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Josh Bonello';
SET @Character = 'Skyler Cappuccino';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gata';
SET @Character = 'Pete';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alexandra Shipp';
SET @Character = 'Claudia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hadley Robinson';
SET @Character = 'Halle';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dermot Mulroney';
SET @Character = 'Leo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rachel Griffiths';
SET @Character = 'Innie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('australia', 'hiking', 'romcom', 'based on play or musical', 'law school', 'shakespeare in modern dress', 'aftercreditsstinger', 'duringcreditsstinger', 'pathetic', 'fake dating', 'destination wedding', 'sister''s wedding', 'clich√©', '–ª–µ—Å–±–∏—è–Ω–∫–∞', '–ø–æ–¥—Ä—É–≥–∞-–ª–µ—Å–±–∏—è–Ω–∫–∞', '–ª–µ—Å–±–∏–π—Å–∫–∞—è —Å–≤–∞–¥—å–±–∞', '—Å–µ—Å—Ç—Ä–∞-–ª–µ—Å–±–∏—è–Ω–∫–∞');

GO


-- ============================================
-- Movie: The Iron Claw
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Iron Claw';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Biography', 'Drama', 'Sport');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Sean Durkin');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Sean Durkin');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Holt McCallany';
SET @Character = 'Fritz Von Erich';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maura Tierney';
SET @Character = 'Doris Von Erich';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Grady Wilson';
SET @Character = 'Young Kevin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Valentine Newcomer';
SET @Character = 'Young David';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zac Efron';
SET @Character = 'Kevin Von Erich';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harris Dickinson';
SET @Character = 'David Von Erich';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scott Innes';
SET @Character = 'Ring Announcer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chavo Guerrero Jr.';
SET @Character = 'The Sheik';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Garrett Hammond';
SET @Character = 'Sportatorium Referee #1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stanley Simons';
SET @Character = 'Mike Von Erich';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('suicide', 'coma', 'sports', '1970s', 'texas', 'wrestling', 'brotherhood', 'biography', 'dallas texas', 'based on true story', 'family relationships', 'grief', 'tragedy', 'curse', 'family', 'death', 'mental illness', 'overbearing father', 'mourning', 'death of brother', '1980s', 'grim', 'toxic masculinity', 'brothers', 'intimate', 'wwf', 'depressing', 'adoring', 'compassionate', 'powerful', 'tragic', 'male mental health');

GO


-- ============================================
-- Movie: Paris, Texas
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Paris, Texas';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Wim Wenders');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('L.M. Kit Carson', 'Sam Shepard', 'Walter Donohue');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Harry Dean Stanton';
SET @Character = 'Travis Henderson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sam Berry';
SET @Character = 'Gas Station Attendant';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bernhard Wicki';
SET @Character = 'Doctor Ulmer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dean Stockwell';
SET @Character = 'Walt Henderson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aurore Cl√©ment';
SET @Character = 'Anne Henderson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Claresie Mobley';
SET @Character = 'Car Rental Clerk';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hunter Carson';
SET @Character = 'Hunter Henderson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Viva';
SET @Character = 'Woman on TV';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Socorro Valdez';
SET @Character = 'Carmelita';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Edward Fayton';
SET @Character = 'Hunter''s Friend';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('van', 'regret', 'sibling relationship', 'texas', 'peep show', 'redemption', 'mute', 'los angeles', 'california', 'on the road', 'desert', 'family', 'modern-day western', 'neo-western', 'new german cinema', 'fugue state');

GO


-- ============================================
-- Movie: Taste of Cherry
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Taste of Cherry';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Abbas Kiarostami');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Abbas Kiarostami');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Homayoun Ershadi';
SET @Character = 'Agha-ye. Badiei';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Abdolhosein Bagheri';
SET @Character = 'Kargar-e Mozeh';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Afshin Khorshid Bakhtiari';
SET @Character = 'Pelastik jam kon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Safar Ali Moradi';
SET @Character = 'The Soldier';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mir Hossein Noori';
SET @Character = 'The Seminarian';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ahmad Ansari';
SET @Character = 'Negahban-e Karkhaneh';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hamid Masoumi';
SET @Character = 'Mard-e Bajeh Telefon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Elham Imani';
SET @Character = 'The Photographer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('suicide', 'life and death', 'muslim', 'talking', 'nihilism', 'koran', 'teheran (tehran)', 'iran', 'construction site', 'suicidal thoughts', 'grave digging', 'driving', 'hopelessness', 'life challenges', 'self-harm', 'contemplating suicide', 'ideologies', 'religious conversation', 'iranian cinema', 'desperation', 'commit suicide', 'depressed man');

GO


-- ============================================
-- Movie: The Irishman
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Irishman';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Biography', 'Crime', 'Drama', 'History', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Martin Scorsese');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Steven Zaillian', 'Charles Brandt');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Robert De Niro';
SET @Character = 'Frank Sheeran';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Al Pacino';
SET @Character = 'Jimmy Hoffa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joe Pesci';
SET @Character = 'Russell Bufalino';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harvey Keitel';
SET @Character = 'Angelo Bruno';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ray Romano';
SET @Character = 'Bill Bufalino';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bobby Cannavale';
SET @Character = 'Skinny Razor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anna Paquin';
SET @Character = 'Older Peggy Sheeran';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephen Graham';
SET @Character = 'Anthony ''Tony Pro'' Provenzano';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephanie Kurtzuba';
SET @Character = 'Irene Sheeran';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jack Huston';
SET @Character = 'Robert Kennedy / RFK';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('chicago', 'illinois', 'philadelphia', 'pennsylvania', 'based on novel or book', 'hitman', 'war veteran', 'pennsylvania', 'usa', 'gangster', '1970s', 'irish-american', 'male friendship', 'aging', 'family relationships', 'murder', 'organized crime', 'mafia', 'religion', 'detroit', 'michigan', 'sicilian mafia', 'nonlinear timeline', 'character study', 'labor union', '1950s', '1960s', 'mob family', 'jimmy hoffa', 'voiceover', 'father daughter relationship', 'criminal as protagonist', 'killer as protagonist');

GO


-- ============================================
-- Movie: Sinners
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Sinners';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Drama', 'Horror', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Ryan Coogler');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Ryan Coogler');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Miles Caton';
SET @Character = 'Sammie Moore';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Saul Williams';
SET @Character = 'Jedidiah';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andrene Ward-Hammond';
SET @Character = 'Ruthie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jack O''Connell';
SET @Character = 'Remmick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tenaj L. Jackson';
SET @Character = 'Beatrice';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael B. Jordan';
SET @Character = 'Smoke / Stack';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Maldonado';
SET @Character = 'Hogwood';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aadyn Encalarde';
SET @Character = 'Teenager';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Helena Hu';
SET @Character = 'Lisa Chow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yao';
SET @Character = 'Bo Chow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('chicago', 'illinois', 'capitalism', 'ku klux klan', 'musician', 'immortality', 'vampire', 'surrealism', 'sin', 'alcoholism', 'vampire hunter (slayer)', 'church', 'twins', 'estranged wife', 'dual role', 'cousin cousin relationship', 'death of daughter', 'blues music', 'aftercreditsstinger', 'duringcreditsstinger', 'klansmen', '1990s', '1930s', 'salvation', 'assimilation', 'chinese immigrant', 'brother brother relationship', 'southern gothic', 'afro-descendants', 'cousins', 'supernatural horror', 'train station', 'juke joint', 'passing for white', 'mississippi', 'audacious', 'ghoulish', 'kkk', 'period horror');

GO


-- ============================================
-- Movie: The Accountant
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Accountant';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Crime', 'Drama', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Gavin O''Connor');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Bill Dubuque');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ben Affleck';
SET @Character = 'Christian Wolff';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anna Kendrick';
SET @Character = 'Dana Cummings';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'J.K. Simmons';
SET @Character = 'Ray King';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jon Bernthal';
SET @Character = 'Brax';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeffrey Tambor';
SET @Character = 'Francis Silverberg';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cynthia Addai-Robinson';
SET @Character = 'Marybeth Medina';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Lithgow';
SET @Character = 'Lamar Blackburn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jean Smart';
SET @Character = 'Rita Blackburn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andy Umberger';
SET @Character = 'Ed Chilton';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alison Wright';
SET @Character = 'Justine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('sniper', 'assassin', 'autism', 'money', 'gunfight', 'criminal', 'loner', 'numbers', 'accountant', 'brother brother relationship');

GO


-- ============================================
-- Movie: Whiplash
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Whiplash';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Music');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Damien Chazelle');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Damien Chazelle');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Miles Teller';
SET @Character = 'Andrew';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'J.K. Simmons';
SET @Character = 'Fletcher';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Reiser';
SET @Character = 'Jim Neimann';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Melissa Benoist';
SET @Character = 'Nicole';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Austin Stowell';
SET @Character = 'Ryan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nate Lang';
SET @Character = 'Carl Tanner';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Mulkey';
SET @Character = 'Uncle Frank';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Damon Gupton';
SET @Character = 'Mr. Kramer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Suanne Spoke';
SET @Character = 'Aunt Emma';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Max Kasch';
SET @Character = 'Dorm Neighbor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new york city', 'concert', 'jazz', 'musician', 'obsession', 'music teacher', 'conservatory', 'drums', 'montage', 'blunt', 'perfectionist', 'perfection', 'public humiliation', 'jazz band', 'young adult', 'music school', 'based on short', 'drummer');

GO


-- ============================================
-- Movie: Fight Club
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Fight Club';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('David Fincher');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Chuck Palahniuk', 'Jim Uhls');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Edward Norton';
SET @Character = 'Narrator';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brad Pitt';
SET @Character = 'Tyler Durden';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Meat Loaf';
SET @Character = 'Robert Paulsen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zach Grenier';
SET @Character = 'Richard Chesler';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richmond Arquette';
SET @Character = 'Intern at Hospital';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Andrews';
SET @Character = 'Thomas at Remaining Men Together';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'George Maguire';
SET @Character = 'Group Leader - Remaining Men Together';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eugenie Bondurant';
SET @Character = 'Weeping Woman - Onward and Upward';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christina Cabot';
SET @Character = 'Leader - Partners in Positivity';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Helena Bonham Carter';
SET @Character = 'Marla Singer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('dual identity', 'rage and hate', 'based on novel or book', 'nihilism', 'fight', 'support group', 'dystopia', 'insomnia', 'alter ego', 'breaking the fourth wall', 'split personality', 'quitting a job', 'dissociative identity disorder', 'self destructiveness');

GO


-- ============================================
-- Movie: Nosferatu
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Nosferatu';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Fantasy', 'Horror', 'Mystery');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Robert Eggers');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Robert Eggers', 'Henrik Galeen', 'Bram Stoker');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Lily-Rose Depp';
SET @Character = 'Ellen Hutter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nicholas Hoult';
SET @Character = 'Thomas Hutter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bill Skarsg√•rd';
SET @Character = 'Count Orlok';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aaron Taylor-Johnson';
SET @Character = 'Friedrich Harding';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Willem Dafoe';
SET @Character = 'Prof. Albin Eberhart von Franz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emma Corrin';
SET @Character = 'Anna Harding';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ralph Ineson';
SET @Character = 'Dr. Wilhelm Sievers';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Simon McBurney';
SET @Character = 'Knock';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ad√©la Hesov√°';
SET @Character = 'Clara';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Milena Konstantinova';
SET @Character = 'Louise';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('cold', 'based on novel or book', 'vampire', 'necrophilia', 'eroticism', 'possession', 'w√ºrzburg', 'remake', 'gothic horror', 'desire', 'questioning', 'somnambulism', 'plague', '19th century', 'dread', 'drinking blood', 'complex', 'supernatural horror', 'period piece', 'grand', '1830s', 'nightmares', 'dramatic', 'gloomy');

GO


-- ============================================
-- Movie: Goodfellas
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Goodfellas';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Biography', 'Crime', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Martin Scorsese');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Nicholas Pileggi', 'Martin Scorsese');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Robert De Niro';
SET @Character = 'James Conway';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ray Liotta';
SET @Character = 'Henry Hill';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joe Pesci';
SET @Character = 'Tommy DeVito';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lorraine Bracco';
SET @Character = 'Karen Hill';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Sorvino';
SET @Character = 'Paul Cicero';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Frank Sivero';
SET @Character = 'Frankie Carbone';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tony Darrow';
SET @Character = 'Sonny Bunz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mike Starr';
SET @Character = 'Frenchy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Frank Vincent';
SET @Character = 'Billy Batts';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chuck Low';
SET @Character = 'Morris Kessler';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('prison', 'florida', 'new york city', 'based on novel or book', 'gangster', 'mass murder', 'drug trafficking', '1970s', 'irish-american', 'gore', 'biography', 'based on true story', 'murder', 'organized crime', 'mafia', 'brooklyn', 'new york city', 'crime epic', 'tampa', 'florida');

GO


-- ============================================
-- Movie: Us
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Us';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Horror', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Jordan Peele');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jordan Peele');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Lupita Nyong''o';
SET @Character = 'Adelaide Wilson / Red';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Winston Duke';
SET @Character = 'Gabe Wilson / Abraham';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Elisabeth Moss';
SET @Character = 'Kitty Tyler / Dahlia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tim Heidecker';
SET @Character = 'Josh Tyler / Tex';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shahadi Wright Joseph';
SET @Character = 'Zora Wilson / Umbrae';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Evan Alex';
SET @Character = 'Jason Wilson / Pluto';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yahya Abdul-Mateen II';
SET @Character = 'Russel Thomas / Weyland';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anna Diop';
SET @Character = 'Rayne Thomas / Eartha';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cali Sheldon';
SET @Character = 'Becca Tyler / Io';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Noelle Sheldon';
SET @Character = 'Lindsey Tyler / Nix';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('mask', 'boardwalk', 'murder', 'psychological thriller', 'fear', 'family vacation', 'home invasion', 'amusement park', 'doppelg√§nger', 'santa cruz', 'california', '1980s', 'duality');

GO


-- ============================================
-- Movie: American Psycho
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'American Psycho';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Horror');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Mary Harron');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Bret Easton Ellis', 'Mary Harron', 'Guinevere Turner');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Christian Bale';
SET @Character = 'Patrick Bateman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Justin Theroux';
SET @Character = 'Timothy Bryce';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Josh Lucas';
SET @Character = 'Craig McDermott';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bill Sage';
SET @Character = 'David Van Patten';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chlo√´ Sevigny';
SET @Character = 'Jean';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Reese Witherspoon';
SET @Character = 'Evelyn Williams';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samantha Mathis';
SET @Character = 'Courtney Rawlinson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matt Ross';
SET @Character = 'Luis Carruthers';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jared Leto';
SET @Character = 'Paul Allen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Willem Dafoe';
SET @Character = 'Donald Kimball';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new york city', 'based on novel or book', 'businessman', 'psychopath', 'dark comedy', 'satire', 'wall street', 'serial killer', 'chainsaw', 'big city', 'psychological thriller', 'character study', 'white collar', 'harvard business school', 'voice imitation', '1980s', 'american businessman', 'bloody', 'ambiguity', 'psychological horror', 'horror', 'baffled');

GO


-- ============================================
-- Movie: The Batman
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Batman';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Crime', 'Drama', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Matt Reeves');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Matt Reeves', 'Peter Craig', 'Bob Kane', 'Bill Finger');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Robert Pattinson';
SET @Character = 'Bruce Wayne / The Batman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zo√´ Kravitz';
SET @Character = 'Selina Kyle';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeffrey Wright';
SET @Character = 'Lt. James Gordon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Colin Farrell';
SET @Character = 'Oz / The Penguin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Dano';
SET @Character = 'The Riddler';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Turturro';
SET @Character = 'Carmine Falcone';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andy Serkis';
SET @Character = 'Alfred';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peter Sarsgaard';
SET @Character = 'District Attorney Gil Colson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Barry Keoghan';
SET @Character = 'Unseen Arkham Prisoner';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jayme Lawson';
SET @Character = 'Bella Re√°l';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('police', 'psychopath', 'secret identity', 'crime fighter', 'superhero', 'nightclub', 'politician', 'based on comic', 'vigilante', 'organized crime', 'serial killer', 'millionaire', 'social injustice', 'murder investigation', 'aftercreditsstinger', 'masked superhero', 'political corruption', 'neo-noir', 'somber', 'vengeance', 'mayoral election');

GO


-- ============================================
-- Movie: Taxi Driver
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Taxi Driver';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Martin Scorsese');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Paul Schrader');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Diahnne Abbott';
SET @Character = 'Concession Girl';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Frank Adu';
SET @Character = 'Angry Black Man';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Victor Argo';
SET @Character = 'Melio';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gino Ardito';
SET @Character = 'Policeman at Rally';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Garth Avery';
SET @Character = 'Iris'' Friend';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peter Boyle';
SET @Character = 'Wizard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Albert Brooks';
SET @Character = 'Tom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harry Cohn';
SET @Character = 'Cabbie in Bellmore';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Copper Cunningham';
SET @Character = 'Hooker in Cab';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert De Niro';
SET @Character = 'Travis Bickle';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('drug dealer', 'vietnam veteran', 'new york city', 'taxi', 'pornography', 'obsession', 'taxi driver', 'pimp', 'firearm', 'politician', 'alienation', 'junk food', 'misanthrophy', 'vigilante', 'cynical', 'illegal prostitution', 'character study', 'loner', 'manhattan', 'new york city', 'meditative', 'neo-noir', 'child prostitution', 'complex', 'new hollywood', 'dreary', 'cautionary', 'drives', 'provocative', 'antagonistic', 'audacious', 'callous');

GO


-- ============================================
-- Movie: The Menu
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Menu';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Horror', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Mark Mylod');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Seth Reiss', 'Will Tracy');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ralph Fiennes';
SET @Character = 'Chef Slowik';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anya Taylor-Joy';
SET @Character = 'Margot';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nicholas Hoult';
SET @Character = 'Tyler';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hong Chau';
SET @Character = 'Elsa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Janet McTeer';
SET @Character = 'Lillian';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Adelstein';
SET @Character = 'Ted';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Leguizamo';
SET @Character = 'Movie Star';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aimee Carrero';
SET @Character = 'Felicity';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Reed Birney';
SET @Character = 'Richard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Judith Light';
SET @Character = 'Anne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('psychopath', 'obsession', 'mass murder', 'restaurant', 'dark comedy', 'revenge', 'food', 'dinner', 'chef', 'food critic', 'remote island', 'french cuisine', 'culinary arts', 'satirical', 'fine dining', 'haute cuisine', 'direct', 'absurd', 'foreboding', 'pessimistic');

GO


-- ============================================
-- Movie: Shutter Island
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Shutter Island';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Martin Scorsese');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Laeta Kalogridis', 'Dennis Lehane');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Leonardo DiCaprio';
SET @Character = 'Teddy Daniels';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Ruffalo';
SET @Character = 'Chuck Aule';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ben Kingsley';
SET @Character = 'Dr. Cawley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Max von Sydow';
SET @Character = 'Dr. Naehring';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michelle Williams';
SET @Character = 'Dolores';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emily Mortimer';
SET @Character = 'Rachel 1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Patricia Clarkson';
SET @Character = 'Rachel 2';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jackie Earle Haley';
SET @Character = 'George Noyce';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ted Levine';
SET @Character = 'Warden';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Carroll Lynch';
SET @Character = 'Deputy Warden McPherson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('island', 'based on novel or book', 'hurricane', 'investigation', 'u.s. marshal', 'conspiracy theory', 'psychiatric hospital', 'psychological thriller', 'whodunit', 'neo-noir', '1950s', 'dreary', 'tense', 'baffled', 'violence mystery');

GO


-- ============================================
-- Movie: No Hard Feelings
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'No Hard Feelings';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Gene Stupnitsky');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Gene Stupnitsky', 'John Phillips');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jennifer Lawrence';
SET @Character = 'Maddie Barker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andrew Barth Feldman';
SET @Character = 'Percy Becker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Laura Benanti';
SET @Character = 'Allison Becker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matthew Broderick';
SET @Character = 'Laird Becker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Natalie Morales';
SET @Character = 'Sara';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scott MacArthur';
SET @Character = 'Jim';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ebon Moss-Bachrach';
SET @Character = 'Gary';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kyle Mooney';
SET @Character = 'Jody';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hasan Minhaj';
SET @Character = 'Doug Kahn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jordan Mendoza';
SET @Character = 'Crispin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('friendship', 'older woman seduces younger guy', 'romcom', 'summer', 'new york state', 'teen comedy', 'hometown', 'bankruptcy', 'craigslist', 'animal shelter', 'socially awkward', 'uber', 'late coming of age', 'nude swimming', 'graduation party', 'helicopter parenting');

GO


-- ============================================
-- Movie: Scarface
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Scarface';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Brian De Palma');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Oliver Stone', 'Howard Hawks', 'Ben Hecht', 'Armitage Trail');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Al Pacino';
SET @Character = 'Tony Montana';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steven Bauer';
SET @Character = 'Manny Ray';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michelle Pfeiffer';
SET @Character = 'Elvira';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mary Elizabeth Mastrantonio';
SET @Character = 'Gina';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert Loggia';
SET @Character = 'Frank Lopez';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Miriam Colon';
SET @Character = 'Mama Montana';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'F. Murray Abraham';
SET @Character = 'Omar';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Shenar';
SET @Character = 'Alejandro Sosa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harris Yulin';
SET @Character = 'Bernstein';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = '√Ångel Salazar';
SET @Character = 'Chi Chi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('corruption', 'sibling relationship', 'miami', 'florida', 'cuba', 'loss of loved one', 'gangster', 'cocaine', 'rise and fall', 'remake', 'drug cartel', 'mafia', 'drug lord', 'cynical', 'bitterness', 'rise to power', 'miami beach', 'cuban refugees', 'drug war', 'cautionary');

GO


-- ============================================
-- Movie: Heat
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Heat';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Crime', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Michael Mann');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Michael Mann');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Al Pacino';
SET @Character = 'Vincent Hanna';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert De Niro';
SET @Character = 'Neil McCauley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Val Kilmer';
SET @Character = 'Chris Shiherlis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jon Voight';
SET @Character = 'Nate';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Sizemore';
SET @Character = 'Michael Cheritto';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Diane Venora';
SET @Character = 'Justine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amy Brenneman';
SET @Character = 'Eady';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ashley Judd';
SET @Character = 'Charlene Shiherlis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mykelti Williamson';
SET @Character = 'Drucker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wes Studi';
SET @Character = 'Casals';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('robbery', 'chase', 'obsession', 'detective', 'heist', 'thief', 'honor', 'murder', 'betrayal', 'gang', 'los angeles', 'california', 'cat and mouse', 'bank robbery', 'criminal mastermind', 'cynical', 'ex-con', 'one last job', 'loner', 'bank job', 'neo-noir', 'crime epic', 'tense', 'antagonistic', 'audacious', 'bold');

GO


-- ============================================
-- Movie: Jurassic Park
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Jurassic Park';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Steven Spielberg');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Michael Crichton', 'David Koepp');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Sam Neill';
SET @Character = 'Grant';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Laura Dern';
SET @Character = 'Ellie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeff Goldblum';
SET @Character = 'Malcolm';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Attenborough';
SET @Character = 'Hammond';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bob Peck';
SET @Character = 'Muldoon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Martin Ferrero';
SET @Character = 'Gennaro';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'BD Wong';
SET @Character = 'Wu';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joseph Mazzello';
SET @Character = 'Tim';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ariana Richards';
SET @Character = 'Lex';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samuel L. Jackson';
SET @Character = 'Arnold';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('exotic island', 'island', 'triceratops', 'brontosaurus', 'electric fence', 'dna', 'tyrannosaurus rex', 'paleontology', 'dinosaur', 'amusement park', 'theme park');

GO


-- ============================================
-- Movie: Hereditary
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Hereditary';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Horror', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Ari Aster');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Ari Aster');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Alex Wolff';
SET @Character = 'Peter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gabriel Byrne';
SET @Character = 'Steve';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Toni Collette';
SET @Character = 'Annie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Milly Shapiro';
SET @Character = 'Charlie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christy Summerhays';
SET @Character = 'Charlie''s Teacher';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Morgan Lund';
SET @Character = 'Mr. Davies';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mallory Bechtel';
SET @Character = 'Bridget';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jake Brown';
SET @Character = 'Brendan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harrison Nell';
SET @Character = 'Student #1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'BriAnn Rachele';
SET @Character = 'Student #2';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('daughter', 'funeral', 'loss of loved one', 'ritual', 'supernatural', 'possession', 'cult', 'dysfunctional family', 'murder', 'family drama', 'fear', 'demon', 'attic', 'evil', 'ritual murder', 'demonic possession', 'satanic ritual', 'dollhouse', 'satanic cult', 's√©ance', 'matriarch', 'miniatures', 'coven', 'didactic', 'sinister');

GO


-- ============================================
-- Movie: Pearl
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Pearl';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Horror', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Ti West');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Ti West', 'Mia Goth');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Mia Goth';
SET @Character = 'Pearl';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Corenswet';
SET @Character = 'Projectionist';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tandi Wright';
SET @Character = 'Ruth';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matthew Sunderland';
SET @Character = 'Father';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emma Jenkins-Purro';
SET @Character = 'Mitsy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alistair Sewell';
SET @Character = 'Howard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amelia Reid';
SET @Character = 'Margaret';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gabe McDonnell';
SET @Character = 'Woman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lauren Stewart';
SET @Character = 'Pianist';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Todd Rippon';
SET @Character = 'Director';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('farm', 'pornography', 'dance performance', 'confession', 'texas', 'alligator', 'barn', 'prequel', 'murder', 'serial killer', 'slasher', 'corpse', 'murderer', 'lust', 'religious fundamentalism', 'audition', 'mental illness', 'projectionist', 'isolated farmhouse', 'pandemic', '1910s', 'mother daughter relationship', 'origin story', 'aspiring actress', 'pastiche', 'callous');

GO


-- ============================================
-- Movie: The Shining
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Shining';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Horror');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Stanley Kubrick');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Stephen King', 'Stanley Kubrick', 'Diane Johnson');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jack Nicholson';
SET @Character = 'Jack Torrance';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shelley Duvall';
SET @Character = 'Wendy Torrance';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Danny Lloyd';
SET @Character = 'Danny';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scatman Crothers';
SET @Character = 'Hallorann';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Barry Nelson';
SET @Character = 'Ullman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Philip Stone';
SET @Character = 'Grady';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joe Turkel';
SET @Character = 'Lloyd';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anne Jackson';
SET @Character = 'Doctor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tony Burton';
SET @Character = 'Durkin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lia Beldam';
SET @Character = 'Young Woman in Bath';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('hotel', 'new year''s eve', 'child abuse', 'based on novel or book', 'isolation', 'telepathy', 'delusion', 'halloween', 'snowstorm', 'colorado', 'seclusion', 'surrealism', 'alcoholism', 'premonition', 'psychic power', 'caretaker', 'loneliness', 'vision', 'domestic violence', 'postmodern', 'psychological thriller', 'writer', 'twins', 'labyrinth', 'alcoholic', 'blizzard', 'mutilation', 'bloody body of child', 'extrasensory perception', 'uxoricide', 'motherhood', 'filicide', 'snowed in', 'burial ground', 'hypothermia', 'haunted hotel', 'psychological disintegration', 'paranoid', 'afi', 'pediatrician', 'repetition', 'mother son relationship', 'malicious', 'supernatural power', 'anxious', 'new year', 'supernatural horror', 'ghost child', 'psychotronic film', 'dreary', 'writers-block', 'cabin fever', 'psychological horror', 'deal with the devil', 'nuclear family', 'avant garde', 'suspenseful', 'new year''s party', 'twin sisters', 'identical twins', 'antagonistic');

GO


-- ============================================
-- Movie: Saltburn
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Saltburn';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Emerald Fennell');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Emerald Fennell');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Barry Keoghan';
SET @Character = 'Oliver Quick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jacob Elordi';
SET @Character = 'Felix Catton';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Archie Madekwe';
SET @Character = 'Farleigh Start';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sadie Soverall';
SET @Character = 'Annabel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richie Cotterell';
SET @Character = 'Harry';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Millie Kent';
SET @Character = 'India';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Will Gibson';
SET @Character = 'Jake';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tasha Lim';
SET @Character = 'Camilla';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aleah Aberdeen';
SET @Character = 'Alicia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matt Carver';
SET @Character = 'Benjy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('suicide', 'karaoke', 'obsession', 'country house', 'maze', 'college', 'dark comedy', 'birthday party', 'university', 'bathtub', 'lust', 'gothic', 'mental illness', 'lgbt', 'mental health', 'bisexual man', 'eating disorder', 'woman director', 'oxford university', 'family estate', 'alcohol problems', 'self-harm', 'suicide investigation', '2000s', 'gay theme', 'boys'' love (bl)');

GO


-- ============================================
-- Movie: Lost in Translation
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Lost in Translation';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Sofia Coppola');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Sofia Coppola');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Scarlett Johansson';
SET @Character = 'Charlotte';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bill Murray';
SET @Character = 'Bob Harris';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Akiko Takeshita';
SET @Character = 'Ms. Kawasaki';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kazuyoshi Minamimagoe';
SET @Character = 'Press Agent';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kazuko Shibata';
SET @Character = 'Press Agent';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Take';
SET @Character = 'Press Agent';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ryuichiro Baba';
SET @Character = 'Concierge';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Akira Yamaguchi';
SET @Character = 'Bellboy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Catherine Lambert';
SET @Character = 'Jazz Singer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Fran√ßois du Bois';
SET @Character = 'Sausalito Piano';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('hotel room', 'adultery', 'japan', 'unsociability', 'upper class', 'pop star', 'age difference', 'photographer', 'commercial', 'karaoke', 'homesickness', 'culture clash', 'jet lag', 'midlife crisis', 'loneliness', 'tokyo', 'japan', 'older man younger woman relationship', 'unlikely friendship', 'aftercreditsstinger', 'woman director', 'loving');

GO


-- ============================================
-- Movie: Sing Sing
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Sing Sing';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Greg Kwedar');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('John H. Richardson', 'Brent Buell', 'Clint Bentley', 'Greg Kwedar', 'Clarence Maclin', 'John Divine G Whitfield');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Colman Domingo';
SET @Character = 'John Divine G Whitfield';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Clarence Maclin';
SET @Character = 'Clarence Maclin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sean San Jose';
SET @Character = 'Mike Mike';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Raci';
SET @Character = 'Brent Buell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Giraudy';
SET @Character = 'David Giraudy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Patrick Griffin';
SET @Character = 'Patrick Griffin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mosi Eagle';
SET @Character = 'Mosi Eagle';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Williams';
SET @Character = 'James Williams';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sean Dino Johnson';
SET @Character = 'Sean Johnson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);


-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('prison', 'based on novel or book', 'male friendship', 'based on true story', 'wrongful imprisonment', 'sing sing', 'african american', 'inspirational', 'theatre');

GO


-- ============================================
-- Movie: MaXXXine
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'MaXXXine';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Horror');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Ti West');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Ti West');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Charley Rowan McCain';
SET @Character = 'Maxine Miller';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Simon Prast';
SET @Character = 'Ernest Miller';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mia Goth';
SET @Character = 'Maxine Minx';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Deborah Geffner';
SET @Character = 'Elaine Casting';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daniel Lench';
SET @Character = 'Producer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Elizabeth Debicki';
SET @Character = 'Elizabeth Bender';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chloe Farnworth';
SET @Character = 'Amber James';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brad Swanick';
SET @Character = 'Frankie Love';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Uli Latukefu';
SET @Character = 'Shepard Turei';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Susan Pingleton';
SET @Character = 'Angel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('pornography', 'gore', 'sequel', 'murder', 'fame', 'slasher', 'hollywood', 'whodunit', 'los angeles', 'california', 'video store', 'horror filmmaking', 'stardom', 'murder mystery', '1980s', 'grim', 'film production', 'televangelist', 'film within a film', 'aspiring actress', 'pastiche', 'satanic panic', 'night stalker', 'father daughter estrangement', 'religious trauma', 'suspenseful', 'mystery', 'intense', 'excited', 'scathing');

GO


-- ============================================
-- Movie: Drive
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Drive';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Nicolas Winding Refn');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Hossein Amini', 'James Sallis');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ryan Gosling';
SET @Character = 'Driver';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Carey Mulligan';
SET @Character = 'Irene';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bryan Cranston';
SET @Character = 'Shannon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Albert Brooks';
SET @Character = 'Bernie Rose';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Oscar Isaac';
SET @Character = 'Standard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christina Hendricks';
SET @Character = 'Blanche';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ron Perlman';
SET @Character = 'Nino';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kaden Leos';
SET @Character = 'Benicio';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeff Wolfe';
SET @Character = 'Tan Suit';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Biberi';
SET @Character = 'Cook';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('robbery', 'car mechanic', 'stuntman', 'beaten to death', 'revenge', 'organized crime', 'neighbor', 'police chase', 'los angeles', 'california', 'brutality', 'jacket', 'scorpion', 'toothpick', 'getaway driver', 'crime lord', 'stunt driver', 'existentialism', 'detached', 'neo-noir', 'vindictive', 'hammer', 'bold');

GO


-- ============================================
-- Movie: Psycho
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Psycho';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Horror', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Alfred Hitchcock');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Joseph Stefano', 'Robert Bloch');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Anthony Perkins';
SET @Character = 'Norman Bates';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vera Miles';
SET @Character = 'Lila Crane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Gavin';
SET @Character = 'Sam Loomis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Janet Leigh';
SET @Character = 'Marion Crane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Martin Balsam';
SET @Character = 'Det. Milton Arbogast';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John McIntire';
SET @Character = 'Sheriff Al Chambers';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Simon Oakland';
SET @Character = 'Dr. Fred Richman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Frank Albertson';
SET @Character = 'Tom Cassidy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Patricia Hitchcock';
SET @Character = 'Caroline';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vaughn Taylor';
SET @Character = 'George Lowery';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('hotel', 'clerk', 'shower', 'arizona', 'motel', 'halloween', 'stolen money', 'taxidermy', 'money', 'secretary', 'psychological thriller', 'black and white', 'corpse', 'murderer', 'theft', 'mental illness', 'private detective', 'missing person', 'psycho', 'voyeurism', 'voyeur', 'oedipus complex', 'double identity', 'abusive mother', 'dual personality', 'proto-slasher', 'multiple personality disorder', 'mother son relationship', 'birds', 'anxious', 'dramatic', 'woman on the run', 'corruptibility', 'confused identities', 'human vulnerabilities', 'man with female alter ego');

GO


-- ============================================
-- Movie: Ponyo
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Ponyo';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Adventure', 'Comedy', 'Family', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Hayao Miyazaki');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Hayao Miyazaki');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tomoko Yamaguchi';
SET @Character = 'Risa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kazushige Nagashima';
SET @Character = 'K√¥ichi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Y√ªki Amami';
SET @Character = 'Granmamare';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'George Tokoro';
SET @Character = 'Fujimoto';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yuria Nara';
SET @Character = 'Ponyo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hiroki Doi';
SET @Character = 'S√¥suke';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rumi Hiiragi';
SET @Character = 'Fujin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Akiko Yano';
SET @Character = 'Ponyo no im√¥to-tachi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kazuko Yoshiyuki';
SET @Character = 'Toki';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tomoko Naraoka';
SET @Character = 'Yoshie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('princess', 'fish', 'cliff', 'mermaid', 'anime', 'lighthearted', 'adventure', 'whimsical');

GO


-- ============================================
-- Movie: There Will Be Blood
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'There Will Be Blood';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Paul Thomas Anderson');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Paul Thomas Anderson', 'Upton Sinclair');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Daniel Day-Lewis';
SET @Character = 'Daniel Plainview';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Martin Stringer';
SET @Character = 'Silver Assay Worker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matthew Braden Stringer';
SET @Character = 'Silver Assay Worker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jacob Stringer';
SET @Character = 'Silver Assay Worker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joseph Mussey';
SET @Character = 'Silver Assay Worker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Barry Del Sherman';
SET @Character = 'H.B. Ailman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harrison Taylor';
SET @Character = 'Baby HW';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stockton Taylor';
SET @Character = 'Baby HW';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul F. Tompkins';
SET @Character = 'Prescott';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dillon Freasier';
SET @Character = 'HW';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('california', 'petrol', 'sibling relationship', 'based on novel or book', 'capitalism', 'pastor', 'deaf-mute', 'greed', 'american dream', 'narcissism', 'fanatic', 'father', 'baptism', 'misanthrophy', 'money', 'oil', 'religion', 'impostor', 'church', 'alcoholic', 'oil industry', 'child abandonment', 'character study', 'zealot', 'bowling alley', 'sign languages', 'oil field', 'turn of the century', '19th century', 'adopted son', '1900s', 'personality change', 'pipeline', '20th century', '1890s');

GO


-- ============================================
-- Movie: Grave of the Fireflies
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Grave of the Fireflies';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Drama', 'War');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Isao Takahata');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Akiyuki Nosaka', 'Isao Takahata');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tsutomu Tatsumi';
SET @Character = 'Seita';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ayano Shiraishi';
SET @Character = 'Setsuko';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yoshiko Shinohara';
SET @Character = 'Mother';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Akemi Yamaguchi';
SET @Character = 'Aunt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'K√¥z√¥ Hashida';
SET @Character = 'Obayashi Chairman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Masayo Sakai';
SET @Character = 'Woman who takes care of Setsuko';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kazumi Nozaki';
SET @Character = 'Cousin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yoshio Matsuoka';
SET @Character = 'Gosaku';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Masahiro Kanetake';
SET @Character = 'Aunt''s house guest';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kiyoshi Yanagawa';
SET @Character = 'Patrolman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('sibling relationship', 'hunger', 'world war ii', 'wartime', 'shelter', 'adult animation', 'semi autobiographical', 'anti war', 'anime', 'grim', 'orphan siblings', 'children in wartime', 'tragic');

GO


-- ============================================
-- Movie: Weathering with You
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Weathering with You';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Drama', 'Fantasy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Makoto Shinkai');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Makoto Shinkai');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Kotaro Daigo';
SET @Character = 'Morishima Hodaka';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nana Mori';
SET @Character = 'Amano Hina';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tsubasa Honda';
SET @Character = 'Natsumi Suga';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sakura Kiryu';
SET @Character = 'Amano Nagi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sei Hiraizumi';
SET @Character = 'Detective Yasui';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Y√ªki Kaji';
SET @Character = 'Detective Takai';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sumi Shimamoto';
SET @Character = 'Mrs. Mamiya';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mei Kazuki';
SET @Character = 'Moka Suga';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ryohei Kimura';
SET @Character = 'Scout Man Kimura';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kana Hanazawa';
SET @Character = 'Kana';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('japan', 'magic', 'climate change', 'rain', 'surrealism', 'weather', 'weather manipulation', 'romance', 'slice of life', 'tokyo', 'japan', 'orphan', 'summer', 'shrine', 'flood', 'japanese mythology', 'anime', 'time skip', 'supernatural power', 'comforting');

GO


-- ============================================
-- Movie: Dead Poets Society
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Dead Poets Society';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Peter Weir');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Tom Schulman');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Robin Williams';
SET @Character = 'John Keating';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert Sean Leonard';
SET @Character = 'Neil Perry';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ethan Hawke';
SET @Character = 'Todd Anderson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Josh Charles';
SET @Character = 'Knox Overstreet';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gale Hansen';
SET @Character = 'Charlie Dalton';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dylan Kussman';
SET @Character = 'Richard Cameron';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Allelon Ruggiero';
SET @Character = 'Steven Meeks';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Waterston';
SET @Character = 'Gerard Pitts';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Norman Lloyd';
SET @Character = 'Mr. Nolan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kurtwood Smith';
SET @Character = 'Mr. Perry';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('individual', 'friendship', 'philosophy', 'poetry', 'literature', 'professor', 'based on true story', 'coming of age', 'teacher', 'school play', 'new england', 'vermont', 'schoolteacher', 'preparatory school', '1950s', 'teenager');

GO


-- ============================================
-- Movie: The Queen''s Gambit
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Queen''s Gambit';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Scott Frank', 'Allan Scott');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Anya Taylor-Joy';
SET @Character = 'Beth Harmon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chloe Pirrie';
SET @Character = 'Alice Harmon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bill Camp';
SET @Character = 'Mr. Shaibel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Marcin Dorocinski';
SET @Character = 'Vasily Borgov';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Marielle Heller';
SET @Character = 'Alma Wheatley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Thomas Brodie-Sangster';
SET @Character = 'Benny Watts';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Moses Ingram';
SET @Character = 'Jolene';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harry Melling';
SET @Character = 'Harry Beltik';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Isla Johnston';
SET @Character = 'Young Beth Harmon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Janina Elkin';
SET @Character = 'Borgov''s Wife';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

GO


-- ============================================
-- Movie: Whisper of the Heart
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Whisper of the Heart';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Drama', 'Family', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Yoshifumi Kond√¥');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Aoi Hiiragi', 'Hayao Miyazaki');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Yoko Honna';
SET @Character = 'Shizuku Tsukishima';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Issei Takahashi';
SET @Character = 'Seiji Amasawa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Takashi Tachibana';
SET @Character = 'Seiya Tsukishima';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shigeru Muroi';
SET @Character = 'Asako Tsukishima';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shigeru Tsuyuguchi';
SET @Character = 'The Baron';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Keiju Kobayashi';
SET @Character = 'Shiro Nishi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yorie Yamashita';
SET @Character = 'Shiho Tsukishima';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maiko Kayama';
SET @Character = 'Yuko Harada';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yoshimi Nakajima';
SET @Character = 'Sugimura';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Minami Takayama';
SET @Character = 'Kosaka-sensei';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('dreams', 'library', 'italy', 'violin', 'writing', 'education', 'love', 'train', 'based on manga', 'cartoon cat', 'high school student', 'nostalgic', 'violin maker', 'grade', 'shoujo', 'anime', 'inspirational', 'japanese junior high schooler', 'whimsical');

GO


-- ============================================
-- Movie: Suzume
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Suzume';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Action', 'Adventure', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Makoto Shinkai');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Makoto Shinkai');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Nanoka Hara';
SET @Character = 'Suzume Iwato';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hokuto Matsumura';
SET @Character = 'Souta Munakata';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eri Fukatsu';
SET @Character = 'Tamaki Iwato';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sh√¥ta Sometani';
SET @Character = 'Minoru Okabe';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sairi It√¥';
SET @Character = 'Rumi Ninomiya';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kotone Hanase';
SET @Character = 'Chika Amabe';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kana Hanazawa';
SET @Character = 'Tsubame Iwato';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ry√ªnosuke Kamiki';
SET @Character = 'Tomoya Serizawa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ann Yamane';
SET @Character = 'Daijin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Akari Miura';
SET @Character = 'Young Suzume';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('magic', 'door', 'natural disaster', 'calamity', 'travel', 'teenage girl', 'female protagonist', 'shrine', 'supernatural creature', 'enviromental', 'journey', 'anime', 'adventure');

GO


-- ============================================
-- Movie: Ruby Sparks
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Ruby Sparks';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Fantasy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Jonathan Dayton', 'Valerie Faris');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Zoe Kazan');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Paul Dano';
SET @Character = 'Calvin Weir-Fields';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zoe Kazan';
SET @Character = 'Ruby Sparks';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Messina';
SET @Character = 'Harry';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Annette Bening';
SET @Character = 'Gertrude';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Antonio Banderas';
SET @Character = 'Mort';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aasif Mandvi';
SET @Character = 'Cyrus Modi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steve Coogan';
SET @Character = 'Langdon Tharp';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Toni Trucks';
SET @Character = 'Susie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Deborah Ann Woll';
SET @Character = 'Lila';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Elliott Gould';
SET @Character = 'Dr. Rosenthal';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('dreams', 'imaginary friend', 'therapy', 'novelist', 'magic realism', 'nostalgic', 'woman director', 'grand');

GO


-- ============================================
-- Movie: Mean Girls
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Mean Girls';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Mark Waters');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Rosalind Wiseman', 'Tina Fey');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Lindsay Lohan';
SET @Character = 'Cady Heron';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rachel McAdams';
SET @Character = 'Regina George';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tina Fey';
SET @Character = 'Ms. Norbury';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tim Meadows';
SET @Character = 'Mr. Duvall';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amy Poehler';
SET @Character = 'Mrs. George';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ana Gasteyer';
SET @Character = 'Cady''s Mom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lacey Chabert';
SET @Character = 'Gretchen Wieners';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lizzy Caplan';
SET @Character = 'Janis Ian';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daniel Franzese';
SET @Character = 'Damian';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Neil Flynn';
SET @Character = 'Cady''s Dad';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('based on novel or book', 'illinois', 'female friendship', 'bullying', 'coming of age', 'prom', 'teenage girl', 'fish out of water', 'best friend', 'math teacher', 'biting', 'gossip', 'clique', 'former best friend', 'teen comedy', 'exploitation of friendship', 'public humiliation', 'high school rivalry', 'new girl at school', 'teenage life', 'manipulative friend', 'math genius', 'female bully', 'teenage friendship', 'teenager', 'antagonistic', 'cruel', 'derisive', 'mean spirited', 'mocking', 'sarcastic');

GO


-- ============================================
-- Movie: Insidious: The Red Door
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Insidious: The Red Door';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Horror', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Patrick Wilson');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Leigh Whannell', 'Scott Teems');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ty Simpkins';
SET @Character = 'Dalton Lambert';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Patrick Wilson';
SET @Character = 'Josh Lambert';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rose Byrne';
SET @Character = 'Renai Lambert';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sinclair Daniel';
SET @Character = 'Chris Winslow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hiam Abbass';
SET @Character = 'Professor Armagan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andrew Astor';
SET @Character = 'Foster Lambert';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Juliana Davies';
SET @Character = 'Kali Lambert';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steve Coulter';
SET @Character = 'Carl';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peter Dager';
SET @Character = 'Nick the Dick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Justin Sturgis';
SET @Character = 'Alec Anderson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('sequel', 'demon', 'franchise', 'insidious', 'malicious', 'supernatural horror', 'evil spirits', 'fifth part', 'sinister');

GO


-- ============================================
-- Movie: A Haunting in Venice
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'A Haunting in Venice';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Horror', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Kenneth Branagh');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Michael Green', 'Agatha Christie');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Kenneth Branagh';
SET @Character = 'Hercule Poirot';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dylan Corbett-Bader';
SET @Character = 'Baker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amir El-Masry';
SET @Character = 'Alessandro Longo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Riccardo Scamarcio';
SET @Character = 'Vitale Portfoglio';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Fernando Piloni';
SET @Character = 'Vincenzo Di Stefano';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lorenzo Acquaviva';
SET @Character = 'Grocer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tina Fey';
SET @Character = 'Ariadne Oliver';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Menkin';
SET @Character = 'Puppet Show MC';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Camille Cottin';
SET @Character = 'Olga Seminoff';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kelly Reilly';
SET @Character = 'Rowena Drake';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('based on novel or book', 'venice', 'italy', 'loss of loved one', 'detective', 'medium', 'grief', 'whodunit', 'investigator', 'guilt', 'novelist', 'post world war ii', 'murder investigation', 'ghost', 's√©ance', 'murder mystery', 'spiritism', 'halloween night', 'palazzo', 'retired detective');

GO


-- ============================================
-- Movie: Soul
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Soul';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Adventure', 'Comedy', 'Drama', 'Family', 'Fantasy', 'Music');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Pete Docter', 'Kemp Powers');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Pete Docter', 'Mike Jones', 'Kemp Powers');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jamie Foxx';
SET @Character = 'Joe';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tina Fey';
SET @Character = '22';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Graham Norton';
SET @Character = 'Moonwind';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rachel House';
SET @Character = 'Terry';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alice Braga';
SET @Character = 'Counselor Jerry';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Ayoade';
SET @Character = 'Counselor Jerry';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Phylicia Rashad';
SET @Character = 'Libba';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Donnell Rawlings';
SET @Character = 'Dez';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Questlove';
SET @Character = 'Curley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Angela Bassett';
SET @Character = 'Dorothea';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new york city', 'jazz', 'musician', 'cat', 'self-discovery', 'jazz singer or musician', 'teacher', 'aftercreditsstinger', 'duringcreditsstinger', 'life after death', 'thoughtful');

GO


-- ============================================
-- Movie: It Chapter Two
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'It Chapter Two';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Fantasy', 'Horror');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Andy Muschietti');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Stephen King', 'Gary Dauberman');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jessica Chastain';
SET @Character = 'Beverly Marsh';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James McAvoy';
SET @Character = 'Bill Denbrough';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bill Hader';
SET @Character = 'Richie Tozier';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Isaiah Mustafa';
SET @Character = 'Mike Hanlon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jay Ryan';
SET @Character = 'Ben Hanscom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Ransone';
SET @Character = 'Eddie Kaspbrak';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andy Bean';
SET @Character = 'Stanley Uris';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bill Skarsg√•rd';
SET @Character = 'Pennywise';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jaeden Martell';
SET @Character = 'Young Bill Denbrough';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wyatt Oleff';
SET @Character = 'Young Stanley Uris';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('based on novel or book', 'clown', 'carnival', 'sequel', 'remake', 'maine', 'creature', 'fear', 'lgbt', 'ancient evil', 'loss of a friend');

GO


-- ============================================
-- Movie: Ready Player One
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Ready Player One';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Steven Spielberg');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Zak Penn', 'Ernest Cline');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tye Sheridan';
SET @Character = 'Parzival / Wade';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Olivia Cooke';
SET @Character = 'Art3mis / Samantha';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ben Mendelsohn';
SET @Character = 'Sorrento';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lena Waithe';
SET @Character = 'Aech / Helen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'T.J. Miller';
SET @Character = 'I-R0k';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Simon Pegg';
SET @Character = 'Curator / Ogden Morrow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Rylance';
SET @Character = 'Anorak / Halliday';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Philip Zhao';
SET @Character = 'Sho';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Win Morisaki';
SET @Character = 'Daito';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hannah John-Kamen';
SET @Character = 'F''Nale Zandor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('future', 'based on novel or book', 'video game', 'virtual reality', 'dystopia', 'nostalgia', 'love', 'film in film', 'evil corporation', 'quest', '1980s', '2040s', 'based on young adult novel', 'columbus', 'ohio', 'vrmmo');

GO


-- ============================================
-- Movie: The Conjuring 2
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Conjuring 2';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Horror', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('James Wan');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Chad Hayes', 'Carey W. Hayes', 'James Wan', 'David Leslie Johnson-McGoldrick');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Patrick Wilson';
SET @Character = 'Ed Warren';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vera Farmiga';
SET @Character = 'Lorraine Warren';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Madison Wolfe';
SET @Character = 'Janet Hodgson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Frances O''Connor';
SET @Character = 'Peggy Hodgson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lauren Esposito';
SET @Character = 'Margaret Hodgson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Benjamin Haigh';
SET @Character = 'Billy Hodgson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Patrick McAuley';
SET @Character = 'Johnny Hodgson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Simon McBurney';
SET @Character = 'Maurice Grosse';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maria Doyle Kennedy';
SET @Character = 'Peggy Nottingham';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Simon Delaney';
SET @Character = 'Vic Nottingham';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('london', 'england', 'england', '1970s', 'spirit', 'single mother', 'demon', 'paranormal investigation', 'demonic possession', 'ghost', 'christmas', 'valak', 'the conjuring universe');

GO


-- ============================================
-- Movie: Annabelle
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Annabelle';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Horror', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('John R. Leonetti');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Gary Dauberman');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Annabelle Wallis';
SET @Character = 'Mia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ward Horton';
SET @Character = 'John';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tony Amendola';
SET @Character = 'Father Perez';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alfre Woodard';
SET @Character = 'Evelyn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kerry O''Malley';
SET @Character = 'Sharon Higgins';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brian Howe';
SET @Character = 'Pete Higgins';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eric Ladin';
SET @Character = 'Detective Clarkin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ivar Brogger';
SET @Character = 'Dr. Burgher';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Geoff Wehner';
SET @Character = 'Neighbor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gabriel Bateman';
SET @Character = 'Little Boy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('prequel', 'evil doll', 'killer doll', 'spirit', 'demon', 'spin off', 'doll', 'demonic possession', 'ghost', 'killer toys', 'toy comes to life', 'the conjuring universe');

GO


-- ============================================
-- Movie: Titanic
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Titanic';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('James Cameron');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('James Cameron');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Leonardo DiCaprio';
SET @Character = 'Jack Dawson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kate Winslet';
SET @Character = 'Rose Dewitt Bukater';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Billy Zane';
SET @Character = 'Cal Hockley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kathy Bates';
SET @Character = 'Molly Brown';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Frances Fisher';
SET @Character = 'Ruth Dewitt Bukater';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gloria Stuart';
SET @Character = 'Old Rose';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bill Paxton';
SET @Character = 'Brock Lovett';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bernard Hill';
SET @Character = 'Captain Smith';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Warner';
SET @Character = 'Spicer Lovejoy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Victor Garber';
SET @Character = 'Thomas Andrews';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('epic', 'ship', 'drowning', 'panic', 'shipwreck', 'evacuation', 'iceberg', 'titanic', 'forbidden love', 'ocean liner', 'based on true story', 'rich woman poor man', 'love', 'tragedy', 'tragic love', 'disaster', 'historical fiction', 'class differences', 'love affair', 'historical event', 'lifeboat', 'star crossed lovers', 'sinking ship', 'steerage', 'rich snob', 'disaster movie', '1910s', 'sunken ship', 'romantic');

GO


-- ============================================
-- Movie: Borat
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Borat';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Larry Charles');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Sacha Baron Cohen', 'Anthony Hines', 'Peter Baynham', 'Dan Mazer', 'Todd Phillips');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Sacha Baron Cohen';
SET @Character = 'Borat';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ken Davitian';
SET @Character = 'Azamat';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Luenell';
SET @Character = 'Luenell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chester';
SET @Character = 'Bear';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Charlie';
SET @Character = 'Bear';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ilham Aliyev';
SET @Character = 'Self';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Pamela Anderson';
SET @Character = 'Self - Autograph Signing';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bob Barr';
SET @Character = 'Self - Former Georgia Congressman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joseph Behar';
SET @Character = 'Self - Bed-and-Breakfast Owner';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Carole De Saram';
SET @Character = 'Self - Feminist';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('journalist', 'california', 'prostitute', 'rodeo', 'kazakhstan', 'demeanor course', 'chicken', 'driving school', 'satire', 'mockumentary', 'social satire', 'antisemitism', 'bear', 'reporter', 'aftercreditsstinger', 'duringcreditsstinger', 'amused');

GO


-- ============================================
-- Movie: Borat Subsequent Moviefilm
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Borat Subsequent Moviefilm';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Jason Woliner');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Sacha Baron Cohen', 'Anthony Hines', 'Dan Swimer', 'Peter Baynham', 'Erica Rivinoja', 'Dan Mazer', 'Jena Friedman', 'Lee Kern', 'Nina Pedrad');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Sacha Baron Cohen';
SET @Character = 'Borat Sagdiyev';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maria Bakalova';
SET @Character = 'Tutar Sagdiyev';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Hanks';
SET @Character = 'Tom Hanks';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dani Popescu';
SET @Character = 'Premier Nazarbayev';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Manuel Vieru';
SET @Character = 'Dr. Yamak';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Miroslav Tolj';
SET @Character = 'Nursultan Tulyakbay';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alin Popa';
SET @Character = 'HueyLewis / Jeffrey Epstein Sagdiyev';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ion Gheorghe';
SET @Character = 'Bilak Sagdiyev';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nicolae Gheorghe';
SET @Character = 'Biram Sagdiyev';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Marcela Codrea';
SET @Character = 'Kuczek Villager';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('presidential election', 'patriotism', 'mockery', 'kazakhstan', 'satire', 'hidden camera', 'sequel', 'mockumentary', 'prank', 'social satire', 'disguise', 'satirical', 'covid-19', 'hilarious', 'admiring', 'amused', 'excited', 'exhilarated');

GO


-- ============================================
-- Movie: Django Unchained
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Django Unchained';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Western');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Quentin Tarantino');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Quentin Tarantino');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jamie Foxx';
SET @Character = 'Django';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christoph Waltz';
SET @Character = 'Dr. King Schultz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Leonardo DiCaprio';
SET @Character = 'Calvin Candie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kerry Washington';
SET @Character = 'Broomhilda von Shaft';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samuel L. Jackson';
SET @Character = 'Stephen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Walton Goggins';
SET @Character = 'Billy Crash';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dennis Christopher';
SET @Character = 'Leonide Moguy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Remar';
SET @Character = 'Butch Pooch / Ace Speck';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Steen';
SET @Character = 'Mr. Stonesipher';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dana Gourrier';
SET @Character = 'Cora';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('rescue', 'friendship', 'bounty hunter', 'texas', 'slavery', 'plantation', 'rivalry', 'revenge', 'shootout', 'racism', 'kindness', 'dentist', 'django', 'slave trade', 'aftercreditsstinger', 'black slave', 'agreement', '19th century', 'chattanooga', 'german', 'cotton plantation', 'plantation owner', 'old west', 'western', '1850s', 'mississippi');

GO


-- ============================================
-- Movie: Jackie Brown
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Jackie Brown';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Quentin Tarantino');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Quentin Tarantino', 'Elmore Leonard');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Pam Grier';
SET @Character = 'Jackie Brown';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samuel L. Jackson';
SET @Character = 'Ordell Robbie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert Forster';
SET @Character = 'Max Cherry';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bridget Fonda';
SET @Character = 'Melanie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Keaton';
SET @Character = 'Ray Nicolette';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert De Niro';
SET @Character = 'Louis Gara';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Bowen';
SET @Character = 'Mark Dargus';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Tucker';
SET @Character = 'Beaumont Livingston';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'LisaGay Hamilton';
SET @Character = 'Sheronda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Lister Jr.';
SET @Character = 'Winston';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('airport', 'based on novel or book', 'police', 'arms deal', 'stewardess', 'heist', 'money', 'los angeles', 'california', 'drugs', 'ex-con', 'flight attendant', 'neo-noir');

GO


-- ============================================
-- Movie: The Hateful Eight
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Hateful Eight';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Mystery', 'Thriller', 'Western');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Quentin Tarantino');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Quentin Tarantino');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Samuel L. Jackson';
SET @Character = 'Major Marquis Warren';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kurt Russell';
SET @Character = 'John Ruth';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jennifer Jason Leigh';
SET @Character = 'Daisy Domergue';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Walton Goggins';
SET @Character = 'Sheriff Chris Mannix';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Demi√°n Bichir';
SET @Character = 'Bob';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tim Roth';
SET @Character = 'Oswaldo Mobray';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Madsen';
SET @Character = 'Joe Gage';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bruce Dern';
SET @Character = 'General Sandy Smithers';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Parks';
SET @Character = 'O.B.';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dana Gourrier';
SET @Character = 'Minnie Mink';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('bounty hunter', 'wyoming', 'usa', 'narration', 'mountain', 'hangman', 'whodunit', 'stagecoach', 'blizzard', 'post civil war', '19th century', 'grim', 'dramatic', 'male rape', 'intense');

GO


-- ============================================
-- Movie: Argylle
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Argylle';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Comedy', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Matthew Vaughn');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jason Fuchs');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Henry Cavill';
SET @Character = 'Argylle';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daniel Singh';
SET @Character = 'Armed Guard #1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dua Lipa';
SET @Character = 'Legrange';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ariana DeBose';
SET @Character = 'Keira';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard E. Grant';
SET @Character = 'Director Fowler';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Cena';
SET @Character = 'Wyatt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bryce Dallas Howard';
SET @Character = 'Elly Conway';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jason Fuchs';
SET @Character = 'Moderator';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom√°s Paredes';
SET @Character = 'Carlos';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bobby Holland Hanton';
SET @Character = 'Enforcer #1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('cat', 'spy', 'secret agent', 'writer''s block', 'author', 'novelist', 'aftercreditsstinger', 'secrets', 'absurd', 'clich√©');

GO


-- ============================================
-- Movie: Unbreakable
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Unbreakable';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Mystery', 'Sci-Fi', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('M. Night Shyamalan');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('M. Night Shyamalan');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Bruce Willis';
SET @Character = 'David Dunn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samuel L. Jackson';
SET @Character = 'Elijah Price';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robin Wright';
SET @Character = 'Audrey Dunn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Spencer Treat Clark';
SET @Character = 'Joseph Dunn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Charlayne Woodard';
SET @Character = 'Elijah''s Mother';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eamonn Walker';
SET @Character = 'Dr. Mathison';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Leslie Stefanson';
SET @Character = 'Kelly';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Johnny Hiram Jamison';
SET @Character = 'Elijah Age 13';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michaelia Carroll';
SET @Character = 'Babysitter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bostin Christopher';
SET @Character = 'Comic Book Clerk';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('philadelphia', 'pennsylvania', 'parent child relationship', 'marriage crisis', 'superhero', 'train accident', 'invulnerability', 'biting', 'super power', 'disability', 'shocking', 'angry', 'hostile', 'father son relationship', 'frightened');

GO


-- ============================================
-- Movie: Glass
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Glass';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Horror', 'Sci-Fi', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('M. Night Shyamalan');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('M. Night Shyamalan');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'James McAvoy';
SET @Character = 'Patricia / Dennis / Hedwig / The Beast / Barry / Heinrich / Jade / Ian / Mary Reynolds / Norma / Jalin / Kat / B.T. / Kevin Wendell Crumb / Mr. Pritchard / Felida / Luke / Goddard / Samuel / Polly';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bruce Willis';
SET @Character = 'David Dunn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samuel L. Jackson';
SET @Character = 'Elijah Price';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anya Taylor-Joy';
SET @Character = 'Casey Cooke';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sarah Paulson';
SET @Character = 'Dr. Ellie Staple';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Spencer Treat Clark';
SET @Character = 'Joseph Dunn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Charlayne Woodard';
SET @Character = 'Mrs. Price';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Luke Kirby';
SET @Character = 'Pierce';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adam David Thompson';
SET @Character = 'Daryl';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'M. Night Shyamalan';
SET @Character = 'Jai, Security Guard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('philadelphia', 'pennsylvania', 'superhero', 'villain', 'sequel', 'psychiatric hospital', 'comic book shop', 'super power', 'mental illness', 'macabre', 'multiple personality', 'mysterious', 'dissociative identity disorder', 'surveillance specialist', 'ominous');

GO


-- ============================================
-- Movie: Eyes Wide Shut
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Eyes Wide Shut';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Stanley Kubrick');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Stanley Kubrick', 'Frederic Raphael', 'Arthur Schnitzler');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tom Cruise';
SET @Character = 'Dr. William Harford';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nicole Kidman';
SET @Character = 'Alice Harford';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Madison Eginton';
SET @Character = 'Helena Harford';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jackie Sawiris';
SET @Character = 'Roz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sydney Pollack';
SET @Character = 'Victor Ziegler';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Leslie Lowe';
SET @Character = 'Illona';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peter Hans Benson';
SET @Character = 'Bandleader';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Todd Field';
SET @Character = 'Nick Nightingale';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Doven';
SET @Character = 'Ziegler''s Secretary';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sky du Mont';
SET @Character = 'Sandor Szavost';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new york city', 'prostitute', 'based on novel or book', 'sexual obsession', 'sacrifice', 'christmas party', 'eroticism', 'orgy', 'masked ball', 'marriage', 'secret society', 'cult', 'marijuana', 'conspiracy', 'consumerism', 'mansion', 'doctor', 'lust', 'drugs', 'disguise', 'illegal prostitution', 'sexual desire', 'ego', 'bribery', 'macabre', 'voyeurism', 'paranoid', 'male egos', 'sex party', 'marital crisis', 'relationships', 'costume shop', 'hooker', 'grand', 'provocative', 'absurd', 'dramatic', 'suspenseful', 'critical', 'tense', 'romantic', 'audacious', 'bold');

GO


-- ============================================
-- Movie: Top Gun
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Top Gun';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Tony Scott');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jim Cash', 'Jack Epps Jr.', 'Ehud Yonay');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tom Cruise';
SET @Character = 'Maverick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kelly McGillis';
SET @Character = 'Charlie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Val Kilmer';
SET @Character = 'Ice';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anthony Edwards';
SET @Character = 'Goose';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Skerritt';
SET @Character = 'Viper';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Ironside';
SET @Character = 'Jester';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Stockwell';
SET @Character = 'Cougar';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Barry Tubb';
SET @Character = 'Wolfman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rick Rossovich';
SET @Character = 'Slider';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tim Robbins';
SET @Character = 'Merlin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('dying and death', 'secret love', 'lovesickness', 'airplane', 'loss of loved one', 'self-discovery', 'hostility', 'fighter pilot', 'pilot', 'training camp', 'battle assignment', 'u.s. navy', 'cowardliness', 'pilot school', 'based on magazine', 'newspaper or article', 'inspirational', 'admiring', 'bold', 'celebratory', 'commanding', 'exuberant', 'melodramatic', 'gay interest');

GO


-- ============================================
-- Movie: Edge of Tomorrow
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Edge of Tomorrow';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Doug Liman');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Christopher McQuarrie', 'Jez Butterworth', 'John-Henry Butterworth', 'Hiroshi Sakurazaka');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tom Cruise';
SET @Character = 'Cage';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emily Blunt';
SET @Character = 'Rita';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brendan Gleeson';
SET @Character = 'General Brigham';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bill Paxton';
SET @Character = 'Master Sergeant Farell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jonas Armstrong';
SET @Character = 'Skinner';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tony Way';
SET @Character = 'Kimmel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kick Gurry';
SET @Character = 'Griff';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Franz Drameh';
SET @Character = 'Ford';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dragomir Mrsic';
SET @Character = 'Kuntz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Charlotte Riley';
SET @Character = 'Nance';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('deja vu', 'based on novel or book', 'restart', 'military officer', 'dystopia', 'training', 'alien', 'time loop', 'soldier', 'alien invasion', 'war hero', 'exoskeleton', 'frantic', 'philosophical', 'soldiers', 'war', 'tense', 'sentimental', 'romantic', 'audacious', '2020s');

GO


-- ============================================
-- Movie: Tropic Thunder
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Tropic Thunder';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Comedy', 'War');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Ben Stiller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Justin Theroux', 'Ben Stiller', 'Etan Cohen');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jeff Kahn';
SET @Character = 'Snooty Waiter - Fatties Trailer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert Downey Jr.';
SET @Character = 'Kirk Lazarus - Hot LZ';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anthony Ruivivar';
SET @Character = 'Platoon Sergeant Shot in Head - Hot LZ';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jack Black';
SET @Character = 'Jeff Portnoy - Hot LZ';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jay Baruchel';
SET @Character = 'Kevin Sandusky - Hot LZ';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brandon T. Jackson';
SET @Character = 'Alpa Chino - Hot LZ';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ben Stiller';
SET @Character = 'Tugg Speedman - Hot LZ';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eric Winzenried';
SET @Character = 'Chopper Pilot - Hot LZ';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steve Coogan';
SET @Character = 'Damien Cockburn - Vietnam Crew';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Valerie Azlynn';
SET @Character = 'Damien''s Assistant - Vietnam Crew';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('vietnam', 'movie business', 'satire', 'parody', 'jungle', 'movie star', 'southeast asia', 'land mine', 'shackles', 'taunting', 'duringcreditsstinger', 'blackface', 'method acting', 'satirical', 'playful', 'provocative', 'critical', 'hilarious', 'amused', 'audacious', 'bold', 'exuberant', 'inflammatory', 'sarcastic', 'sardonic');

GO


-- ============================================
-- Movie: Zoolander
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Zoolander';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Ben Stiller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Drake Sather', 'Ben Stiller', 'John Hamburg');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ben Stiller';
SET @Character = 'Derek Zoolander';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Owen Wilson';
SET @Character = 'Hansel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christine Taylor';
SET @Character = 'Matilda Jeffries';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Will Ferrell';
SET @Character = 'Mugatu';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Milla Jovovich';
SET @Character = 'Katinka';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jerry Stiller';
SET @Character = 'Maury Ballstein';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Duchovny';
SET @Character = 'J.P. Prewitt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jon Voight';
SET @Character = 'Larry Zoolander';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Judah Friedlander';
SET @Character = 'Scrappy Zoolander';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nathan Lee Graham';
SET @Character = 'Todd';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('male model', 'time magazine', 'fashion show', 'fictional awards show', 'coal mine', 'modeling', 'abraham lincoln', 'apathetic');

GO


-- ============================================
-- Movie: Meet the Parents
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Meet the Parents';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Jay Roach');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Greg Glienna', 'Mary Ruth Clarke', 'Jim Herzfeld', 'John Hamburg');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Robert De Niro';
SET @Character = 'Jack Byrnes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ben Stiller';
SET @Character = 'Greg Focker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Teri Polo';
SET @Character = 'Pam Byrnes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Blythe Danner';
SET @Character = 'Dina Byrnes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nicole DeHuff';
SET @Character = 'Debbie Byrnes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jon Abrahams';
SET @Character = 'Denny Byrnes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Owen Wilson';
SET @Character = 'Kevin Rawley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Rebhorn';
SET @Character = 'Dr. Larry Banks';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom McCarthy';
SET @Character = 'Bob Banks';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Phyllis George';
SET @Character = 'Linda Banks';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('daughter', 'central intelligence agency (cia)', 'airplane', 'airport', 'nurse', 'cat', 'orderly', 'father-in-law', 'epistaxis', 'lost baggage', 'urn', 'pavilion', 'volleyball', 'hospital', 'wedding', 'amused');

GO


-- ============================================
-- Movie: Meet the Fockers
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Meet the Fockers';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Jay Roach');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jim Herzfeld', 'Marc Hyman', 'John Hamburg', 'Greg Glienna', 'Mary Ruth Clarke');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Robert De Niro';
SET @Character = 'Jack Byrnes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ben Stiller';
SET @Character = 'Greg Focker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dustin Hoffman';
SET @Character = 'Bernie Focker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Barbra Streisand';
SET @Character = 'Roz Focker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Blythe Danner';
SET @Character = 'Dina Byrnes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Teri Polo';
SET @Character = 'Pam Byrnes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Owen Wilson';
SET @Character = 'Kevin Rawley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Spencer Pickren';
SET @Character = 'Little Jack';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bradley Pickren';
SET @Character = 'Little Jack';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alanna Ubach';
SET @Character = 'Isabel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('florida', 'central intelligence agency (cia)', 'nurse', 'parent child relationship', 'anti-authoritarian upbringing', 'parents-in-law', 'orderly', 'just married', 'sex therapy', 'bad father-in-law', 'family', 'illegitimate son', 'meddling father');

GO


-- ============================================
-- Movie: Zoolander 2
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Zoolander 2';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Comedy', 'Mystery', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Ben Stiller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Justin Theroux', 'Ben Stiller', 'Nicholas Stoller', 'John Hamburg', 'Drake Sather');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Justin Bieber';
SET @Character = 'Justin Bieber';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jon Daly';
SET @Character = 'Agent Filippo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Pen√©lope Cruz';
SET @Character = 'Valentina Valencia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ben Stiller';
SET @Character = 'Derek';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Katie Couric';
SET @Character = 'Katie Couric';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amy Stiller';
SET @Character = 'Mom Tourist';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Charlotte Townsend';
SET @Character = 'Girl Tourist';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christine Taylor';
SET @Character = 'Matilda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jim Lehrer';
SET @Character = 'Jim Lehrer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Owen Wilson';
SET @Character = 'Hansel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('fashion designer', 'sequel', 'fashion', 'male model', 'fashion show', 'modeling', 'fashion model', 'fashionista', 'runway model', 'ridiculous');

GO


-- ============================================
-- Movie: Little Fockers
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Little Fockers';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Paul Weitz');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Greg Glienna', 'Mary Ruth Clarke', 'John Hamburg', 'Larry Stuckey');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Robert De Niro';
SET @Character = 'Jack Byrnes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ben Stiller';
SET @Character = 'Greg Focker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Owen Wilson';
SET @Character = 'Kevin Rawley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dustin Hoffman';
SET @Character = 'Bernie Focker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Barbra Streisand';
SET @Character = 'Roz Focker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Blythe Danner';
SET @Character = 'Dina Byrnes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Teri Polo';
SET @Character = 'Pam Focker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jessica Alba';
SET @Character = 'Andi Garcia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Laura Dern';
SET @Character = 'Prudence';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kevin Hart';
SET @Character = 'Nurse Louis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('nurse', 'cat', 'father-in-law', 'vomit', 'viagra', 'overbearing father', 'duringcreditsstinger');

GO


-- ============================================
-- Movie: The Heartbreak Kid
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Heartbreak Kid';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Bobby Farrelly', 'Peter Farrelly');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Scot Armstrong', 'Leslie Dixon', 'Bobby Farrelly', 'Peter Farrelly', 'Kevin Barnett', 'Bruce Jay Friedman', 'Neil Simon');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ben Stiller';
SET @Character = 'Eddie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Malin Akerman';
SET @Character = 'Lila';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michelle Monaghan';
SET @Character = 'Miranda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jerry Stiller';
SET @Character = 'Doc';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rob Corddry';
SET @Character = 'Mac';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Carlos Mencia';
SET @Character = 'Tito';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scott Wilson';
SET @Character = 'Boo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Polly Holliday';
SET @Character = 'Beryl';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Danny McBride';
SET @Character = 'Martin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Roy Jenkins';
SET @Character = 'Buzz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('dance', 'based on novel or book', 'date', 'flirt', 'honeymoon', 'remake', 'dream girl', 'wedding');

GO


-- ============================================
-- Movie: Vice
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Vice';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Biography', 'Comedy', 'Drama', 'History');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Adam McKay');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Adam McKay');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Christian Bale';
SET @Character = 'Dick Cheney';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amy Adams';
SET @Character = 'Lynne Cheney';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steve Carell';
SET @Character = 'Donald Rumsfeld';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sam Rockwell';
SET @Character = 'George W. Bush';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alison Pill';
SET @Character = 'Mary Cheney';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eddie Marsan';
SET @Character = 'Paul Wolfowitz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Justin Kirk';
SET @Character = 'Scooter Libby';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'LisaGay Hamilton';
SET @Character = 'Condoleezza Rice';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jesse Plemons';
SET @Character = 'Kurt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bill Camp';
SET @Character = 'Gerald Ford';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('washington dc', 'usa', 'the white house', 'politics', 'war on terror', 'biography', 'iraq war', '9/11', 'vice president', 'usa politics');

GO


-- ============================================
-- Movie: Knocked Up
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Knocked Up';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Judd Apatow');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Judd Apatow');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Seth Rogen';
SET @Character = 'Ben Stone';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Katherine Heigl';
SET @Character = 'Alison Scott';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Rudd';
SET @Character = 'Pete';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Leslie Mann';
SET @Character = 'Debbie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jason Segel';
SET @Character = 'Jason';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jay Baruchel';
SET @Character = 'Jay';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jonah Hill';
SET @Character = 'Jonah';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Martin Starr';
SET @Character = 'Martin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Charlyne Yi';
SET @Character = 'Jodi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Iris Apatow';
SET @Character = 'Charlotte';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('alcohol', 'pregnancy', 'bed', 'one-night stand', 'condom', 'paternity', 'drug use', 'beard', 'unprotected sex', 'duringcreditsstinger', 'joyous', 'comforting');

GO


-- ============================================
-- Movie: Get Smart
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Get Smart';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Comedy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Peter Segal');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Tom J. Astle', 'Matt Ember', 'Mel Brooks', 'Buck Henry');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Steve Carell';
SET @Character = 'Maxwell Smart';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anne Hathaway';
SET @Character = 'Agent 99';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dwayne Johnson';
SET @Character = 'Agent 23';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alan Arkin';
SET @Character = 'The Chief';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Terence Stamp';
SET @Character = 'Siegfried';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Terry Crews';
SET @Character = 'Agent 91';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Koechner';
SET @Character = 'Larabee';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Caan';
SET @Character = 'The President';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bill Murray';
SET @Character = 'Agent 13';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Patrick Warburton';
SET @Character = 'Hymie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('dancing', 'mission', 'usa president', 'washington dc', 'usa', 'airplane', 'undercover agent', 'spy', 'sarcasm', 'bakery', 'los angeles', 'california', 'terrorism', 'secret service', 'government agent', 'weight loss', 'secret headquarters', 'world domination', 'moscow', 'russia', 'hand to hand combat', 'field agent', 'ineptitude', 'vice president', 'criminal organization', 'homeland security', 'spycraft', 'based on tv series', 'smolensk');

GO


-- ============================================
-- Movie: Foxcatcher
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Foxcatcher';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Biography', 'Drama', 'History', 'Sport');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Bennett Miller');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('E. Max Frye', 'Dan Futterman');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Steve Carell';
SET @Character = 'John du Pont';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Channing Tatum';
SET @Character = 'Mark Schultz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Ruffalo';
SET @Character = 'David Schultz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sienna Miller';
SET @Character = 'Nancy Schultz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vanessa Redgrave';
SET @Character = 'Jean du Pont';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anthony Michael Hall';
SET @Character = 'Jack';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Guy Boyd';
SET @Character = 'Henry Beck';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brett Rice';
SET @Character = 'Fred Cole';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jackson Frazer';
SET @Character = 'Alexander Schultz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samara Lee';
SET @Character = 'Danielle Schultz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('sports', 'wrestling', 'biography', 'based on true story', 'ex-boyfriend ex-girlfriend relationship');

GO


-- ============================================
-- Movie: This Is the End
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'This Is the End';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Evan Goldberg', 'Seth Rogen');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Seth Rogen', 'Evan Goldberg', 'Jason Stone');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'James Franco';
SET @Character = 'James Franco';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jonah Hill';
SET @Character = 'Jonah Hill';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Seth Rogen';
SET @Character = 'Seth Rogen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jay Baruchel';
SET @Character = 'Jay Baruchel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Danny McBride';
SET @Character = 'Danny McBride';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Craig Robinson';
SET @Character = 'Craig Robinson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Cera';
SET @Character = 'Michael Cera';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emma Watson';
SET @Character = 'Emma Watson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mindy Kaling';
SET @Character = 'Mindy Kaling';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Krumholtz';
SET @Character = 'David Krumholtz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('friendship', 'monster', 'panic', 'painting', 'exorcism', 'dark comedy', 'possession', 'satire', 'celebrity', 'friends', 'end of the world', 'house party', 'apocalypse', 'hollywood', 'creature', 'drugs', 'demon', 'self-referential', 'macabre', 'end', 'disturbed', 'frantic', 'claustrophobic', 'other worldly', 'mischievous', 'dreary', 'biblical', 'dramatic', 'suspenseful', 'amused', 'defiant', 'exuberant');

GO


-- ============================================
-- Movie: This Is 40
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'This Is 40';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Judd Apatow');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Judd Apatow');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Paul Rudd';
SET @Character = 'Pete';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Leslie Mann';
SET @Character = 'Debbie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maude Apatow';
SET @Character = 'Sadie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Iris Apatow';
SET @Character = 'Charlotte';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jason Segel';
SET @Character = 'Jason';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Annie Mumolo';
SET @Character = 'Barb';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert Smigel';
SET @Character = 'Barry';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Megan Fox';
SET @Character = 'Desi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Charlyne Yi';
SET @Character = 'Jodi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hugh Fink';
SET @Character = 'Male Boutique Customer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('husband wife relationship', 'family relationships', 'love', 'parenting', 'parents', 'financial problem', 'duringcreditsstinger', 'dubious');

GO


-- ============================================
-- Movie: Cha Cha Real Smooth
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Cha Cha Real Smooth';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Cooper Raiff');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Cooper Raiff');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Cooper Raiff';
SET @Character = 'Andrew';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dakota Johnson';
SET @Character = 'Domino';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Evan Assante';
SET @Character = 'David';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vanessa Burghardt';
SET @Character = 'Lola';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Leslie Mann';
SET @Character = 'Andrew''s Mom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brad Garrett';
SET @Character = 'Stepdad Greg';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ra√∫l Castillo';
SET @Character = 'Joseph';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Colton Osorio';
SET @Character = 'Rodrigo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amara Pedroso';
SET @Character = 'Maya';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Odeya Rush';
SET @Character = 'Macy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new jersey', 'autism', 'bar mitzvah', 'late coming of age', 'mother son relationship', 'brother brother relationship');

GO


-- ============================================
-- Movie: Definitely, Maybe
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Definitely, Maybe';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Adam Brooks');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Adam Brooks');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ryan Reynolds';
SET @Character = 'Will Hayes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'An Nguyen';
SET @Character = 'Ad Exec';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matthew Mason';
SET @Character = 'Headphone Guy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rick Derby';
SET @Character = 'Visitor from Planet Ordon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sakina Jaffrey';
SET @Character = 'School Mom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bob Wiltfong';
SET @Character = 'School Dad';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ryder Chasin';
SET @Character = 'Boy with Book';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Fiona Lane';
SET @Character = 'Angry Girl';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dana Eskelson';
SET @Character = 'Angry Girl''s Mom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Blake Benitez';
SET @Character = 'School Kid';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('love of one''s life', 'parent child relationship', 'election campaign', 'politics', 'narration', 'marriage', 'make a match', 'sex education', 'romance', 'best friend', 'falling in love', 'precocious child', 'dating woes', 'love problems', 'past relationship', 'young daughter', 'past love', 'father daughter relationship', 'relationships', 'dating history', 'impending divorce', 'political ambition');

GO


-- ============================================
-- Movie: Jersey Girl
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Jersey Girl';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Kevin Smith');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Kevin Smith');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Betty Aberlin';
SET @Character = 'Teacher';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matt McFarland';
SET @Character = 'Boy #1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sarah Stafford';
SET @Character = 'Girl #1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paulie Litt';
SET @Character = 'Bryan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christian Fan';
SET @Character = 'Boy #3';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Victor Chavez';
SET @Character = 'Boy #4';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'William Mace';
SET @Character = 'Boy #5';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Raquel Castro';
SET @Character = 'Gertie Trinke';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ben Affleck';
SET @Character = 'Ollie Trinke';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jennifer Schwalbach Smith';
SET @Character = 'Susan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('daughter', 'loss of loved one', 'yuppie');

GO


-- ============================================
-- Movie: Coraline
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Coraline';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Drama', 'Family', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Henry Selick');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Henry Selick', 'Neil Gaiman');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Dakota Fanning';
SET @Character = 'Coraline Jones';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Teri Hatcher';
SET @Character = 'Mel Jones / Other Mother / Beldam';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jennifer Saunders';
SET @Character = 'Miss April Spink / Other Spink';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dawn French';
SET @Character = 'Miss Miriam Forcible / Other Forcible';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Keith David';
SET @Character = 'The Cat';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Hodgman';
SET @Character = 'Charlie Jones / Other Father';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert Bailey Jr.';
SET @Character = 'Wyborne ''Wybie'' Lovat';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ian McShane';
SET @Character = 'Mr. Sergei Alexander Bobinsky / Other Bobinsky';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aankha Neal';
SET @Character = 'Sweet Ghost Girl';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'George Selick';
SET @Character = 'Ghost Boy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('friendship', 'dreams', 'based on novel or book', 'villain', 'eye', 'stuffed animal', 'stop motion', 'parallel world', 'button', 'new home', 'secret door', 'female villain', 'aftercreditsstinger', 'duringcreditsstinger', 'horror for children', 'talking cat', 'somber', 'parallel universe', 'neil gaiman', 'coraline', 'callous', 'ghoulish', 'gloomy', 'coraline y la puerta');

GO


-- ============================================
-- Movie: Fantastic Mr. Fox
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Fantastic Mr. Fox';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Adventure', 'Comedy', 'Crime', 'Drama', 'Family');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Wes Anderson');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Roald Dahl', 'Wes Anderson', 'Noah Baumbach');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'George Clooney';
SET @Character = 'Mr. Fox';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Meryl Streep';
SET @Character = 'Mrs. Fox';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jason Schwartzman';
SET @Character = 'Ash';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bill Murray';
SET @Character = 'Badger';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wallace Wolodarsky';
SET @Character = 'Kylie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eric Chase Anderson';
SET @Character = 'Kristofferson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Gambon';
SET @Character = 'Franklin Bean';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Willem Dafoe';
SET @Character = 'Rat';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Owen Wilson';
SET @Character = 'Coach Skip';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jarvis Cocker';
SET @Character = 'Petey';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('based on novel or book', 'tree', 'peasant', 'fox', 'affectation', 'cider', 'tale', 'farm life', 'anthropomorphism', 'revenge', 'stop motion', 'curious', 'candid', 'philosophical', 'reflective', 'inspirational', 'dramatic', 'witty', 'intense', 'admiring', 'adoring', 'ambiguous', 'euphoric', 'optimistic');

GO


-- ============================================
-- Movie: Blade Runner 2049
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Blade Runner 2049';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Drama', 'Mystery', 'Sci-Fi', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Denis Villeneuve');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Hampton Fancher', 'Michael Green', 'Philip K. Dick');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ryan Gosling';
SET @Character = '''K''';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dave Bautista';
SET @Character = 'Sapper Morton';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robin Wright';
SET @Character = 'Lieutenant Joshi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Arnold';
SET @Character = 'Interviewer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vilma Sz√©csi';
SET @Character = 'Angry Old Lady';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ana de Armas';
SET @Character = 'Joi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wood Harris';
SET @Character = 'Nandez';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Dastmalchian';
SET @Character = 'Coco';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'T√≥mas Lemarquis';
SET @Character = 'File Clerk';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sylvia Hoeks';
SET @Character = 'Luv';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('future', 'android', 'bounty hunter', 'artificial intelligence (a.i.)', 'genetics', 'dystopia', 'sequel', 'cyberpunk', 'los angeles', 'california', 'las vegas', 'tech noir', 'meditative', 'human cloning', 'blade runner', 'complex', '2040s', 'cautionary', 'audacious', 'compassionate');

GO


-- ============================================
-- Movie: In the Mood for Love
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'In the Mood for Love';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Wong Kar-Wai');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Wong Kar-Wai');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Maggie Cheung';
SET @Character = 'Su Li-zhen - Mrs. Chan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tony Leung Chiu-wai';
SET @Character = 'Chow Mo-wan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ping-Lam Siu';
SET @Character = 'Ah Ping';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tung Cho ''Joe'' Cheung';
SET @Character = 'Man living in Mr. Koo''s apartment';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rebecca Pan';
SET @Character = 'Mrs. Suen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kelly Lai Chen';
SET @Character = 'Mr. Ho';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Man-Lei Chan';
SET @Character = 'Mr. Koo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kam-Wah Koo';
SET @Character = 'Mrs. Koo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chien Szu-Ying';
SET @Character = 'Amah';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paulyn Sun';
SET @Character = 'Mrs. Chow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('adultery', 'newspaper', 'secret love', 'martial arts', 'lovesickness', 'husband wife relationship', 'shanghai', 'china', 'marriage crisis', 'married couple', 'singapore', 'deceived husband', 'forbidden love', 'neighbor', 'author', 'hong kong', 'extramarital affair', '1960s', 'awestruck');

GO


-- ============================================
-- Movie: How to Lose a Guy in 10 Days
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'How to Lose a Guy in 10 Days';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Donald Petrie');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Michele Alexander', 'Jeannie Long', 'Kristen Buckley', 'Brian Regan', 'Burr Steers');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Kate Hudson';
SET @Character = 'Andie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matthew McConaughey';
SET @Character = 'Ben';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kathryn Hahn';
SET @Character = 'Michelle';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Annie Parisse';
SET @Character = 'Jeannie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adam Goldberg';
SET @Character = 'Tony';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Thomas Lennon';
SET @Character = 'Thayer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Michele';
SET @Character = 'Spears';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shalom Harlow';
SET @Character = 'Green';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert Klein';
SET @Character = 'Phillip Warren';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bebe Neuwirth';
SET @Character = 'Lana Jong';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('bet', 'new york city', 'journalist', 'therapist', 'advertising expert', 'romcom', 'basketball', 'relationship', 'advice columnist', 'group of friends', 'battle of the sexes', 'relationship sabotage', 'ulterior motive dating', 'hilarious', 'romantic', 'comforting', 'women''s magazine', 'new york knicks', 'meet the family');

GO


-- ============================================
-- Movie: Oldboy
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Oldboy';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Drama', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Park Chan-wook');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Garon Tsuchiya', 'Nobuaki Minegishi', 'Park Chan-wook', 'Jo-yun Hwang', 'Joon-hyung Lim');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Choi Min-sik';
SET @Character = 'Dae-su Oh';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yoo Ji-tae';
SET @Character = 'Woo-jin Lee';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kang Hye-jeong';
SET @Character = 'Mi-do';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kim Byeong-Ok';
SET @Character = 'Mr. Han';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ji Dae-han';
SET @Character = 'No Joo-hwan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Oh Dal-su';
SET @Character = 'Park Cheol-woong';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Seung-shin Lee';
SET @Character = 'Yoo Hyung-ja';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yoon Jin-seo';
SET @Character = 'Lee Soo-ah';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Oh Tae-kyung';
SET @Character = 'Young Dae-su';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yoo Yeon-seok';
SET @Character = 'Young Woo-Jin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('daughter', 'rage and hate', 'hostility', 'transformation', 'imprisonment', 'dark comedy', 'hypnosis', 'sushi restaurant', 'notebook', 'time', 'sin', 'alcoholism', 'flashback', 'revenge', 'loneliness', 'torture', 'based on manga', 'urination', 'rage', 'anger', 'catholic', 'incest', 'shocking', 'aggressive', 'captivity', 'neo-noir', 'brother sister sex', 'father daughter relationship', 'asian origins', 'remade', 'south korea', 'hammer', 'driven to suicide', 'suspenseful', 'tragic', 'brother sister incest', 'father daughter incest', 'violence mystery', 'accidental incest');

GO


-- ============================================
-- Movie: No Country for Old Men
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'No Country for Old Men';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Ethan Coen', 'Joel Coen');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Joel Coen', 'Ethan Coen', 'Cormac McCarthy');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tommy Lee Jones';
SET @Character = 'Ed Tom Bell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Javier Bardem';
SET @Character = 'Anton Chigurh';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Josh Brolin';
SET @Character = 'Llewelyn Moss';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Woody Harrelson';
SET @Character = 'Carson Wells';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kelly Macdonald';
SET @Character = 'Carla Jean Moss';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Garret Dillahunt';
SET @Character = 'Wendell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tess Harper';
SET @Character = 'Loretta Bell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Barry Corbin';
SET @Character = 'Ellis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephen Root';
SET @Character = 'Man Who Hires Wells';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rodger Boyce';
SET @Character = 'El Paso Sheriff';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('vietnam veteran', 'sheriff', 'trailer park', 'based on novel or book', 'hitman', 'psychopath', 'drug trafficking', 'texas', 'motel', 'usa‚Äìmexico border', 'drug cartel', 'fate', 'desert', 'modern-day western', 'neo-western', 'tracking device', 'cold blooded killer', 'motel room', 'cartel', 'neo-noir', '1980s', 'mexican cartel', 'drug deal', 'coin toss', 'human nature', 'captive bolt gun', 'western noir', 'horror western', 'faithful adaptation', 'brisk');

GO


-- ============================================
-- Movie: Your Name.
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Your Name.';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Drama', 'Fantasy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Makoto Shinkai');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Makoto Shinkai');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ry√ªnosuke Kamiki';
SET @Character = 'Taki Tachibana';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mone Kamishiraishi';
SET @Character = 'Mitsuha Miyamizu';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ryo Narita';
SET @Character = 'Katsuhiko Teshigawara';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aoi Y√ªki';
SET @Character = 'Sayaka Natori';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nobunaga Shimazaki';
SET @Character = 'Tsukasa Fujii';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kaito Ishikawa';
SET @Character = 'Shinta Takagi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kanon Tani';
SET @Character = 'Yotsuha Miyamizu';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Masaki Terasoma';
SET @Character = 'Toshiki Miyamizu';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sayaka √îhara';
SET @Character = 'Futaha Miyamizu';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kazuhiko Inoue';
SET @Character = 'Taki''s Father';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('high school', 'race against time', 'dreams', 'afterlife', 'natural disaster', 'supernatural', 'time travel', 'comet', 'romance', 'tragedy', 'school', 'body-swap', 'high school student', 'nonlinear timeline', 'star crossed lovers', 'anime', 'japanese high school');

GO


-- ============================================
-- Movie: Apocalypse Now
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Apocalypse Now';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Mystery', 'War');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Francis Ford Coppola');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('John Milius', 'Francis Ford Coppola', 'Michael Herr', 'Joseph Conrad');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Marlon Brando';
SET @Character = 'Colonel Kurtz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Martin Sheen';
SET @Character = 'Captain Willard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert Duvall';
SET @Character = 'Lt. Colonel Kilgore';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Frederic Forrest';
SET @Character = 'Chef';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sam Bottoms';
SET @Character = 'Lance';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Laurence Fishburne';
SET @Character = 'Clean';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Albert Hall';
SET @Character = 'Chief';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harrison Ford';
SET @Character = 'Colonel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dennis Hopper';
SET @Character = 'Photo Journalist';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'G.D. Spradlin';
SET @Character = 'General';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('guerrilla warfare', 'epic', 'vietnam war', 'journalist', 'mission', 'vietnam', 'vietcong', 'central intelligence agency (cia)', 'cambodia', 'army', 'drug abuse', 'based on novel or book', 'secret mission', 'insanity', 'surrealism', 'tribe', 'green beret', 'jungle', 'descent into madness', 'brutality', 'riverboat', 'military', 'macabre', 'anti war', 'absurd', 'awestruck', 'commanding', 'distressing');

GO


-- ============================================
-- Movie: The Big Lebowski
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Big Lebowski';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Crime');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Joel Coen', 'Ethan Coen');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Ethan Coen', 'Joel Coen');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jeff Bridges';
SET @Character = 'The Dude';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Goodman';
SET @Character = 'Walter Sobchak';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julianne Moore';
SET @Character = 'Maude Lebowski';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steve Buscemi';
SET @Character = 'Donny';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Huddleston';
SET @Character = 'The Big Lebowski';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Philip Seymour Hoffman';
SET @Character = 'Brandt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tara Reid';
SET @Character = 'Bunny Lebowski';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Philip Moon';
SET @Character = 'Treehorn Thug #1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Pellegrino';
SET @Character = 'Treehorn Thug #2';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peter Stormare';
SET @Character = 'Nihilist #1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('vietnam veteran', 'white russian', 'bowling', 'carpet', 'nihilism', 'heart attack', 'kidnapping', 'lsd', 'marijuana', 'los angeles', 'california', 'millionaire', 'cowboy', 'ashes', 'impregnation', 'bowling team', 'unemployed', 'bowling ball', 'neo-noir', 'weeds');

GO


-- ============================================
-- Movie: Wicked
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Wicked';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Fantasy', 'Musical', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Jon M. Chu');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Winnie Holzman', 'Dana Fox', 'Gregory Maguire', 'L. Frank Baum');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Cynthia Erivo';
SET @Character = 'Elphaba';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ariana Grande';
SET @Character = 'Galinda / Glinda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeff Goldblum';
SET @Character = 'The Wonderful Wizard of Oz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michelle Yeoh';
SET @Character = 'Madame Morrible';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jonathan Bailey';
SET @Character = 'Fiyero';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ethan Slater';
SET @Character = 'Boq';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Marissa Bode';
SET @Character = 'Nessarose';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peter Dinklage';
SET @Character = 'Dr. Dillamond';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andy Nyman';
SET @Character = 'Governor Thropp';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Courtney Mae-Briggs';
SET @Character = 'Mrs. Thropp';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('witch', 'dancing', 'based on novel or book', 'affectation', 'college', 'wish', 'musical', 'female friendship', 'bullying', 'based on play or musical', 'celebrity', 'prequel', 'singer', 'singing', 'corrupt politician', 'death in childbirth', 'fantasy world', 'wizard', 'gravity', 'discrimination', 'ostracism', 'woman in wheelchair', 'musical comedy', 'sister sister relationship', 'belonging', 'loving', 'inspirational', 'fantasy', 'dramatic', 'romantic fantasy', 'romantic', 'amused', 'comforting', 'compassionate', 'excited', 'familiar', 'frightened');

GO


-- ============================================
-- Movie: Avengers: Endgame
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Avengers: Endgame';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Anthony Russo', 'Joe Russo');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Christopher Markus', 'Stephen McFeely', 'Stan Lee', 'Jack Kirby', 'Joe Simon', 'Steve Englehart', 'Steve Gan', 'Bill Mantlo', 'Keith Giffen', 'Jim Starlin', 'Larry Lieber', 'Don Heck');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Robert Downey Jr.';
SET @Character = 'Tony Stark / Iron Man';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Evans';
SET @Character = 'Steve Rogers / Captain America';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Ruffalo';
SET @Character = 'Bruce Banner / Hulk';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Hemsworth';
SET @Character = 'Thor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scarlett Johansson';
SET @Character = 'Natasha Romanoff / Black Widow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeremy Renner';
SET @Character = 'Clint Barton / Hawkeye';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Don Cheadle';
SET @Character = 'James Rhodes / War Machine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Rudd';
SET @Character = 'Scott Lang / Ant-Man';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Benedict Cumberbatch';
SET @Character = 'Doctor Strange';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chadwick Boseman';
SET @Character = 'T''Challa / Black Panther';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('superhero', 'time travel', 'space travel', 'time machine', 'based on comic', 'sequel', 'alien invasion', 'superhero team', 'marvel cinematic universe (mcu)', 'alternate timeline', 'father daughter relationship', 'sister sister relationship', 'awestruck', 'powerful', 'vibrant');

GO


-- ============================================
-- Movie: Cars
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Cars';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Adventure', 'Comedy', 'Family', 'Sport');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('John Lasseter', 'Joe Ranft');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('John Lasseter', 'Joe Ranft', 'Jorgen Klubien', 'Dan Fogelman', 'Kiel Murray', 'Phil Lorin');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Owen Wilson';
SET @Character = 'Lightning McQueen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Newman';
SET @Character = 'Doc Hudson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bonnie Hunt';
SET @Character = 'Sally Carrera';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Larry the Cable Guy';
SET @Character = 'Mater';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cheech Marin';
SET @Character = 'Ramone';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tony Shalhoub';
SET @Character = 'Luigi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Guido Quaroni';
SET @Character = 'Guido';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jenifer Lewis';
SET @Character = 'Flo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Dooley';
SET @Character = 'Sarge';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Wallis';
SET @Character = 'Sheriff';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('friendship', 'car race', 'sports', 'villain', 'success', 'route 66', 'porsche', 'retirement', 'road trip', 'anthropomorphism', 'love', 'racing', 'rural area', 'los angeles', 'california', 'aftercreditsstinger', 'duringcreditsstinger', 'rookie', 'dedication', 'humility');

GO


-- ============================================
-- Movie: Spider-Man 2
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Spider-Man 2';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Sam Raimi');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Stan Lee', 'Steve Ditko', 'Alfred Gough', 'Miles Millar', 'Michael Chabon', 'Alvin Sargent');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tobey Maguire';
SET @Character = 'Spider-Man / Peter Parker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kirsten Dunst';
SET @Character = 'Mary Jane Watson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Franco';
SET @Character = 'Harry Osborn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alfred Molina';
SET @Character = 'Doc Ock / Dr. Otto Octavius';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rosemary Harris';
SET @Character = 'May Parker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'J.K. Simmons';
SET @Character = 'J. Jonah Jameson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Donna Murphy';
SET @Character = 'Rosalie Octavius';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daniel Gillies';
SET @Character = 'John Jameson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dylan Baker';
SET @Character = 'Dr. Curt Connors';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bill Nunn';
SET @Character = 'Joseph ''Robbie'' Robertson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new york city', 'dual identity', 'love of one''s life', 'secret identity', 'superhero', 'pizza boy', 'based on comic', 'sequel', 'romance', 'doctor', 'scientist', 'tentacle', 'death', 'super villain', 'young adult');

GO


-- ============================================
-- Movie: Spider-Man: No Way Home
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Spider-Man: No Way Home';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Fantasy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Jon Watts');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Chris McKenna', 'Erik Sommers', 'Stan Lee', 'Steve Ditko');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tom Holland';
SET @Character = 'Peter Parker / Spider-Man';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zendaya';
SET @Character = 'MJ';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Benedict Cumberbatch';
SET @Character = 'Doctor Strange';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jacob Batalon';
SET @Character = 'Ned Leeds';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jon Favreau';
SET @Character = 'Happy Hogan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jamie Foxx';
SET @Character = 'Max Dillon / Electro';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Willem Dafoe';
SET @Character = 'Norman Osborn / Green Goblin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alfred Molina';
SET @Character = 'Dr. Otto Octavius / Doc Ock';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Benedict Wong';
SET @Character = 'Wong';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tony Revolori';
SET @Character = 'Flash Thompson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new york city', 'hero', 'showdown', 'magic', 'loss of loved one', 'secret identity', 'superhero', 'villain', 'portal', 'sequel', 'vigilante', 'superhero team', 'masked vigilante', 'spider web', 'alternative reality', 'aftercreditsstinger', 'duringcreditsstinger', 'marvel cinematic universe (mcu)', 'fight for justice', 'teen superhero', 'superhero teamup', 'returning hero', 'crossover', 'teamwork', 'admiring');

GO


-- ============================================
-- Movie: One Flew Over the Cuckoo''s Nest
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'One Flew Over the Cuckoo''s Nest';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Milos Forman');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Lawrence Hauben', 'Bo Goldman', 'Ken Kesey', 'Dale Wasserman');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Michael Berryman';
SET @Character = 'Ellis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peter Brocco';
SET @Character = 'Col. Matterson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dean R. Brooks';
SET @Character = 'Dr. Spivey';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alonzo Brown';
SET @Character = 'Miller';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scatman Crothers';
SET @Character = 'Turkle';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mwako Cumbuka';
SET @Character = 'Warren';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Danny DeVito';
SET @Character = 'Martini';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'William Duell';
SET @Character = 'Sefelt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Josip Elic';
SET @Character = 'Bancini';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lan Fendors';
SET @Character = 'Nurse Itsu';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('mentally disabled', 'friendship', 'based on novel or book', 'nurse', 'lunatic asylum', 'insane asylum', 'oregon', 'usa', 'hospital', 'medication', 'female villain', 'shock treatment', 'informative');

GO


-- ============================================
-- Movie: Casablanca
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Casablanca';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Romance', 'War');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Michael Curtiz');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Philip G. Epstein', 'Julius J. Epstein', 'Howard Koch', 'Murray Burnett', 'Joan Alison', 'Casey Robinson');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Humphrey Bogart';
SET @Character = 'Rick Blaine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ingrid Bergman';
SET @Character = 'Ilsa Lund';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Henreid';
SET @Character = 'Victor Laszlo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Claude Rains';
SET @Character = 'Captain Louis Renault';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Conrad Veidt';
SET @Character = 'Major Heinrich Strasser';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sydney Greenstreet';
SET @Character = 'Signor Ferrari';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peter Lorre';
SET @Character = 'Ugarte';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'S.Z. Sakall';
SET @Character = 'Carl';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Madeleine Lebeau';
SET @Character = 'Yvonne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dooley Wilson';
SET @Character = 'Sam';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('corruption', 'nazi', 'escape', 'love triangle', 'resistance', 'spy', 'patriotism', 'casablanca', 'morocco', 'vichy regime', 'visa', 'nationalism', 'world war ii', 'morocco', 'film noir', 'war');

GO


-- ============================================
-- Movie: The Green Mile
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Green Mile';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Fantasy', 'Mystery');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Frank Darabont');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Stephen King', 'Frank Darabont');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tom Hanks';
SET @Character = 'Paul Edgecomb';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Morse';
SET @Character = 'Brutus ''Brutal'' Howell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bonnie Hunt';
SET @Character = 'Jan Edgecomb';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Clarke Duncan';
SET @Character = 'John Coffey';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Cromwell';
SET @Character = 'Warden Hal Moores';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Jeter';
SET @Character = 'Eduard Delacroix';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Graham Greene';
SET @Character = 'Arlen Bitterbuck';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Doug Hutchison';
SET @Character = 'Percy Wetmore';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sam Rockwell';
SET @Character = '''Wild Bill'' Wharton';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Barry Pepper';
SET @Character = 'Dean Stanton';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('mentally disabled', 'based on novel or book', 'southern usa', 'psychopath', 'death row', 'jail guard', 'supernatural', 'great depression', 'prison guard', 'jail', 'electric chair', 'torture', 'magic realism', 'healing', 'grim', '1930s', 'abuse of power', 'inspirational', 'depressed', 'ambiguous', 'authoritarian', 'cruel', 'hopeful');

GO


-- ============================================
-- Movie: Phantom Thread
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Phantom Thread';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Paul Thomas Anderson');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Paul Thomas Anderson');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Vicky Krieps';
SET @Character = 'Alma';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daniel Day-Lewis';
SET @Character = 'Reynolds Woodcock';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lesley Manville';
SET @Character = 'Cyril';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julie Vollono';
SET @Character = 'London Housekeeper';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sue Clark';
SET @Character = 'Biddy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joan Brown';
SET @Character = 'Nana';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harriet Leitch';
SET @Character = 'Pippa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dinah Nicholson';
SET @Character = 'Elsa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julie Duck';
SET @Character = 'Irma';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maryanne Frost';
SET @Character = 'Winn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('london', 'england', 'husband wife relationship', 'obsession', 'dressmaker', 'fashion designer', 'muse', 'doctor', 'wedding', 'fashion', 'fashion show', 'haute couture', 'fictional biography', '1950s', 'calm', 'fashion industry', 'brother sister relationship', 'romantic');

GO


-- ============================================
-- Movie: The Great Gatsby
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Great Gatsby';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Baz Luhrmann');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Baz Luhrmann', 'Craig Pearce', 'F. Scott Fitzgerald');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Lisa Adam';
SET @Character = 'Weeping / Singing Woman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Frank Aldridge';
SET @Character = 'Well Dressed Male Witness - Wilson''s Garage';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amitabh Bachchan';
SET @Character = 'Meyer Wolfshiem';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steve Bisley';
SET @Character = 'Dan Cody';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Carter';
SET @Character = 'Herzog';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jason Clarke';
SET @Character = 'George Wilson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adelaide Clemens';
SET @Character = 'Catherine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vince Colosimo';
SET @Character = 'Michaelis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Max Cullen';
SET @Character = 'Owl Eyes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mal Day';
SET @Character = 'The Boss-Probity Trust';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('infidelity', 'based on novel or book', 'obsession', 'hope', 'long island', 'new york', '1920s', 'voiceover');

GO


-- ============================================
-- Movie: Mr. & Mrs. Smith
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Mr. & Mrs. Smith';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Comedy', 'Crime', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Doug Liman');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Simon Kinberg');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Brad Pitt';
SET @Character = 'John Smith';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Angelina Jolie';
SET @Character = 'Jane Smith';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vince Vaughn';
SET @Character = 'Eddie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adam Brody';
SET @Character = 'Benjamin Danz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kerry Washington';
SET @Character = 'Jasmine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Keith David';
SET @Character = 'Father';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Weitz';
SET @Character = 'Martin Coleman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rachael Huntley';
SET @Character = 'Suzy Coleman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michelle Monaghan';
SET @Character = 'Gwen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephanie March';
SET @Character = 'Julie - Associate #1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('assassin', 'bomb', 'hitman', 'marriage crisis', 'gun', 'secret identity', 'married couple', 'assault rifle', 'marriage', 'decoy', 'secret agent', 'dysfunctional marriage', 'gunfight', 'bullet wound', 'excited', 'ridiculous');

GO


-- ============================================
-- Movie: Cruella
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Cruella';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure', 'Comedy', 'Crime', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Craig Gillespie');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Dana Fox', 'Tony McNamara', 'Aline Brosh McKenna', 'Kelly Marcel', 'Steve Zissis', 'Dodie Smith');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Emma Stone';
SET @Character = 'Estella / Cruella';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emma Thompson';
SET @Character = 'The Baroness';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joel Fry';
SET @Character = 'Jasper';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Walter Hauser';
SET @Character = 'Horace';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John McCrea';
SET @Character = 'Artie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emily Beecham';
SET @Character = 'Catherine / Maid';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Strong';
SET @Character = 'John the Valet';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kayvan Novak';
SET @Character = 'Roger';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kirby Howell-Baptiste';
SET @Character = 'Anita Darling';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jamie Demetriou';
SET @Character = 'Gerald';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('1970s', 'anti hero', 'villain', 'punk rock', 'fashion designer', 'fashion', 'origin story', 'live action remake');

GO


-- ============================================
-- Movie: Elvis
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Elvis';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Biography', 'Drama', 'Music');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Baz Luhrmann');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Baz Luhrmann', 'Sam Bromell', 'Craig Pearce', 'Jeremy Doner');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Austin Butler';
SET @Character = 'Elvis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Hanks';
SET @Character = 'Colonel Tom Parker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Olivia DeJonge';
SET @Character = 'Priscilla';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Helen Thomson';
SET @Character = 'Gladys';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Roxburgh';
SET @Character = 'Vernon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kelvin Harrison Jr.';
SET @Character = 'B.B. King';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Wenham';
SET @Character = 'Hank Snow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kodi Smit-McPhee';
SET @Character = 'Jimmie Rodgers Snow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Luke Bracey';
SET @Character = 'Jerry Schilling';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dacre Montgomery';
SET @Character = 'Steve Binder';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('rock ''n'' roll', 'biography', 'based on true story', 'singer', 'music business', '1950s', 'apathetic', 'disdainful');

GO


-- ============================================
-- Movie: Iron Man
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Iron Man';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Jon Favreau');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Mark Fergus', 'Hawk Ostby', 'Art Marcum', 'Matt Holloway', 'Stan Lee', 'Don Heck', 'Larry Lieber', 'Jack Kirby');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Robert Downey Jr.';
SET @Character = 'Tony Stark';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Terrence Howard';
SET @Character = 'Rhodey';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeff Bridges';
SET @Character = 'Obadiah Stane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gwyneth Paltrow';
SET @Character = 'Pepper Potts';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Leslie Bibb';
SET @Character = 'Christine Everhart';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shaun Toub';
SET @Character = 'Yinsen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Faran Tahir';
SET @Character = 'Raza';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Clark Gregg';
SET @Character = 'Agent Coulson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bill Smitrovich';
SET @Character = 'General Gabriel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sayed Badreya';
SET @Character = 'Abu Bakaar';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('middle east', 'superhero', 'arms dealer', 'malibu', 'based on comic', 'aftercreditsstinger', 'marvel cinematic universe (mcu)', 'counterterrorism', 'powerful');

GO


-- ============================================
-- Movie: The Incredible Hulk
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Incredible Hulk';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Louis Leterrier');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Zak Penn', 'Stan Lee', 'Jack Kirby');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Edward Norton';
SET @Character = 'Bruce Banner';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Liv Tyler';
SET @Character = 'Betty Ross';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tim Roth';
SET @Character = 'Emil Blonsky';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'William Hurt';
SET @Character = 'General ''Thunderbolt'' Ross';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tim Blake Nelson';
SET @Character = 'Samuel Sterns';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ty Burrell';
SET @Character = 'Leonard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christina Cabot';
SET @Character = 'Major Kathleen Sparr';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peter Mensah';
SET @Character = 'General Joe Greller';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lou Ferrigno';
SET @Character = 'Voice of The Incredible Hulk / Security Guard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Soles';
SET @Character = 'Stanley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new york city', 'rio de janeiro', 'superhero', 'based on comic', 'fugitive', 'on the run', 'super soldier', 'scientist', 'virginia', 'military', 'super villain', 'marvel cinematic universe (mcu)', 'angry', 'radical transformation', 'good versus evil', 'hopeful');

GO


-- ============================================
-- Movie: Iron Man 2
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Iron Man 2';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Jon Favreau');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Justin Theroux', 'Stan Lee', 'Don Heck', 'Larry Lieber', 'Jack Kirby');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Robert Downey Jr.';
SET @Character = 'Tony Stark';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gwyneth Paltrow';
SET @Character = 'Pepper Potts';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Don Cheadle';
SET @Character = 'Lt. Col. James ''Rhodey'' Rhodes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scarlett Johansson';
SET @Character = 'Natalie Rushman / Natasha Romanoff';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sam Rockwell';
SET @Character = 'Justin Hammer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mickey Rourke';
SET @Character = 'Ivan Vanko';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samuel L. Jackson';
SET @Character = 'Nick Fury';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Clark Gregg';
SET @Character = 'Agent Coulson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Slattery';
SET @Character = 'Howard Stark';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Garry Shandling';
SET @Character = 'Senator Stern';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('technology', 'superhero', 'malibu', 'based on comic', 'revenge', 'aftercreditsstinger', 'marvel cinematic universe (mcu)', 'break out');

GO


-- ============================================
-- Movie: Thor
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Thor';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Kenneth Branagh');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Ashley E. Miller', 'Zack Stentz', 'Don Payne', 'J. Michael Straczynski', 'Mark Protosevich', 'Stan Lee', 'Larry Lieber', 'Jack Kirby');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Chris Hemsworth';
SET @Character = 'Thor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Natalie Portman';
SET @Character = 'Jane Foster';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Hiddleston';
SET @Character = 'Loki';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anthony Hopkins';
SET @Character = 'Odin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stellan Skarsg√•rd';
SET @Character = 'Erik Selvig';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kat Dennings';
SET @Character = 'Darcy Lewis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Clark Gregg';
SET @Character = 'Agent Coulson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Colm Feore';
SET @Character = 'King Laufey';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Idris Elba';
SET @Character = 'Heimdall';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ray Stevenson';
SET @Character = 'Volstagg';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new mexico', 'superhero', 'redemption', 'banishment', 'based on comic', 'brother against brother', 'norse mythology', 'aftercreditsstinger', 'marvel cinematic universe (mcu)', 'worlds collide', 'god of thunder', 'fantasy', 'egotistical');

GO


-- ============================================
-- Movie: Captain America: The First Avenger
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Captain America: The First Avenger';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Joe Johnston');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Christopher Markus', 'Stephen McFeely', 'Joe Simon', 'Jack Kirby');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Chris Evans';
SET @Character = 'Captain America / Steve Rogers';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hayley Atwell';
SET @Character = 'Peggy Carter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sebastian Stan';
SET @Character = 'James Buchanan ''Bucky'' Barnes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tommy Lee Jones';
SET @Character = 'Colonel Chester Phillips';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hugo Weaving';
SET @Character = 'Johann Schmidt / Red Skull';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dominic Cooper';
SET @Character = 'Howard Stark';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Armitage';
SET @Character = 'Heinz Kruger';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stanley Tucci';
SET @Character = 'Dr. Abraham Erskine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samuel L. Jackson';
SET @Character = 'Nick Fury';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Toby Jones';
SET @Character = 'Dr. Arnim Zola';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new york city', 'nazi', 'superhero', 'world war ii', 'heroism', 'shield', 'based on comic', 'super soldier', 'period drama', 'brooklyn', 'new york city', 'aftercreditsstinger', 'marvel cinematic universe (mcu)', 'origin story', 'soldiers', 'war', 'celebratory', 'excited', 'hopeful');

GO


-- ============================================
-- Movie: The Avengers
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Avengers';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Joss Whedon');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Joss Whedon', 'Zak Penn');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Robert Downey Jr.';
SET @Character = 'Tony Stark / Iron Man';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Evans';
SET @Character = 'Steve Rogers / Captain America';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Ruffalo';
SET @Character = 'Bruce Banner / The Hulk';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Hemsworth';
SET @Character = 'Thor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scarlett Johansson';
SET @Character = 'Natasha Romanoff / Black Widow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeremy Renner';
SET @Character = 'Clint Barton / Hawkeye';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Hiddleston';
SET @Character = 'Loki';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Clark Gregg';
SET @Character = 'Agent Phil Coulson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cobie Smulders';
SET @Character = 'Agent Maria Hill';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stellan Skarsg√•rd';
SET @Character = 'Selvig';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new york city', 'superhero', 'shield', 'based on comic', 'alien invasion', 'superhero team', 'aftercreditsstinger', 'duringcreditsstinger', 'marvel cinematic universe (mcu)');

GO


-- ============================================
-- Movie: Iron Man 3
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Iron Man 3';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Shane Black');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Drew Pearce', 'Shane Black', 'Stan Lee', 'Don Heck', 'Larry Lieber', 'Jack Kirby', 'Warren Ellis', 'Adi Granov');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Robert Downey Jr.';
SET @Character = 'Tony Stark';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gwyneth Paltrow';
SET @Character = 'Pepper Potts';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Don Cheadle';
SET @Character = 'Colonel James Rhodes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Guy Pearce';
SET @Character = 'Aldrich Killian';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rebecca Hall';
SET @Character = 'Maya Hansen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jon Favreau';
SET @Character = 'Happy Hogan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ben Kingsley';
SET @Character = 'Trevor Slattery';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Badge Dale';
SET @Character = 'Savin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephanie Szostak';
SET @Character = 'Brandt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Bettany';
SET @Character = 'Jarvis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('california', 'war on terror', 'superhero', 'malibu', 'based on comic', 'tennessee', 'billionaire', 'aftercreditsstinger', 'marvel cinematic universe (mcu)', 'christmas', 'america', 'suspenseful');

GO


-- ============================================
-- Movie: Thor: The Dark World
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Thor: The Dark World';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Fantasy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Alan Taylor');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Christopher L. Yost', 'Christopher Markus', 'Stephen McFeely', 'Don Payne', 'Robert Rodat', 'Stan Lee', 'Larry Lieber', 'Jack Kirby', 'Walter Simonson');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Chris Hemsworth';
SET @Character = 'Thor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Natalie Portman';
SET @Character = 'Jane Foster';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Hiddleston';
SET @Character = 'Loki';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anthony Hopkins';
SET @Character = 'Odin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christopher Eccleston';
SET @Character = 'Malekith';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jaimie Alexander';
SET @Character = 'Sif';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zachary Levi';
SET @Character = 'Fandral';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ray Stevenson';
SET @Character = 'Volstagg';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tadanobu Asano';
SET @Character = 'Hogun';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Idris Elba';
SET @Character = 'Heimdall';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('superhero', 'based on comic', 'hostile takeover', 'norse mythology', 'aftercreditsstinger', 'duringcreditsstinger', 'marvel cinematic universe (mcu)', 'mythological place', 'antagonistic', 'bold');

GO


-- ============================================
-- Movie: Captain America: The Winter Soldier
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Captain America: The Winter Soldier';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Anthony Russo', 'Joe Russo');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Christopher Markus', 'Stephen McFeely', 'Joe Simon', 'Jack Kirby', 'Steve Epting', 'Ed Brubaker', 'Michael Lark');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Chris Evans';
SET @Character = 'Steve Rogers / Captain America';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samuel L. Jackson';
SET @Character = 'Nick Fury';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scarlett Johansson';
SET @Character = 'Natasha Romanoff / Black Widow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert Redford';
SET @Character = 'Alexander Pierce';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sebastian Stan';
SET @Character = 'Bucky Barnes / Winter Soldier';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anthony Mackie';
SET @Character = 'Sam Wilson / Falcon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cobie Smulders';
SET @Character = 'Maria Hill';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Frank Grillo';
SET @Character = 'Brock Rumlow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maximiliano Hern√°ndez';
SET @Character = 'Jasper Sitwell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emily VanCamp';
SET @Character = 'Kate / Agent 13';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('washington dc', 'usa', 'superhero', 'shield', 'based on comic', 'aftercreditsstinger', 'duringcreditsstinger', 'marvel cinematic universe (mcu)', 'political thriller');

GO


-- ============================================
-- Movie: Guardians of the Galaxy
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Guardians of the Galaxy';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Comedy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('James Gunn');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('James Gunn', 'Nicole Perlman', 'Dan Abnett', 'Andy Lanning', 'Bill Mantlo', 'Keith Giffen', 'Jim Starlin', 'Steve Englehart', 'Steve Gan', 'Steve Gerber', 'Val Mayerik');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Chris Pratt';
SET @Character = 'Peter Quill';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zoe Salda√±a';
SET @Character = 'Gamora';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dave Bautista';
SET @Character = 'Drax';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vin Diesel';
SET @Character = 'Groot';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bradley Cooper';
SET @Character = 'Rocket';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lee Pace';
SET @Character = 'Ronan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Rooker';
SET @Character = 'Yondu Udonta';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Karen Gillan';
SET @Character = 'Nebula';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Djimon Hounsou';
SET @Character = 'Korath';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John C. Reilly';
SET @Character = 'Corpsman Dey';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('spacecraft', 'based on comic', 'space', 'orphan', 'adventurer', 'aftercreditsstinger', 'duringcreditsstinger', 'marvel cinematic universe (mcu)');

GO


-- ============================================
-- Movie: Avengers: Age of Ultron
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Avengers: Age of Ultron';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Joss Whedon');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Joss Whedon', 'Stan Lee', 'Jack Kirby', 'Joe Simon', 'Jim Starlin');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Robert Downey Jr.';
SET @Character = 'Tony Stark / Iron Man';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Hemsworth';
SET @Character = 'Thor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Ruffalo';
SET @Character = 'Bruce Banner / Hulk';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Evans';
SET @Character = 'Steve Rogers / Captain America';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scarlett Johansson';
SET @Character = 'Natasha Romanoff / Black Widow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeremy Renner';
SET @Character = 'Clint Barton / Hawkeye';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Spader';
SET @Character = 'Ultron';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samuel L. Jackson';
SET @Character = 'Nick Fury';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Don Cheadle';
SET @Character = 'James Rhodes / War Machine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aaron Taylor-Johnson';
SET @Character = 'Pietro Maximoff / Quicksilver';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('artificial intelligence (a.i.)', 'saving the world', 'superhero', 'based on comic', 'sequel', 'vision', 'superhero team', 'creator', 'super villain', 'duringcreditsstinger', 'marvel cinematic universe (mcu)', 'fictitious country', 'complex', 'evil robot', 'good versus evil');

GO


-- ============================================
-- Movie: Ant-Man
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Ant-Man';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Comedy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Peyton Reed');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Edgar Wright', 'Joe Cornish', 'Adam McKay', 'Paul Rudd', 'Stan Lee', 'Larry Lieber', 'Jack Kirby');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Paul Rudd';
SET @Character = 'Scott Lang / Ant-Man';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Douglas';
SET @Character = 'Dr. Hank Pym';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Evangeline Lilly';
SET @Character = 'Hope van Dyne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Corey Stoll';
SET @Character = 'Darren Cross / Yellowjacket';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bobby Cannavale';
SET @Character = 'Paxton';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anthony Mackie';
SET @Character = 'Sam Wilson / Falcon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Judy Greer';
SET @Character = 'Maggie Lang';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Abby Ryder Fortson';
SET @Character = 'Cassie Lang';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Pe√±a';
SET @Character = 'Luis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Dastmalchian';
SET @Character = 'Kurt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('superhero', 'ant', 'master thief', 'shrinking', 'based on comic', 'heist', 'miniaturization', 'mentor prot√©g√© relationship', 'aftercreditsstinger', 'duringcreditsstinger', 'marvel cinematic universe (mcu)', 'overprotective father', 'father daughter relationship', 'good versus evil', 'robbery gang', 'supersize');

GO


-- ============================================
-- Movie: Captain America: Civil War
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Captain America: Civil War';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Anthony Russo', 'Joe Russo');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Christopher Markus', 'Stephen McFeely', 'Joe Simon', 'Jack Kirby');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Chris Evans';
SET @Character = 'Steve Rogers / Captain America';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert Downey Jr.';
SET @Character = 'Tony Stark / Iron Man';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scarlett Johansson';
SET @Character = 'Natasha Romanoff / Black Widow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sebastian Stan';
SET @Character = 'Bucky Barnes / Winter Soldier';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anthony Mackie';
SET @Character = 'Sam Wilson / Falcon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Don Cheadle';
SET @Character = 'Lieutenant James Rhodes / War Machine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeremy Renner';
SET @Character = 'Clint Barton / Hawkeye';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chadwick Boseman';
SET @Character = 'T''Challa / Black Panther';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Bettany';
SET @Character = 'Vision';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Elizabeth Olsen';
SET @Character = 'Wanda Maximoff / Scarlet Witch';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('superhero', 'based on comic', 'sequel', 'super soldier', 'aftercreditsstinger', 'duringcreditsstinger', 'marvel cinematic universe (mcu)', 'angry', 'superhero teamup', 'bitter');

GO


-- ============================================
-- Movie: Doctor Strange
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Doctor Strange';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Fantasy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Scott Derrickson');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jon Spaihts', 'Scott Derrickson', 'C. Robert Cargill', 'Stan Lee', 'Steve Ditko');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Benedict Cumberbatch';
SET @Character = 'Dr. Stephen Strange';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chiwetel Ejiofor';
SET @Character = 'Mordo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rachel McAdams';
SET @Character = 'Dr. Christine Palmer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Benedict Wong';
SET @Character = 'Wong';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mads Mikkelsen';
SET @Character = 'Kaecilius';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tilda Swinton';
SET @Character = 'The Ancient One';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Stuhlbarg';
SET @Character = 'Dr. Nicodemus West';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Benjamin Bratt';
SET @Character = 'Jonathan Pangborn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scott Adkins';
SET @Character = 'Lucian / Strong Zealot';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zara Phythian';
SET @Character = 'Brunette Zealot';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('magic', 'superhero', 'training', 'time', 'based on comic', 'sorcerer', 'doctor', 'neurosurgeon', 'wizard', 'aftercreditsstinger', 'duringcreditsstinger', 'marvel cinematic universe (mcu)', 'suspenseful');

GO


-- ============================================
-- Movie: Guardians of the Galaxy Vol. 2
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Guardians of the Galaxy Vol. 2';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Comedy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('James Gunn');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('James Gunn', 'Dan Abnett', 'Andy Lanning', 'Steve Englehart', 'Steve Gan', 'Jim Starlin', 'Stan Lee', 'Larry Lieber', 'Jack Kirby', 'Bill Mantlo', 'Keith Giffen', 'Steve Gerber', 'Val Mayerik');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Chris Pratt';
SET @Character = 'Peter Quill / Star-Lord';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zoe Salda√±a';
SET @Character = 'Gamora';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dave Bautista';
SET @Character = 'Drax';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vin Diesel';
SET @Character = 'Baby Groot';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bradley Cooper';
SET @Character = 'Rocket';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Rooker';
SET @Character = 'Yondu';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Karen Gillan';
SET @Character = 'Nebula';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Pom Klementieff';
SET @Character = 'Mantis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sylvester Stallone';
SET @Character = 'Stakar Ogord';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kurt Russell';
SET @Character = 'Ego';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('superhero', 'based on comic', 'sequel', 'misfit', 'space', 'aftercreditsstinger', 'duringcreditsstinger', 'marvel cinematic universe (mcu)', 'egotistical');

GO


-- ============================================
-- Movie: Spider-Man: Homecoming
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Spider-Man: Homecoming';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Jon Watts');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jonathan Goldstein', 'John Francis Daley', 'Jon Watts', 'Christopher Ford', 'Chris McKenna', 'Erik Sommers', 'Stan Lee', 'Steve Ditko', 'Joe Simon', 'Jack Kirby');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tom Holland';
SET @Character = 'Peter Parker / Spider-Man';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Keaton';
SET @Character = 'Adrian Toomes / Vulture';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robert Downey Jr.';
SET @Character = 'Tony Stark / Iron Man';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Marisa Tomei';
SET @Character = 'May Parker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jon Favreau';
SET @Character = 'Happy Hogan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gwyneth Paltrow';
SET @Character = 'Pepper Potts';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zendaya';
SET @Character = 'Michelle';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Donald Glover';
SET @Character = 'Aaron Davis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jacob Batalon';
SET @Character = 'Ned';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Laura Harrier';
SET @Character = 'Liz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('high school', 'new york city', 'washington dc', 'usa', 'superhero', 'based on comic', 'reboot', 'aftercreditsstinger', 'duringcreditsstinger', 'marvel cinematic universe (mcu)');

GO


-- ============================================
-- Movie: Black Panther
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Black Panther';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Ryan Coogler');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Ryan Coogler', 'Joe Robert Cole', 'Stan Lee', 'Jack Kirby');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Chadwick Boseman';
SET @Character = 'T''Challa / Black Panther';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael B. Jordan';
SET @Character = 'Erik Killmonger';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lupita Nyong''o';
SET @Character = 'Nakia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Danai Gurira';
SET @Character = 'Okoye';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Martin Freeman';
SET @Character = 'Everett K. Ross';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daniel Kaluuya';
SET @Character = 'W''Kabi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Letitia Wright';
SET @Character = 'Shuri';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Winston Duke';
SET @Character = 'M''Baku';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sterling K. Brown';
SET @Character = 'N''Jobu';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Angela Bassett';
SET @Character = 'Ramonda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('africa', 'superhero', 'based on comic', 'aftercreditsstinger', 'duringcreditsstinger', 'marvel cinematic universe (mcu)');

GO


-- ============================================
-- Movie: Avengers: Infinity War
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Avengers: Infinity War';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Anthony Russo', 'Joe Russo');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Christopher Markus', 'Stephen McFeely', 'Stan Lee', 'Jack Kirby', 'Joe Simon', 'Steve Englehart', 'Steve Gan', 'Bill Mantlo', 'Keith Giffen', 'Jim Starlin', 'Larry Lieber', 'Don Heck');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Robert Downey Jr.';
SET @Character = 'Tony Stark / Iron Man';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Hemsworth';
SET @Character = 'Thor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Ruffalo';
SET @Character = 'Bruce Banner / Hulk';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Evans';
SET @Character = 'Steve Rogers / Captain America';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scarlett Johansson';
SET @Character = 'Natasha Romanoff / Black Widow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Don Cheadle';
SET @Character = 'James Rhodes / War Machine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Benedict Cumberbatch';
SET @Character = 'Doctor Strange';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Holland';
SET @Character = 'Peter Parker / Spider-Man';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chadwick Boseman';
SET @Character = 'T''Challa / Black Panther';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zoe Salda√±a';
SET @Character = 'Gamora';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('sacrifice', 'magic', 'superhero', 'based on comic', 'space', 'battlefield', 'genocide', 'magical object', 'super power', 'superhero team', 'aftercreditsstinger', 'marvel cinematic universe (mcu)', 'cosmic');

GO


-- ============================================
-- Movie: Captain Marvel
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Captain Marvel';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Anna Boden', 'Ryan Fleck');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Anna Boden', 'Ryan Fleck', 'Geneva Robertson-Dworet', 'Nicole Perlman', 'Meg LeFauve');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Brie Larson';
SET @Character = 'Carol Danvers / Vers / Captain Marvel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samuel L. Jackson';
SET @Character = 'Nick Fury';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ben Mendelsohn';
SET @Character = 'Talos / Keller';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jude Law';
SET @Character = 'Yon-Rogg';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Annette Bening';
SET @Character = 'Supreme Intelligence / Dr. Wendy Lawson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Djimon Hounsou';
SET @Character = 'Korath';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lee Pace';
SET @Character = 'Ronan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lashana Lynch';
SET @Character = 'Maria Rambeau';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gemma Chan';
SET @Character = 'Minn-Erva';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Clark Gregg';
SET @Character = 'Agent Coulson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('superhero', 'based on comic', 'alien invasion', 'super power', 'female hero', 'aftercreditsstinger', 'duringcreditsstinger', 'marvel cinematic universe (mcu)', 'woman director', '1990s', 'alien technology', 'introspective', 'complicated');

GO


-- ============================================
-- Movie: Spider-Man: Far from Home
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Spider-Man: Far from Home';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Comedy', 'Fantasy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Jon Watts');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Chris McKenna', 'Erik Sommers', 'Stan Lee', 'Steve Ditko', 'Joe Simon', 'Jack Kirby');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tom Holland';
SET @Character = 'Peter Parker / Spider-Man';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samuel L. Jackson';
SET @Character = 'Nick Fury';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jake Gyllenhaal';
SET @Character = 'Quentin Beck / Mysterio';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Marisa Tomei';
SET @Character = 'May Parker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jon Favreau';
SET @Character = 'Happy Hogan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zendaya';
SET @Character = 'MJ';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jacob Batalon';
SET @Character = 'Ned Leeds';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tony Revolori';
SET @Character = 'Flash Thompson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Angourie Rice';
SET @Character = 'Betty Brant';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Remy Hii';
SET @Character = 'Brad Davis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('venice', 'italy', 'superhero', 'school trip', 'europe', 'based on comic', 'sequel', 'destruction', 'aftercreditsstinger', 'duringcreditsstinger', 'marvel cinematic universe (mcu)', 'tower of london', 'hilarious');

GO


-- ============================================
-- Movie: Black Widow
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Black Widow';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Cate Shortland');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Eric Pearson', 'Jac Schaeffer', 'Ned Benson');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Scarlett Johansson';
SET @Character = 'Natasha Romanoff / Black Widow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Florence Pugh';
SET @Character = 'Yelena Belova';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rachel Weisz';
SET @Character = 'Melina';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Harbour';
SET @Character = 'Alexei';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ray Winstone';
SET @Character = 'Dreykov';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ever Anderson';
SET @Character = 'Young Natasha';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Violet McGraw';
SET @Character = 'Young Yelena';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'O-T Fagbenle';
SET @Character = 'Mason';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'William Hurt';
SET @Character = 'Secretary Ross';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Olga Kurylenko';
SET @Character = 'Antonia / Taskmaster';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('assassin', 'hero', 'spy', 'kgb', 'based on comic', 'female assassin', 'female spy', 'female hero', 'aftercreditsstinger', 'marvel cinematic universe (mcu)', 'woman director');

GO


-- ============================================
-- Movie: Shang-Chi and the Legend of the Ten Rings
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Shang-Chi and the Legend of the Ten Rings';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Fantasy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Destin Daniel Cretton');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Dave Callaham', 'Destin Daniel Cretton', 'Andrew Lanham', 'Steve Englehart', 'Jim Starlin');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Simu Liu';
SET @Character = 'Shaun / Shang-Chi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tony Leung Chiu-wai';
SET @Character = 'Xu Wenwu';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Awkwafina';
SET @Character = 'Katy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ben Kingsley';
SET @Character = 'Trevor Slattery';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Meng''er Zhang';
SET @Character = 'Xialing';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Fala Chen';
SET @Character = 'Li';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michelle Yeoh';
SET @Character = 'Ying Nan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wah Yuen';
SET @Character = 'Master Guang Bo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Florian Munteanu';
SET @Character = 'Razor Fist';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andy Le';
SET @Character = 'Death Dealer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('martial arts', 'superhero', 'based on comic', 'mixed martial arts (mma)', 'east asian lead', 'aftercreditsstinger', 'duringcreditsstinger', 'marvel cinematic universe (mcu)', 'mysterious', 'father son relationship');

GO


-- ============================================
-- Movie: Eternals
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Eternals';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Fantasy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Chlo√© Zhao');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Chlo√© Zhao', 'Patrick Burleigh', 'Ryan Firpo', 'Kaz Firpo', 'Jack Kirby', 'Jim Starlin');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Gemma Chan';
SET @Character = 'Sersi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Madden';
SET @Character = 'Ikaris';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Angelina Jolie';
SET @Character = 'Thena';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Salma Hayek';
SET @Character = 'Ajak';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kit Harington';
SET @Character = 'Dane Whitman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kumail Nanjiani';
SET @Character = 'Kingo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lia McHugh';
SET @Character = 'Sprite';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brian Tyree Henry';
SET @Character = 'Phastos';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lauren Ridloff';
SET @Character = 'Makkari';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Barry Keoghan';
SET @Character = 'Druig';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('superhero', 'supernatural', 'based on comic', 'alien', 'super power', 'lgbt', 'aftercreditsstinger', 'marvel cinematic universe (mcu)', 'woman director', 'sign languages', 'ancient', 'god-like', 'clinical');

GO


-- ============================================
-- Movie: Doctor Strange in the Multiverse of Madness
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Doctor Strange in the Multiverse of Madness';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Fantasy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Sam Raimi');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Michael Waldron', 'Stan Lee', 'Steve Ditko');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Benedict Cumberbatch';
SET @Character = 'Doctor Stephen Strange';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Elizabeth Olsen';
SET @Character = 'Wanda Maximoff / The Scarlet Witch';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chiwetel Ejiofor';
SET @Character = 'Baron Mordo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Benedict Wong';
SET @Character = 'Wong';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Xochitl Gomez';
SET @Character = 'America Chavez';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rachel McAdams';
SET @Character = 'Dr. Christine Palmer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jett Klyne';
SET @Character = 'Tommy Maximoff';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julian Hilliard';
SET @Character = 'Billy Maximoff';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Stuhlbarg';
SET @Character = 'Dr. Nic West';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hayley Atwell';
SET @Character = 'Captain Carter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('magic', 'superhero', 'based on comic', 'alternative reality', 'aftercreditsstinger', 'duringcreditsstinger', 'marvel cinematic universe (mcu)');

GO


-- ============================================
-- Movie: Thor: Love and Thunder
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Thor: Love and Thunder';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Comedy', 'Romance', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Taika Waititi');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Taika Waititi', 'Jennifer Kaytin Robinson', 'Stan Lee', 'Larry Lieber', 'Jack Kirby', 'Jim Starlin', 'Steve Englehart', 'Don Heck', 'Bill Mantlo', 'Keith Giffen', 'Steve Gan');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Chris Hemsworth';
SET @Character = 'Thor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Natalie Portman';
SET @Character = 'Jane Foster / The Mighty Thor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christian Bale';
SET @Character = 'Gorr';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tessa Thompson';
SET @Character = 'King Valkyrie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Taika Waititi';
SET @Character = 'Korg / Old Kronan God';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Russell Crowe';
SET @Character = 'Zeus';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jaimie Alexander';
SET @Character = 'Sif';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Idris Elba';
SET @Character = 'Heimdall';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Pratt';
SET @Character = 'Peter Quill / Star-Lord';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dave Bautista';
SET @Character = 'Drax';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('hero', 'ex-girlfriend', 'superhero', 'greek mythology', 'based on comic', 'sequel', 'shadow', 'norse mythology', 'aftercreditsstinger', 'duringcreditsstinger', 'marvel cinematic universe (mcu)', 'heroes', 'norse god', 'god of thunder', 'colorless', 'child abduction');

GO


-- ============================================
-- Movie: Black Panther: Wakanda Forever
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Black Panther: Wakanda Forever';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Drama', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Ryan Coogler');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Ryan Coogler', 'Joe Robert Cole', 'Stan Lee', 'Jack Kirby');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Letitia Wright';
SET @Character = 'Shuri';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lupita Nyong''o';
SET @Character = 'Nakia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Danai Gurira';
SET @Character = 'Okoye';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Winston Duke';
SET @Character = 'M''Baku';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Angela Bassett';
SET @Character = 'Ramonda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tenoch Huerta';
SET @Character = 'Namor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Martin Freeman';
SET @Character = 'Everett Ross';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julia Louis-Dreyfus';
SET @Character = 'Valentina Allegra de Fontaine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dominique Thorne';
SET @Character = 'Riri';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Florence Kasumba';
SET @Character = 'Ayo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('hero', 'loss of loved one', 'superhero', 'royal family', 'based on comic', 'sequel', 'royalty', 'underwater', 'political intrigue', 'death in family', 'death of brother', 'duringcreditsstinger', 'death of king', 'marvel cinematic universe (mcu)', 'hidden civilization', 'meditative', 'reflective', 'yucatan', 'wistful', 'mayans', 'admiring', 'antagonistic', 'bold', 'celebratory', 'commanding', 'excited', 'powerful');

GO


-- ============================================
-- Movie: Ant-Man and the Wasp: Quantumania
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Ant-Man and the Wasp: Quantumania';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Comedy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Peyton Reed');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jeff Loveness', 'Stan Lee', 'Larry Lieber', 'Jack Kirby', 'Ernest Hart');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Paul Rudd';
SET @Character = 'Scott Lang / Ant-Man';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Evangeline Lilly';
SET @Character = 'Hope Van Dyne / The Wasp';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Douglas';
SET @Character = 'Dr. Hank Pym';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michelle Pfeiffer';
SET @Character = 'Janet Van Dyne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jonathan Majors';
SET @Character = 'Kang the Conqueror';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kathryn Newton';
SET @Character = 'Cassie Lang';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Corey Stoll';
SET @Character = 'M.O.D.O.K.';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bill Murray';
SET @Character = 'Lord Krylar';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Katy O''Brian';
SET @Character = 'Jentorra';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'William Jackson Harper';
SET @Character = 'Quaz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('hero', 'superhero', 'ant', 'based on comic', 'sequel', 'alternate dimension', 'family', 'aftercreditsstinger', 'duringcreditsstinger', 'marvel cinematic universe (mcu)');

GO


-- ============================================
-- Movie: The Marvels
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Marvels';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Nia DaCosta');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Nia DaCosta', 'Megan McDonnell', 'Elissa Karasik');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Brie Larson';
SET @Character = 'Carol Danvers / Captain Marvel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Teyonah Parris';
SET @Character = 'Monica Rambeau';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Iman Vellani';
SET @Character = 'Kamala Khan / Ms. Marvel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samuel L. Jackson';
SET @Character = 'Nick Fury';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zawe Ashton';
SET @Character = 'Dar-Benn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gary Lewis';
SET @Character = 'Emperor Dro''ge';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Park Seo-joon';
SET @Character = 'Prince Yan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zenobia Shroff';
SET @Character = 'Muneeba Khan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mohan Kapur';
SET @Character = 'Yusuf Khan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Saagar Shaikh';
SET @Character = 'Aamir Khan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('hero', 'superhero', 'space travel', 'based on comic', 'sequel', 'teenage girl', 'aftercreditsstinger', 'duringcreditsstinger', 'marvel cinematic universe (mcu)', 'woman director', 'space adventure', 'absurd', 'foreboding');

GO


-- ============================================
-- Movie: Harry Potter and the Sorcerer''s Stone
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Harry Potter and the Sorcerer''s Stone';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure', 'Family', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Chris Columbus');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('J.K. Rowling', 'Steve Kloves');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Richard Harris';
SET @Character = 'Albus Dumbledore';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maggie Smith';
SET @Character = 'Professor McGonagall';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Robbie Coltrane';
SET @Character = 'Hagrid';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Saunders Triplets';
SET @Character = 'Baby Harry Potter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daniel Radcliffe';
SET @Character = 'Harry Potter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Fiona Shaw';
SET @Character = 'Aunt Petunia Dursley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harry Melling';
SET @Character = 'Dudley Dursley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Griffiths';
SET @Character = 'Uncle Vernon Dursley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Derek Deadman';
SET @Character = 'Bartender in Leaky Cauldron';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ian Hart';
SET @Character = 'Professor Quirrell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('witch', 'school friend', 'friendship', 'london', 'england', 'based on novel or book', 'magic', 'boarding school', 'child hero', 'school of witchcraft', 'chosen one', 'school', 'ghost', 'fantasy world', 'wizard', 'based on young adult novel', 'owl', 'joyous', 'enchant');

GO


-- ============================================
-- Movie: Harry Potter and the Chamber of Secrets
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Harry Potter and the Chamber of Secrets';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure', 'Family', 'Fantasy', 'Mystery');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Chris Columbus');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('J.K. Rowling', 'Steve Kloves');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Daniel Radcliffe';
SET @Character = 'Harry Potter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rupert Grint';
SET @Character = 'Ron Weasley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emma Watson';
SET @Character = 'Hermione Granger';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Griffiths';
SET @Character = 'Uncle Vernon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Fiona Shaw';
SET @Character = 'Aunt Petunia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harry Melling';
SET @Character = 'Dudley Dursley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Toby Jones';
SET @Character = 'Dobby';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jim Norton';
SET @Character = 'Mr Mason';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Veronica Clifford';
SET @Character = 'Mrs Mason';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Phelps';
SET @Character = 'Fred Weasley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('witch', 'flying car', 'elves', 'magic', 'sword', 'diary', 'child hero', 'school of witchcraft', 'giant spider', 'black magic', 'giant snake', 'ghost', 'child driving car', 'wizard', 'aftercreditsstinger', 'christmas', 'based on young adult novel');

GO


-- ============================================
-- Movie: Harry Potter and the Prisoner of Azkaban
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Harry Potter and the Prisoner of Azkaban';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure', 'Family', 'Fantasy', 'Mystery');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Alfonso Cuar√≥n');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('J.K. Rowling', 'Steve Kloves');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Daniel Radcliffe';
SET @Character = 'Harry Potter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Griffiths';
SET @Character = 'Uncle Vernon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Pam Ferris';
SET @Character = 'Aunt Marge';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Fiona Shaw';
SET @Character = 'Aunt Petunia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harry Melling';
SET @Character = 'Dudley Dursley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adrian Rawlins';
SET @Character = 'James Potter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Geraldine Somerville';
SET @Character = 'Lily Potter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lee Ingleby';
SET @Character = 'Stan Shunpike';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lenny Henry';
SET @Character = 'Shrunken Head';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jimmy Gardner';
SET @Character = 'Ernie the Bus Driver';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('witch', 'school friend', 'friendship', 'flying', 'magic', 'bus', 'traitor', 'child hero', 'school of witchcraft', 'black magic', 'time travel', 'school', 'best friend', 'werewolf', 'muggle', 'ghost', 'wizard', 'aftercreditsstinger', 'magical creature', 'night bus', 'teenage life', 'christmas', 'school class', 'based on young adult novel', 'magic spell');

GO


-- ============================================
-- Movie: Harry Potter and the Goblet of Fire
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Harry Potter and the Goblet of Fire';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure', 'Family', 'Fantasy', 'Mystery');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Mike Newell');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Steve Kloves', 'J.K. Rowling');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Eric Sykes';
SET @Character = 'Frank Bryce';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Timothy Spall';
SET @Character = 'Wormtail';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Tennant';
SET @Character = 'Barty Crouch Junior';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daniel Radcliffe';
SET @Character = 'Harry Potter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emma Watson';
SET @Character = 'Hermione Granger';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rupert Grint';
SET @Character = 'Ron Weasley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Williams';
SET @Character = 'Arthur Weasley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Phelps';
SET @Character = 'Fred Weasley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Oliver Phelps';
SET @Character = 'George Weasley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bonnie Wright';
SET @Character = 'Ginny Weasley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('witch', 'dying and death', 'based on novel or book', 'magic', 'boarding school', 'world cup', 'maze', 'mermaid', 'school of witchcraft', 'black magic', 'chosen one', 'sequel', 'vision', 'school', 'tournament', 'dragon', 'ghost', 'wizard', 'teenage hero', 'mysterious', 'christmas', 'based on young adult novel');

GO


-- ============================================
-- Movie: Harry Potter and the Order of the Phoenix
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Harry Potter and the Order of the Phoenix';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Family', 'Fantasy', 'Mystery');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('David Yates');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Michael Goldenberg', 'J.K. Rowling');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Daniel Radcliffe';
SET @Character = 'Harry Potter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harry Melling';
SET @Character = 'Dudley Dursley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jason Boyd';
SET @Character = 'Piers';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Macklin';
SET @Character = 'Malcolm';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kathryn Hunter';
SET @Character = 'Mrs. Arabella Figg';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Miles Jupp';
SET @Character = 'TV Weatherman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Fiona Shaw';
SET @Character = 'Petunia Dursley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Griffiths';
SET @Character = 'Vernon Dursley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jessica Hynes';
SET @Character = 'Mafalda Hopkirk';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adrian Rawlins';
SET @Character = 'James Potter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('witch', 'dying and death', 'court', 'magic', 'prophecy', 'loss of loved one', 'professor', 'supernatural', 'child hero', 'school of witchcraft', 'black magic', 'sorcery', 'occult', 'ghost', 'wizard', 'christmas', 'scholar', 'mystical land', 'ministry', 'based on young adult novel');

GO


-- ============================================
-- Movie: Harry Potter and the Half-Blood Prince
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Harry Potter and the Half-Blood Prince';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Family', 'Fantasy', 'Mystery');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('David Yates');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Steve Kloves', 'J.K. Rowling');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Daniel Radcliffe';
SET @Character = 'Harry Potter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Gambon';
SET @Character = 'Professor Albus Dumbledore';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dave Legeno';
SET @Character = 'Fenrir Greyback';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Elarica Johnson';
SET @Character = 'Waitress';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jim Broadbent';
SET @Character = 'Professor Horace Slughorn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Geraldine Somerville';
SET @Character = 'Lily Potter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bonnie Wright';
SET @Character = 'Ginny Weasley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julie Walters';
SET @Character = 'Molly Weasley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rupert Grint';
SET @Character = 'Ron Weasley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emma Watson';
SET @Character = 'Hermione Granger';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('witch', 'dying and death', 'london', 'england', 'magic', 'school of witchcraft', 'sequel', 'apparition', 'curse', 'teenage crush', 'school', 'werewolf', 'teenage love', 'luck', 'ghost', 'wizard', 'secret past', 'mysterious', 'christmas', 'based on young adult novel');

GO


-- ============================================
-- Movie: Harry Potter and the Deathly Hallows: Part 1
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Harry Potter and the Deathly Hallows: Part 1';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure', 'Family', 'Fantasy', 'Mystery');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('David Yates');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Steve Kloves', 'J.K. Rowling');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Bill Nighy';
SET @Character = 'Minister Rufus Scrimgeour';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emma Watson';
SET @Character = 'Hermione Granger';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Griffiths';
SET @Character = 'Vernon Dursley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harry Melling';
SET @Character = 'Dudley Dursley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daniel Radcliffe';
SET @Character = 'Harry Potter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julie Walters';
SET @Character = 'Molly Weasley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bonnie Wright';
SET @Character = 'Ginny Weasley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rupert Grint';
SET @Character = 'Ron Weasley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ian Kelly';
SET @Character = 'Mr. Granger';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michelle Fairley';
SET @Character = 'Mrs. Granger';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('witch', 'friendship', 'london', 'england', 'corruption', 'escape', 'teleportation', 'isolation', 'magic', 'bravery', 'radio', 'road trip', 'shelter', 'tension', 'attack', 'werewolf', 'ghost', 'road movie', 'wizard', 'christmas', 'based on young adult novel');

GO


-- ============================================
-- Movie: Harry Potter and the Deathly Hallows: Part 2
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Harry Potter and the Deathly Hallows: Part 2';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure', 'Family', 'Fantasy', 'Mystery');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('David Yates');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Steve Kloves', 'J.K. Rowling');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ralph Fiennes';
SET @Character = 'Lord Voldemort';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Gambon';
SET @Character = 'Professor Albus Dumbledore';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alan Rickman';
SET @Character = 'Professor Severus Snape';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daniel Radcliffe';
SET @Character = 'Harry Potter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rupert Grint';
SET @Character = 'Ron Weasley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emma Watson';
SET @Character = 'Hermione Granger';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Evanna Lynch';
SET @Character = 'Luna Lovegood';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Domhnall Gleeson';
SET @Character = 'Bill Weasley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cl√©mence Po√©sy';
SET @Character = 'Fleur Delacour';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Warwick Davis';
SET @Character = 'Griphook / Professor Filius Flitwick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('witch', 'dying and death', 'saving the world', 'self sacrifice', 'magic', 'school of witchcraft', 'sorcerer', 'school', 'battle', 'ghost', 'wizard', 'teenage hero', 'mysterious', 'christmas', 'based on young adult novel', 'good versus evil');

GO


-- ============================================
-- Movie: Fantastic Beasts and Where to Find Them
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Fantastic Beasts and Where to Find Them';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure', 'Family', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('David Yates');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('J.K. Rowling');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Eddie Redmayne';
SET @Character = 'Newt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sam Redford';
SET @Character = 'Customs Official';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Scott Goldman';
SET @Character = 'Customs Official';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tim Bentinck';
SET @Character = 'Witness';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tristan Tait';
SET @Character = 'Reporter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Colin Farrell';
SET @Character = 'Graves';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Clarke Hill';
SET @Character = 'Photographer 2';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matthew Sim';
SET @Character = 'Photographer 1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Katherine Waterston';
SET @Character = 'Tina';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samantha Morton';
SET @Character = 'Mary Lou';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('witch', 'new york city', 'robbery', 'escape', 'teleportation', 'magic', 'suitcase', 'mistake', 'spin off', 'subway station', 'wizard', 'goblin', 'magical creature', '1920s', 'based on young adult novel');

GO


-- ============================================
-- Movie: Fantastic Beasts: The Crimes of Grindelwald
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Fantastic Beasts: The Crimes of Grindelwald';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure', 'Family', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('David Yates');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('J.K. Rowling');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Johnny Depp';
SET @Character = 'Grindelwald';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kevin Guthrie';
SET @Character = 'Abernathy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Carmen Ejogo';
SET @Character = 'Seraphina Picquery';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wolf Roth';
SET @Character = 'Spielman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eddie Redmayne';
SET @Character = 'Newt Scamander';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zo√´ Kravitz';
SET @Character = 'Leta Lestrange';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Callum Turner';
SET @Character = 'Theseus Scamander';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Derek Riddell';
SET @Character = 'Torquil Travers';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cornell John';
SET @Character = 'Arnold Guzman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ezra Miller';
SET @Character = 'Credence Barebone';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('witch', 'new york city', 'paris', 'france', 'magic', 'school of witchcraft', 'sequel', 'prison escape', 'old flame', 'wizard', 'magical creature', '1920s', 'based on young adult novel', 'good versus evil', 'dark magic', 'follower');

GO


-- ============================================
-- Movie: Fantastic Beasts: The Secrets of Dumbledore
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Fantastic Beasts: The Secrets of Dumbledore';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('David Yates');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('J.K. Rowling', 'Steve Kloves');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jude Law';
SET @Character = 'Albus Dumbledore';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cara Mahoney';
SET @Character = 'Waitress';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mads Mikkelsen';
SET @Character = 'Gellert Grindelwald';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eddie Redmayne';
SET @Character = 'Newt Scamander';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Katherine Waterston';
SET @Character = 'Tina Goldstein';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Poppy Corby-Tuech';
SET @Character = 'Vinda Rosier';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maja Bloom';
SET @Character = 'Carrow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ezra Miller';
SET @Character = 'Credence Barebone';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Low-Hang';
SET @Character = 'Zabini';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alison Sudol';
SET @Character = 'Queenie Goldstein';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('prison', 'witch', 'berlin', 'germany', 'magic', 'election campaign', 'affectation', 'curse', 'bhutan', 'lgbt', 'fantasy world', 'wizard', 'magical creature', '1930s', 'based on young adult novel', 'good versus evil', 'amused', 'powerful');

GO


-- ============================================
-- Movie: The Lord of the Rings: The Fellowship of the Ring
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Lord of the Rings: The Fellowship of the Ring';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure', 'Drama', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Peter Jackson');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('J.R.R. Tolkien', 'Fran Walsh', 'Philippa Boyens', 'Peter Jackson');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Alan Howard';
SET @Character = 'Voice of the Ring';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Noel Appleby';
SET @Character = 'Everard Proudfoot';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sean Astin';
SET @Character = 'Sam';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sala Baker';
SET @Character = 'Sauron / Goblin / Uruk-hai';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sean Bean';
SET @Character = 'Boromir';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Billy Boyd';
SET @Character = 'Pippin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andy Serkis';
SET @Character = 'Gollum';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Marton Csokas';
SET @Character = 'Celeborn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Viggo Mortensen';
SET @Character = 'Aragorn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Orlando Bloom';
SET @Character = 'Legolas';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('based on novel or book', 'orcs', 'elves', 'dwarf', 'magic', 'obsession', 'bravery', 'fireworks', 'mine', 'maze', 'mountain', 'castle', 'birthday party', 'battle', 'demon', 'blizzard', 'uncle nephew relationship', 'fantasy world', 'journey', 'ring', 'invisibility', 'live action and animation', 'hero''s journey', 'wraith', 'sword and sorcery', 'trekking', 'loving', 'good versus evil', 'creatures', 'admiring', 'appreciative', 'epic quest', 'hobbits', 'trolls');

GO


-- ============================================
-- Movie: The Lord of the Rings: The Two Towers
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Lord of the Rings: The Two Towers';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure', 'Drama', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Peter Jackson');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('J.R.R. Tolkien', 'Fran Walsh', 'Philippa Boyens', 'Stephen Sinclair', 'Peter Jackson');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Bruce Allpress';
SET @Character = 'Aldor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sean Astin';
SET @Character = 'Sam';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Bach';
SET @Character = 'Madril';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sala Baker';
SET @Character = 'Man Flesh Uruk';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cate Blanchett';
SET @Character = 'Galadriel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Orlando Bloom';
SET @Character = 'Legolas';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Billy Boyd';
SET @Character = 'Pippin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jed Brophy';
SET @Character = 'Sharku / Snaga';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sam Comery';
SET @Character = 'Eothain';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brad Dourif';
SET @Character = 'Wormtongue';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('mission', 'army', 'based on novel or book', 'orcs', 'elves', 'dwarf', 'magic', 'obsession', 'bravery', 'castle', 'reincarnation', 'sequel', 'battle', 'brutality', 'guide', 'split personality', 'marsh', 'fantasy world', 'wizard', 'journey', 'ring', 'live action and animation', 'hero''s journey', 'high fantasy', 'wraith', 'sword and sorcery', 'trekking', 'evil spell', 'good versus evil', 'creatures', 'trees', 'admiring', 'apologetic', 'enchant', 'winged creatures', 'hobbits');

GO


-- ============================================
-- Movie: The Lord of the Rings: The Return of the King
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Lord of the Rings: The Return of the King';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure', 'Drama', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Peter Jackson');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('J.R.R. Tolkien', 'Fran Walsh', 'Philippa Boyens', 'Peter Jackson');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Noel Appleby';
SET @Character = 'Everard Proudfoot';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ali Astin';
SET @Character = 'Elanor Gamgee';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sean Astin';
SET @Character = 'Sam';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Aston';
SET @Character = 'Gondorian Soldier 3';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Bach';
SET @Character = 'Madril';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sean Bean';
SET @Character = 'Boromir';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cate Blanchett';
SET @Character = 'Galadriel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Orlando Bloom';
SET @Character = 'Legolas';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Billy Boyd';
SET @Character = 'Pippin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sadwyn Brophy';
SET @Character = 'Eldarion';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('army', 'based on novel or book', 'orcs', 'elves', 'dwarf', 'magic', 'kingdom', 'obsession', 'bravery', 'affectation', 'castle', 'volcano', 'giant spider', 'sequel', 'honor', 'king', 'brutality', 'madness', 'split personality', 'fantasy world', 'wizard', 'epic battle', 'journey', 'ring', 'quest', 'live action and animation', 'hero''s journey', 'high fantasy', 'wraith', 'sword and sorcery', 'power madness', 'great war', 'trekking', 'loving', 'good versus evil', 'sword making', 'war', 'creatures', 'epic quest', 'winged creatures', 'hobbits', 'armies', 'spirits', 'army of the dead');

GO


-- ============================================
-- Movie: The Hobbit: An Unexpected Journey
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Hobbit: An Unexpected Journey';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Peter Jackson');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Fran Walsh', 'Philippa Boyens', 'Peter Jackson', 'Guillermo del Toro', 'J.R.R. Tolkien');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ian McKellen';
SET @Character = 'Gandalf';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Martin Freeman';
SET @Character = 'Bilbo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Armitage';
SET @Character = 'Thorin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ken Stott';
SET @Character = 'Balin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Graham McTavish';
SET @Character = 'Dwalin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'William Kircher';
SET @Character = 'Bifur / Tom Troll';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Nesbitt';
SET @Character = 'Bofur';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephen Hunter';
SET @Character = 'Bombur';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dean O''Gorman';
SET @Character = 'Fili';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aidan Turner';
SET @Character = 'Kili';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('based on novel or book', 'orcs', 'elves', 'dwarf', 'magic', 'horseback riding', 'sword', 'burglar', 'legend', 'riddle', 'mountain', 'contract', 'travel', 'troll', 'creature', 'thunderstorm', 'fantasy world', 'wizard', 'epic battle', 'lost ring', 'journey', 'ring', 'tunnel', 'underground lake', 'buried treasure', 'invisibility', 'quest', 'live action and animation', 'high fantasy', 'sword and sorcery', 'trekking', 'goblins', 'good versus evil', 'creatures', 'fantasy creature', 'amused', 'excited', 'hobbit');

GO


-- ============================================
-- Movie: The Hobbit: The Desolation of Smaug
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Hobbit: The Desolation of Smaug';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Peter Jackson');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Fran Walsh', 'Philippa Boyens', 'Peter Jackson', 'Guillermo del Toro', 'J.R.R. Tolkien');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ian McKellen';
SET @Character = 'Gandalf';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Martin Freeman';
SET @Character = 'Bilbo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Armitage';
SET @Character = 'Thorin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ken Stott';
SET @Character = 'Balin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Graham McTavish';
SET @Character = 'Dwalin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'William Kircher';
SET @Character = 'Bifur';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Nesbitt';
SET @Character = 'Bofur';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephen Hunter';
SET @Character = 'Bombur';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dean O''Gorman';
SET @Character = 'Fili';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aidan Turner';
SET @Character = 'Kili';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('gold', 'lake', 'based on novel or book', 'orcs', 'elves', 'dwarf', 'shapeshifting', 'mountain', 'giant spider', 'sequel', 'bear', 'dragon', 'turns into animal', 'barrel', 'fantasy world', 'wizard', 'journey', 'ring', 'invisibility', 'captured', 'live action and animation', 'high fantasy', 'sword and sorcery', 'trekking', 'good versus evil', 'creatures', 'dwarves', 'epic quest', 'trolls', 'hobbit');

GO


-- ============================================
-- Movie: The Hobbit: The Battle of the Five Armies
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Hobbit: The Battle of the Five Armies';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Peter Jackson');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Fran Walsh', 'Philippa Boyens', 'Peter Jackson', 'Guillermo del Toro', 'J.R.R. Tolkien');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ian McKellen';
SET @Character = 'Gandalf';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Martin Freeman';
SET @Character = 'Bilbo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Armitage';
SET @Character = 'Thorin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ken Stott';
SET @Character = 'Balin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Graham McTavish';
SET @Character = 'Dwalin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'William Kircher';
SET @Character = 'Bifur';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Nesbitt';
SET @Character = 'Bofur';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephen Hunter';
SET @Character = 'Bombur';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dean O''Gorman';
SET @Character = 'Fili';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aidan Turner';
SET @Character = 'Kili';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('gold', 'corruption', 'based on novel or book', 'orcs', 'elves', 'dwarf', 'mine', 'mountain', 'sequel', 'dragon', 'battle', 'unlikely friendship', 'fantasy world', 'wizard', 'epic battle', 'ring', 'invisibility', 'live action and animation', 'high fantasy', 'sword and sorcery', 'good versus evil', 'creatures', 'dwarves', 'hobbits', 'trolls', 'hobbit', 'armies');

GO


-- ============================================
-- Movie: Mission: Impossible III
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Mission: Impossible III';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('J.J. Abrams');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Alex Kurtzman', 'Roberto Orci', 'J.J. Abrams', 'Bruce Geller');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tom Cruise';
SET @Character = 'Ethan Hunt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Philip Seymour Hoffman';
SET @Character = 'Owen Davian';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ving Rhames';
SET @Character = 'Luther';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Billy Crudup';
SET @Character = 'Musgrave';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michelle Monaghan';
SET @Character = 'Julia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jonathan Rhys Meyers';
SET @Character = 'Declan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Keri Russell';
SET @Character = 'Lindsey Farris';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maggie Q';
SET @Character = 'Zhen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Simon Pegg';
SET @Character = 'Benji';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eddie Marsan';
SET @Character = 'Brownway';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('mask', 'mission', 'berlin', 'germany', 'central intelligence agency (cia)', 'computer', 'the white house', 'shanghai', 'china', 'funeral', 'explosive', 'secret mission', 'spy', 'vatican (holy see)', 'secret identity', 'traitor', 'map', 'honeymoon', 'pretended murder', 'letter', 'covered investigation', 'secret agent', 'stamp', 'hard drive', 'e-mail', 'decipherment', 'suitcase', 'revenge', 'murder', 'hospital', 'duel', 'disguise', 'celebration', 'research laboratory', 'shocking', 'blast', 'desperate', 'anxious', 'based on tv series', 'suspenseful', 'amused');

GO


-- ============================================
-- Movie: Mission: Impossible - Ghost Protocol
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Mission: Impossible - Ghost Protocol';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Brad Bird');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Bruce Geller', 'Josh Appelbaum', 'Andr√© Nemec');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tom Cruise';
SET @Character = 'Ethan Hunt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paula Patton';
SET @Character = 'Jane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Simon Pegg';
SET @Character = 'Benji';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeremy Renner';
SET @Character = 'Brandt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Nyqvist';
SET @Character = 'Hendricks';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vladimir Mashkov';
SET @Character = 'Sidorov';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samuli Edelmann';
SET @Character = 'Wistrom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ivan Shvedoff';
SET @Character = 'Leonid Lisenker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anil Kapoor';
SET @Character = 'Brij Nath';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'L√©a Seydoux';
SET @Character = 'Sabine Moreau';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('assassin', 'budapest', 'hungary', 'skyscraper', 'secret intelligence service', 'sandstorm', 'seattle', 'washington', 'satellite', 'mumbai (bombay)', 'india', 'car crash', 'sequel', 'prison escape', 'dubai', 'billionaire', 'terrorism', 'disguise', 'bombing', 'jet', 'nuclear threat', 'undercover operation', 'moscow', 'russia', 'field agent', 'clandestine', 'analyst', 'nuclear submarine', 'kremlin', 'disavowed', 'based on tv series', 'nuclear launch codes', 'burj khalifa', 'scaling a building', 'amused', 'bold');

GO


-- ============================================
-- Movie: Mission: Impossible - Rogue Nation
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Mission: Impossible - Rogue Nation';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Christopher McQuarrie');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Bruce Geller', 'Christopher McQuarrie', 'Drew Pearce');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tom Cruise';
SET @Character = 'Ethan Hunt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeremy Renner';
SET @Character = 'William Brandt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Simon Pegg';
SET @Character = 'Benji Dunn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rebecca Ferguson';
SET @Character = 'Ilsa Faust';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ving Rhames';
SET @Character = 'Luther Stickell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sean Harris';
SET @Character = 'Lane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Simon McBurney';
SET @Character = 'Atlee';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jingchu Zhang';
SET @Character = 'Lauren';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Hollander';
SET @Character = 'Prime Minister';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jens Hult√©n';
SET @Character = 'Janik Vinter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('mission', 'london', 'england', 'spy', 'morocco', 'villain', 'austria', 'europe', 'sequel', 'conspiracy', 'vienna', 'austria', 'vienna opera', 'based on tv series', 'amused');

GO


-- ============================================
-- Movie: Mission: Impossible - Fallout
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Mission: Impossible - Fallout';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Christopher McQuarrie');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Bruce Geller', 'Christopher McQuarrie');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tom Cruise';
SET @Character = 'Ethan Hunt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Henry Cavill';
SET @Character = 'August Walker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ving Rhames';
SET @Character = 'Luther Stickell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Simon Pegg';
SET @Character = 'Benji Dunn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rebecca Ferguson';
SET @Character = 'Ilsa Faust';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sean Harris';
SET @Character = 'Solomon Lane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Angela Bassett';
SET @Character = 'Erika Sloane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vanessa Kirby';
SET @Character = 'The White Widow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michelle Monaghan';
SET @Character = 'Julia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wes Bentley';
SET @Character = 'Erik';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('race against time', 'london', 'england', 'helicopter', 'paris', 'france', 'plutonium', 'gun', 'spy', 'countdown', 'norway', 'sequel', 'motorcycle', 'bomb remote detonator', 'handgun', 'hand to hand combat', 'kashmir');

GO


-- ============================================
-- Movie: Mission: Impossible - Dead Reckoning Part One
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Mission: Impossible - Dead Reckoning Part One';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Christopher McQuarrie');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Bruce Geller', 'Christopher McQuarrie', 'Erik Jendresen');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tom Cruise';
SET @Character = 'Ethan Hunt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hayley Atwell';
SET @Character = 'Grace';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ving Rhames';
SET @Character = 'Luther Stickell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Simon Pegg';
SET @Character = 'Benji Dunn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rebecca Ferguson';
SET @Character = 'Ilsa Faust';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vanessa Kirby';
SET @Character = 'The White Widow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Esai Morales';
SET @Character = 'Gabriel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Pom Klementieff';
SET @Character = 'Paris';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Henry Czerny';
SET @Character = 'Kittridge';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shea Whigham';
SET @Character = 'Briggs';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('race against time', 'mission', 'rome', 'italy', 'chase', 'secret mission', 'secret agent', 'sequel', 'intelligence agency', 'rogue agent', 'based on tv series', 'secret government agency', 'northern norway', 'action');

GO


-- ============================================
-- Movie: Toy Story
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Toy Story';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Adventure', 'Comedy', 'Family', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('John Lasseter');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('John Lasseter', 'Pete Docter', 'Andrew Stanton', 'Joe Ranft', 'Joss Whedon', 'Joel Cohen', 'Alec Sokolow');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tom Hanks';
SET @Character = 'Woody';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tim Allen';
SET @Character = 'Buzz Lightyear';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Don Rickles';
SET @Character = 'Mr. Potato Head';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jim Varney';
SET @Character = 'Slinky Dog';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wallace Shawn';
SET @Character = 'Rex';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Ratzenberger';
SET @Character = 'Hamm';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Annie Potts';
SET @Character = 'Bo Peep';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Morris';
SET @Character = 'Andy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Erik von Detten';
SET @Character = 'Sid';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Laurie Metcalf';
SET @Character = 'Mrs. Davis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('rescue', 'friendship', 'mission', 'jealousy', 'villain', 'bullying', 'elementary school', 'rivalry', 'anthropomorphism', 'friends', 'computer animation', 'buddy', 'walkie talkie', 'toy car', 'boy next door', 'new toy', 'neighborhood', 'toy comes to life', 'resourcefulness', 'toy');

GO


-- ============================================
-- Movie: Toy Story 2
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Toy Story 2';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Adventure', 'Comedy', 'Family', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('John Lasseter', 'Ash Brannon', 'Lee Unkrich');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('John Lasseter', 'Pete Docter', 'Ash Brannon', 'Andrew Stanton', 'Rita Hsiao', 'Doug Chamberlin', 'Chris Webb');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tom Hanks';
SET @Character = 'Woody';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tim Allen';
SET @Character = 'Buzz Lightyear';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joan Cusack';
SET @Character = 'Jessie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kelsey Grammer';
SET @Character = 'Prospector';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Don Rickles';
SET @Character = 'Mr. Potato Head';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jim Varney';
SET @Character = 'Slinky Dog';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wallace Shawn';
SET @Character = 'Rex';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Ratzenberger';
SET @Character = 'Hamm';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Annie Potts';
SET @Character = 'Bo Peep';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wayne Knight';
SET @Character = 'Al McWhiggin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('friendship', 'airplane', 'museum', 'prosecution', 'identity crisis', 'villain', 'flea market', 'collector', 'sequel', 'buddy', 'rescue team', 'prospector', 'garage sale', 'duringcreditsstinger', 'toy comes to life', 'personification', 'inanimate objects come to life');

GO


-- ============================================
-- Movie: Toy Story 3
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Toy Story 3';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Adventure', 'Comedy', 'Family', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Lee Unkrich');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('John Lasseter', 'Andrew Stanton', 'Lee Unkrich', 'Michael Arndt', 'Mark Andrews', 'David Reynolds', 'Justin Wright');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tom Hanks';
SET @Character = 'Woody';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tim Allen';
SET @Character = 'Buzz Lightyear';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joan Cusack';
SET @Character = 'Jessie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ned Beatty';
SET @Character = 'Lotso';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Don Rickles';
SET @Character = 'Mr. Potato Head';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Keaton';
SET @Character = 'Ken';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wallace Shawn';
SET @Character = 'Rex';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Ratzenberger';
SET @Character = 'Hamm';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Estelle Harris';
SET @Character = 'Mrs. Potato Head';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Morris';
SET @Character = 'Andy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('escape', 'hostage', 'college', 'villain', 'sequel', 'buddy', 'daycare', 'teddy bear', 'duringcreditsstinger', 'toy comes to life', 'personification', 'inanimate objects come to life');

GO


-- ============================================
-- Movie: Toy Story 4
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Toy Story 4';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Adventure', 'Comedy', 'Family', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Josh Cooley');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('John Lasseter', 'Andrew Stanton', 'Josh Cooley', 'Valerie LaPointe', 'Rashida Jones', 'Will McCormack', 'Martin Hynes', 'Stephany Folsom');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Tom Hanks';
SET @Character = 'Woody';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tim Allen';
SET @Character = 'Buzz Lightyear';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Annie Potts';
SET @Character = 'Bo Peep';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tony Hale';
SET @Character = 'Forky';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Keegan-Michael Key';
SET @Character = 'Ducky';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Madeleine McGraw';
SET @Character = 'Bonnie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christina Hendricks';
SET @Character = 'Gabby Gabby';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jordan Peele';
SET @Character = 'Bunny';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Keanu Reeves';
SET @Character = 'Duke Caboom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ally Maki';
SET @Character = 'Giggle McDimples';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('friendship', 'cartoon', 'rescue mission', 'sequel', 'anti villain', 'buddy', 'cowboy', 'duringcreditsstinger', 'toy comes to life', 'dedication', 'awestruck');

GO


-- ============================================
-- Movie: The Conjuring
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Conjuring';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Horror', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('James Wan');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Chad Hayes', 'Carey W. Hayes');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Vera Farmiga';
SET @Character = 'Lorraine Warren';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Patrick Wilson';
SET @Character = 'Ed Warren';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lili Taylor';
SET @Character = 'Carolyn Perron';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ron Livingston';
SET @Character = 'Roger Perron';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shanley Caswell';
SET @Character = 'Andrea';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hayley McFarland';
SET @Character = 'Nancy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joey King';
SET @Character = 'Christine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mackenzie Foy';
SET @Character = 'Cindy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kyla Deaver';
SET @Character = 'April';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shannon Kook';
SET @Character = 'Drew';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('sibling relationship', '1970s', 'cellar', 'exorcism', 'haunted house', 'possession', 'satanism', 'rhode island', 'based on true story', 'paranormal investigation', 'crucifix', 'ghost', 'disturbed', 'demonic', 'demonology', 'psychic vision', 'dramatic', 'the conjuring universe', 'frightened');

GO


-- ============================================
-- Movie: Annabelle: Creation
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Annabelle: Creation';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Horror', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('David F. Sandberg');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Gary Dauberman');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Anthony LaPaglia';
SET @Character = 'Samuel Mullins';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samara Lee';
SET @Character = 'Bee';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Miranda Otto';
SET @Character = 'Esther Mullins';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Brad Greenquist';
SET @Character = 'Victor Palmeri';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lulu Wilson';
SET @Character = 'Linda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Talitha Eliana Bateman';
SET @Character = 'Janice';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephanie Sigman';
SET @Character = 'Sister Charlotte';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Bramhall';
SET @Character = 'Father Massey';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Grace Caroline Currey';
SET @Character = 'Carol';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Philippa Coulthard';
SET @Character = 'Nancy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('prequel', 'evil doll', 'demon', 'spin off', 'demonic possession', 'ghost', 'aftercreditsstinger', 'duringcreditsstinger', 'the conjuring universe');

GO


-- ============================================
-- Movie: Annabelle Comes Home
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Annabelle Comes Home';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Horror', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Gary Dauberman');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Gary Dauberman', 'James Wan');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Vera Farmiga';
SET @Character = 'Lorraine Warren';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Patrick Wilson';
SET @Character = 'Ed Warren';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mckenna Grace';
SET @Character = 'Judy Warren';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Madison Iseman';
SET @Character = 'Mary Ellen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Katie Sarife';
SET @Character = 'Daniela Rios';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Cimino';
SET @Character = 'Bob Palmeri';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samara Lee';
SET @Character = 'Bee';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kenzie Caplan';
SET @Character = 'Nurse';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sade Katarina';
SET @Character = 'Nurse';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Patrick McGill';
SET @Character = 'Cop';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('supernatural', 'babysitter', 'priest', 'doll', 'creepy doll', 'jump scare', 'possessed doll', 'supernatural power', 'the conjuring universe');

GO


-- ============================================
-- Movie: The Curse of La Llorona
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Curse of La Llorona';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Horror', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Michael Chaves');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Mikki Daughtry', 'Tobias Iaconis');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Linda Cardellini';
SET @Character = 'Anna';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Roman Christou';
SET @Character = 'Chris';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jaynee-Lynne Kinchen';
SET @Character = 'Samantha';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Raymond Cruz';
SET @Character = 'Rafael';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Marisol Ramirez';
SET @Character = 'La Llorona';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Patricia Velasquez';
SET @Character = 'Patricia Alvarez';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sean Patrick Thomas';
SET @Character = 'Detective Cooper';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tony Amendola';
SET @Character = 'Father Perez';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Irene Keng';
SET @Character = 'Donna';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Oliver Alexander';
SET @Character = 'Carlos';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('mexico', '1970s', 'supernatural', 'priest', 'folklore', 'supernatural horror', 'mexican folklore', 'la llorona', 'horror', 'los angeles');

GO


-- ============================================
-- Movie: The Conjuring: The Devil Made Me Do It
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Conjuring: The Devil Made Me Do It';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Horror', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Michael Chaves');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('David Leslie Johnson-McGoldrick', 'James Wan', 'Chad Hayes', 'Carey W. Hayes');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Patrick Wilson';
SET @Character = 'Ed Warren';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vera Farmiga';
SET @Character = 'Lorraine Warren';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ruairi O''Connor';
SET @Character = 'Arne Cheyenne Johnson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sarah Catherine Hook';
SET @Character = 'Debbie Glatzel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julian Hilliard';
SET @Character = 'David Glatzel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Noble';
SET @Character = 'Kastner';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eugenie Bondurant';
SET @Character = 'The Occultist';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shannon Kook';
SET @Character = 'Drew';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ronnie Gene Blevins';
SET @Character = 'Bruno';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Keith Arthur Bolden';
SET @Character = 'Sergeant Clay';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('supernatural', 'exorcism', 'connecticut', 'sequel', 'paranormal investigation', '1980s', 'somber', 'religious horror', 'the conjuring universe', 'frightened');

GO


-- ============================================
-- Movie: The Nun
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Nun';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Horror', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Corin Hardy');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Gary Dauberman', 'James Wan');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Demi√°n Bichir';
SET @Character = 'Father Burke';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Taissa Farmiga';
SET @Character = 'Sister Irene';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jonas Bloquet';
SET @Character = 'Frenchie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bonnie Aarons';
SET @Character = 'The Nun';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ingrid Bisu';
SET @Character = 'Sister Oana';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Patrick Wilson';
SET @Character = 'Ed Warren';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vera Farmiga';
SET @Character = 'Lorraine Warren';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lili Taylor';
SET @Character = 'Carolyn Perron';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Charlotte Hope';
SET @Character = 'Sister Victoria';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sandra Teles';
SET @Character = 'Sister Ruth';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('rome', 'italy', 'nun', 'supernatural', 'exorcism', 'father', 'priest', 'spirit', 'demon', 'spin off', 'evil nun', 'demonic possession', 'romania', 'murder mystery', 'ancient evil', 'the conjuring universe');

GO


-- ============================================
-- Movie: The Nun II
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Nun II';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Horror', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Michael Chaves');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Ian Goldberg', 'Richard Naing', 'Akela Cooper', 'James Wan', 'Gary Dauberman');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Taissa Farmiga';
SET @Character = 'Irene';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jonas Bloquet';
SET @Character = 'Maurice';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Storm Reid';
SET @Character = 'Debra';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anna Popplewell';
SET @Character = 'Kate';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bonnie Aarons';
SET @Character = 'The Demon Nun';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Katelyn Rose Downey';
SET @Character = 'Sophie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Suzanne Bertish';
SET @Character = 'Madame Laurent';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'L√©ontine d''Oncieu';
SET @Character = 'Simone';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anouk Darwin Homewood';
SET @Character = 'Celeste';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peter Hudson';
SET @Character = 'Father Ridley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('france', 'nun', 'bullying', 'sequel', 'priest', 'religion', 'church', 'demon', 'gothic horror', 'demonic possession', 'praying', 'duringcreditsstinger', '1950s', 'demonic', 'girls'' school', 'convent', 'the conjuring universe');

GO


-- ============================================
-- Movie: The Matrix
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Matrix';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Lana Wachowski', 'Lilly Wachowski');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Lilly Wachowski', 'Lana Wachowski');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Keanu Reeves';
SET @Character = 'Neo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Laurence Fishburne';
SET @Character = 'Morpheus';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Carrie-Anne Moss';
SET @Character = 'Trinity';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hugo Weaving';
SET @Character = 'Agent Smith';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gloria Foster';
SET @Character = 'Oracle';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joe Pantoliano';
SET @Character = 'Cypher';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Marcus Chong';
SET @Character = 'Tank';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julian Arahanga';
SET @Character = 'Apoc';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matt Doran';
SET @Character = 'Mouse';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Belinda McClory';
SET @Character = 'Switch';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('man vs machine', 'martial arts', 'dreams', 'artificial intelligence (a.i.)', 'saving the world', 'hacker', 'self sacrifice', 'virtual reality', 'fight', 'prophecy', 'truth', 'philosophy', 'dystopia', 'insurgence', 'simulated reality', 'cyberpunk', 'dream world', 'messiah', 'action hero', 'gnosticism', 'hopeful', 'allegory of the cave');

GO


-- ============================================
-- Movie: The Matrix Reloaded
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Matrix Reloaded';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Lana Wachowski', 'Lilly Wachowski');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Lilly Wachowski', 'Lana Wachowski');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ray Anthony';
SET @Character = 'Power Station Guard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christine Anu';
SET @Character = 'Kali';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andy Arness';
SET @Character = 'Police #2';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alima Ashton-Sheibu';
SET @Character = 'Link''s Niece';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Helmut Bakaitis';
SET @Character = 'The Architect';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steve Bastoni';
SET @Character = 'Soren';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Don Battee';
SET @Character = 'Vector';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Monica Bellucci';
SET @Character = 'Persephone';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daniel Bernhardt';
SET @Character = 'Agent Johnson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Valerie Berry';
SET @Character = 'Priestess';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('dying and death', 'future', 'mission', 'man vs machine', 'underground world', 'martial arts', 'kung fu', 'hero', 'dreams', 'artificial intelligence (a.i.)', 'computer', 'saving the world', 'computer virus', 'virtual reality', 'fight', 'prophecy', 'faith', 'truth', 'key', 'dystopia', 'simulation', 'plato', 'precognition', 'rave', 'car crash', 'cyberpunk', 'philosophical', 'action hero', 'gnosticism', 'oracle', 'grand', 'romantic', 'awestruck', 'defiant', 'sardonic');

GO


-- ============================================
-- Movie: The Matrix Revolutions
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Matrix Revolutions';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Lana Wachowski', 'Lilly Wachowski');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Lilly Wachowski', 'Lana Wachowski');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Mary Alice';
SET @Character = 'The Oracle';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tanveer K. Atwal';
SET @Character = 'Sati';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Helmut Bakaitis';
SET @Character = 'The Architect';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kate Beahan';
SET @Character = 'Coat Check Girl';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Francine Bell';
SET @Character = 'Councillor Grace';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Monica Bellucci';
SET @Character = 'Persephone';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rachel Blackman';
SET @Character = 'Charra';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Henry Blasingame';
SET @Character = 'Deus Ex Machina';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ian Bliss';
SET @Character = 'Bane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Bowers';
SET @Character = 'Q-Ball Gang Member #1';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('dying and death', 'rescue', 'future', 'mission', 'man vs machine', 'underground world', 'machine town', 'martial arts', 'kung fu', 'hero', 'dreams', 'fortune teller', 'artificial intelligence (a.i.)', 'computer', 'saving the world', 'flying', 'temple', 'computer virus', 'virtual reality', 'fight', 'faith', 'truth', 'philosophy', 'key', 'killer robot', 'subway', 'dystopia', 'sun', 'sunlight', 'precognition', 'super computer', 'ying yang', 'cyberpunk', 'philosophical', 'action hero', 'gnosticism', 'inspirational', 'grand');

GO


-- ============================================
-- Movie: The Matrix Resurrections
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Matrix Resurrections';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Lana Wachowski');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Lana Wachowski', 'David Mitchell', 'Aleksandar Hemon', 'Lilly Wachowski');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Keanu Reeves';
SET @Character = 'Neo / Thomas Anderson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Carrie-Anne Moss';
SET @Character = 'Trinity / Tiffany';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yahya Abdul-Mateen II';
SET @Character = 'Morpheus / Agent Smith';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jonathan Groff';
SET @Character = 'Smith';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jessica Henwick';
SET @Character = 'Bugs';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Neil Patrick Harris';
SET @Character = 'The Analyst';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jada Pinkett Smith';
SET @Character = 'Niobe';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Priyanka Chopra Jonas';
SET @Character = 'Sati';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christina Ricci';
SET @Character = 'Gwyn de Vere';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lambert Wilson';
SET @Character = 'The Merovingian';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('future', 'man vs machine', 'underground world', 'artificial intelligence (a.i.)', 'computer', 'virtual reality', 'prophecy', 'dystopia', 'cyberpunk', 'aftercreditsstinger', 'dream world', 'woman director', 'philosophical', 'gnosticism', 'grand', 'romantic', 'sincere');

GO


-- ============================================
-- Movie: John Wick
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'John Wick';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Crime', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Chad Stahelski');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Derek Kolstad');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Keanu Reeves';
SET @Character = 'John Wick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Nyqvist';
SET @Character = 'Viggo Tarasov';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alfie Allen';
SET @Character = 'Iosef Tarasov';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Willem Dafoe';
SET @Character = 'Marcus';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dean Winters';
SET @Character = 'Avi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adrianne Palicki';
SET @Character = 'Ms. Perkins';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Omer Barnea';
SET @Character = 'Gregori';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Toby Leonard Moore';
SET @Character = 'Victor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daniel Bernhardt';
SET @Character = 'Kirill';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bridget Moynahan';
SET @Character = 'Helen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('hitman', 'bratva (russian mafia)', 'gangster', 'secret organization', 'revenge', 'murder', 'dog', 'retired', 'widower');

GO


-- ============================================
-- Movie: John Wick: Chapter 2
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'John Wick: Chapter 2';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Crime', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Chad Stahelski');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Derek Kolstad');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Keanu Reeves';
SET @Character = 'John Wick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Riccardo Scamarcio';
SET @Character = 'Santino D''Antonio';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ian McShane';
SET @Character = 'Winston';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ruby Rose';
SET @Character = 'Ares';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Common';
SET @Character = 'Cassian';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Claudia Gerini';
SET @Character = 'Gianna D''Antonio';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lance Reddick';
SET @Character = 'Charon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Laurence Fishburne';
SET @Character = 'Bowery King';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tobias Segal';
SET @Character = 'Earl';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Leguizamo';
SET @Character = 'Aurelio';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('martial arts', 'assassin', 'hitman', 'italy', 'roof', 'secret organization', 'sequel', 'revenge', 'shootout', 'handshake', 'neo-noir', 'guns', 'dark', 'dogs', 'roof-top');

GO


-- ============================================
-- Movie: John Wick: Chapter 3 - Parabellum
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'John Wick: Chapter 3 - Parabellum';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Crime', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Chad Stahelski');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Derek Kolstad', 'Shay Hatten', 'Chris Collins', 'Marc Abrams');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Keanu Reeves';
SET @Character = 'John Wick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Halle Berry';
SET @Character = 'Sofia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ian McShane';
SET @Character = 'Winston';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Laurence Fishburne';
SET @Character = 'Bowery King';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Dacascos';
SET @Character = 'Zero';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Asia Kate Dillon';
SET @Character = 'The Adjudicator';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lance Reddick';
SET @Character = 'Charon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tobias Segal';
SET @Character = 'Earl';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anjelica Huston';
SET @Character = 'The Director';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sa√Ød Taghmaoui';
SET @Character = 'The Elder';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new york city', 'martial arts', 'bratva (russian mafia)', 'casablanca', 'morocco', 'secret society', 'morocco', 'secret organization', 'black humor', 'sahara desert', 'sequel', 'organized crime', 'one man army', 'consequences', 'professional assassin', 'baba yaga', 'dog man friendship');

GO


-- ============================================
-- Movie: John Wick: Chapter 4
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'John Wick: Chapter 4';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Crime', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Chad Stahelski');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Shay Hatten', 'Michael Finch', 'Derek Kolstad');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Keanu Reeves';
SET @Character = 'John Wick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Laurence Fishburne';
SET @Character = 'Bowery King';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'George Georgiou';
SET @Character = 'The Elder';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lance Reddick';
SET @Character = 'Charon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Clancy Brown';
SET @Character = 'Harbinger';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ian McShane';
SET @Character = 'Winston';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Marko Zaror';
SET @Character = 'Chidi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bill Skarsg√•rd';
SET @Character = 'Marquis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Donnie Yen';
SET @Character = 'Caine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aim√©e Kwan';
SET @Character = 'Mia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('new york city', 'martial arts', 'berlin', 'germany', 'hitman', 'sequel', 'organized crime', 'osaka', 'japan', 'blindness', 'aftercreditsstinger', 'hunted', 'consequences', 'aggressive', 'professional assassin', 'neo-noir', 'suspenseful', 'tense', 'exhilarated', 'japanese mafia', 'japan style', 'located in japan');

GO


-- ============================================
-- Movie: The Hunger Games
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Hunger Games';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Gary Ross');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Gary Ross', 'Suzanne Collins', 'Billy Ray');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Stanley Tucci';
SET @Character = 'Caesar Flickerman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wes Bentley';
SET @Character = 'Seneca Crane';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jennifer Lawrence';
SET @Character = 'Katniss Everdeen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Willow Shields';
SET @Character = 'Primrose Everdeen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Liam Hemsworth';
SET @Character = 'Gale Hawthorne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Elizabeth Banks';
SET @Character = 'Effie Trinket';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sandra Ellis Lafferty';
SET @Character = 'Hob Vendor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paula Malcomson';
SET @Character = 'Katniss'' Mother';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rhoda Griffis';
SET @Character = 'Registration Woman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sandino Moya-Smith';
SET @Character = 'Propaganda Film Tribute';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('based on novel or book', 'revolution', 'dystopia', 'female protagonist', 'bow and arrow', 'game', 'archery', 'death match', 'survival competition', 'forced to kill', 'based on young adult novel');

GO


-- ============================================
-- Movie: The Hunger Games: Catching Fire
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Hunger Games: Catching Fire';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Francis Lawrence');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Simon Beaufoy', 'Michael Arndt', 'Suzanne Collins');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jennifer Lawrence';
SET @Character = 'Katniss Everdeen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Liam Hemsworth';
SET @Character = 'Gale Hawthorne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jack Quaid';
SET @Character = 'Marvel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Taylor St. Clair';
SET @Character = 'Ripper';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sandra Ellis Lafferty';
SET @Character = 'Greasy Sae';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Woody Harrelson';
SET @Character = 'Haymitch Abernathy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Josh Hutcherson';
SET @Character = 'Peeta Mellark';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paula Malcomson';
SET @Character = 'Katniss'' Mother';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Willow Shields';
SET @Character = 'Primrose Everdeen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Donald Sutherland';
SET @Character = 'President Snow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('rebellion', 'based on novel or book', 'propaganda', 'dystopia', 'uprising', 'sequel', 'president', 'survival', 'murder', 'conspiracy', 'female protagonist', 'tournament', 'game', 'survival competition', 'based on young adult novel');

GO


-- ============================================
-- Movie: The Hunger Games: Mockingjay - Part 1
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Hunger Games: Mockingjay - Part 1';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Francis Lawrence');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Peter Craig', 'Danny Strong', 'Suzanne Collins');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jennifer Lawrence';
SET @Character = 'Katniss Everdeen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Josh Hutcherson';
SET @Character = 'Peeta Mellark';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Liam Hemsworth';
SET @Character = 'Gale Hawthorne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Woody Harrelson';
SET @Character = 'Haymitch Abernathy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Donald Sutherland';
SET @Character = 'President Snow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Philip Seymour Hoffman';
SET @Character = 'Plutarch Heavensbee';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julianne Moore';
SET @Character = 'President Alma Coin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Willow Shields';
SET @Character = 'Primrose Everdeen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sam Claflin';
SET @Character = 'Finnick Odair';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Elizabeth Banks';
SET @Character = 'Effie Trinket';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('based on novel or book', 'resistance', 'dystopia', 'post-apocalyptic future', 'sequel', 'female protagonist', 'bow and arrow', 'game', 'future war', 'revolt', 'class prejudice', 'human subjugation', 'based on young adult novel');

GO


-- ============================================
-- Movie: The Hunger Games: Mockingjay - Part 2
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Hunger Games: Mockingjay - Part 2';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Francis Lawrence');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Peter Craig', 'Danny Strong', 'Suzanne Collins');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jennifer Lawrence';
SET @Character = 'Katniss Everdeen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Josh Hutcherson';
SET @Character = 'Peeta Mellark';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Liam Hemsworth';
SET @Character = 'Gale Hawthorne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Woody Harrelson';
SET @Character = 'Haymitch Abernathy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Donald Sutherland';
SET @Character = 'President Snow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Philip Seymour Hoffman';
SET @Character = 'Plutarch Heavensbee';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julianne Moore';
SET @Character = 'President Alma Coin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Willow Shields';
SET @Character = 'Primrose Everdeen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sam Claflin';
SET @Character = 'Finnick Odair';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Elizabeth Banks';
SET @Character = 'Effie Trinket';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('strong woman', 'based on novel or book', 'revolution', 'dystopia', 'death match', 'based on young adult novel');

GO


-- ============================================
-- Movie: The Hunger Games: The Ballad of Songbirds & Snakes
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Hunger Games: The Ballad of Songbirds & Snakes';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Drama', 'Sci-Fi', 'Thriller', 'War');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Francis Lawrence');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Michael Lesslie', 'Michael Arndt', 'Suzanne Collins');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Dexter Sol Ansell';
SET @Character = 'Young Coriolanus';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rosa Gotzler';
SET @Character = 'Young Tigris';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Clemens Schick';
SET @Character = 'Respectable Man';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Fionnula Flanagan';
SET @Character = 'Grandma''am';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tom Blyth';
SET @Character = 'Coriolanus Snow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hunter Schafer';
SET @Character = 'Tigris';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ashley Liao';
SET @Character = 'Clemensia Dovecote';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Athena Strates';
SET @Character = 'Persephone Price';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joshua Kantara';
SET @Character = 'Gaius Breen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Am√©lie Hoeferle';
SET @Character = 'Vipsania Sickle';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('daughter', 'based on novel or book', 'arena', 'fight', 'mentor', 'dystopia', 'riot', 'exploration', 'president', 'prequel', 'survival', 'murder', 'snow', 'creature', 'battle', 'fight to the death', 'curious', 'young adult', 'reflective', 'origin story', 'based on young adult novel', 'provocative', 'death game', 'teenager', 'critical', 'admiring', 'assertive');

GO


-- ============================================
-- Movie: Star Wars: Episode V - The Empire Strikes Back
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Star Wars: Episode V - The Empire Strikes Back';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Fantasy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Irvin Kershner');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Leigh Brackett', 'Lawrence Kasdan', 'George Lucas');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Mark Hamill';
SET @Character = 'Luke Skywalker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harrison Ford';
SET @Character = 'Han Solo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Carrie Fisher';
SET @Character = 'Princess Leia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Billy Dee Williams';
SET @Character = 'Lando Calrissian';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anthony Daniels';
SET @Character = 'C-3PO';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Prowse';
SET @Character = 'Darth Vader';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peter Mayhew';
SET @Character = 'Chewbacca';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kenny Baker';
SET @Character = 'R2-D2';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Frank Oz';
SET @Character = 'Yoda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alec Guinness';
SET @Character = 'Ben';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('rebellion', 'android', 'spacecraft', 'asteroid', 'rebel', 'space battle', 'snowstorm', 'space colony', 'swamp', 'space opera', 'nostalgic', 'artic', 'excited');

GO


-- ============================================
-- Movie: Star Wars: Episode VI - Return of the Jedi
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Star Wars: Episode VI - Return of the Jedi';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Fantasy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Richard Marquand');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Lawrence Kasdan', 'George Lucas');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Mark Hamill';
SET @Character = 'Luke Skywalker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harrison Ford';
SET @Character = 'Han Solo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Carrie Fisher';
SET @Character = 'Princess Leia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Billy Dee Williams';
SET @Character = 'Lando Calrissian';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anthony Daniels';
SET @Character = 'C-3PO';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peter Mayhew';
SET @Character = 'Chewbacca';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sebastian Shaw';
SET @Character = 'Anakin Skywalker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ian McDiarmid';
SET @Character = 'The Emperor';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Frank Oz';
SET @Character = 'Yoda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'James Earl Jones';
SET @Character = 'Darth Vader';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('spacecraft', 'sibling relationship', 'rebel', 'emperor', 'space battle', 'matter of life and death', 'forest', 'desert', 'space opera', 'amused');

GO


-- ============================================
-- Movie: Star Wars: Episode I - The Phantom Menace
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Star Wars: Episode I - The Phantom Menace';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Fantasy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('George Lucas');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('George Lucas');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Liam Neeson';
SET @Character = 'Qui-Gon Jinn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ewan McGregor';
SET @Character = 'Obi-Wan Kenobi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Natalie Portman';
SET @Character = 'Queen Amidala / Padm√©';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jake Lloyd';
SET @Character = 'Anakin Skywalker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ian McDiarmid';
SET @Character = 'Senator Palpatine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Pernilla August';
SET @Character = 'Shmi Skywalker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Oliver Ford Davies';
SET @Character = 'Sio Bibble';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hugh Quarshie';
SET @Character = 'Captain Panaka';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ahmed Best';
SET @Character = 'Jar Jar Binks';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anthony Daniels';
SET @Character = 'C-3PO';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('galaxy', 'senate', 'taskmaster', 'prophecy', 'queen', 'apprentice', 'taxes', 'space opera', 'powerful');

GO


-- ============================================
-- Movie: Star Wars: Episode II - Attack of the Clones
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Star Wars: Episode II - Attack of the Clones';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Fantasy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('George Lucas');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('George Lucas', 'Jonathan Hales');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ewan McGregor';
SET @Character = 'Obi-Wan Kenobi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Natalie Portman';
SET @Character = 'Padm√©';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hayden Christensen';
SET @Character = 'Anakin Skywalker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christopher Lee';
SET @Character = 'Count Dooku';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samuel L. Jackson';
SET @Character = 'Mace Windu';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Frank Oz';
SET @Character = 'Yoda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ian McDiarmid';
SET @Character = 'Supreme Chancellor Palpatine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Pernilla August';
SET @Character = 'Shmi Skywalker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Temuera Morrison';
SET @Character = 'Jango Fett';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jimmy Smits';
SET @Character = 'Senator Bail Organa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('army', 'laser gun', 'senate', 'investigation', 'cult figure', 'wedding', 'kendo', 'cynical', 'space opera', 'spaceport', 'teenage rebellion', 'good becoming evil', 'alien race', 'mechanical hand', 'powerful');

GO


-- ============================================
-- Movie: Star Wars: Episode III - Revenge of the Sith
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Star Wars: Episode III - Revenge of the Sith';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Fantasy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('George Lucas');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('George Lucas');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ewan McGregor';
SET @Character = 'Obi-Wan Kenobi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Natalie Portman';
SET @Character = 'Padm√©';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hayden Christensen';
SET @Character = 'Anakin Skywalker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ian McDiarmid';
SET @Character = 'Supreme Chancellor Palpatine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samuel L. Jackson';
SET @Character = 'Mace Windu';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jimmy Smits';
SET @Character = 'Senator Bail Organa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Frank Oz';
SET @Character = 'Yoda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anthony Daniels';
SET @Character = 'C-3PO';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christopher Lee';
SET @Character = 'Count Dooku';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Keisha Castle-Hughes';
SET @Character = 'Queen of Naboo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('showdown', 'lava', 'fight', 'politics', 'volcano', 'chosen one', 'sequel', 'romance', 'prequel', 'tragedy', 'cult figure', 'tragic hero', 'vision', 'planet', 'hatred', 'dream sequence', 'expectant mother', 'space opera', 'chancel', 'burn injury', 'allegorical', 'tragic romance', 'fall from grace', 'graphic', 'power', 'violence');

GO


-- ============================================
-- Movie: Star Wars: Episode VII - The Force Awakens
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Star Wars: Episode VII - The Force Awakens';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('J.J. Abrams');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Lawrence Kasdan', 'J.J. Abrams', 'Michael Arndt', 'George Lucas');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Harrison Ford';
SET @Character = 'Han Solo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Hamill';
SET @Character = 'Luke Skywalker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Carrie Fisher';
SET @Character = 'Princess Leia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adam Driver';
SET @Character = 'Kylo Ren';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daisy Ridley';
SET @Character = 'Rey';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Boyega';
SET @Character = 'Finn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Oscar Isaac';
SET @Character = 'Poe Dameron';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lupita Nyong''o';
SET @Character = 'Maz Kanata';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andy Serkis';
SET @Character = 'Supreme Leader Snoke';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Domhnall Gleeson';
SET @Character = 'General Hux';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('android', 'spacecraft', 'space opera', 'requel');

GO


-- ============================================
-- Movie: Star Wars: Episode VIII - The Last Jedi
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Star Wars: Episode VIII - The Last Jedi';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Fantasy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Rian Johnson');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Rian Johnson', 'George Lucas');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Mark Hamill';
SET @Character = 'Luke Skywalker / Dobbu Scay';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Carrie Fisher';
SET @Character = 'Leia Organa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adam Driver';
SET @Character = 'Kylo Ren';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daisy Ridley';
SET @Character = 'Rey';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Boyega';
SET @Character = 'Finn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Oscar Isaac';
SET @Character = 'Poe Dameron';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andy Serkis';
SET @Character = 'Snoke';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lupita Nyong''o';
SET @Character = 'Maz Kanata';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Domhnall Gleeson';
SET @Character = 'General Hux';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anthony Daniels';
SET @Character = 'C-3PO';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('bunker', 'space battle', 'defeat', 'failure', 'sequel', 'space opera', 'military operation');

GO


-- ============================================
-- Movie: Star Wars: Episode IX - The Rise of Skywalker
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Star Wars: Episode IX - The Rise of Skywalker';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Fantasy', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('J.J. Abrams');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Chris Terrio', 'J.J. Abrams', 'Derek Connolly', 'Colin Trevorrow', 'George Lucas');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Carrie Fisher';
SET @Character = 'Leia Organa';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Hamill';
SET @Character = 'Luke Skywalker / Boolio';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adam Driver';
SET @Character = 'Kylo Ren';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Daisy Ridley';
SET @Character = 'Rey';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Boyega';
SET @Character = 'Finn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Oscar Isaac';
SET @Character = 'Poe Dameron';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anthony Daniels';
SET @Character = 'C-3PO';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Naomi Ackie';
SET @Character = 'Jannah';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Domhnall Gleeson';
SET @Character = 'General Hux';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard E. Grant';
SET @Character = 'General Pryde';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('space opera');

GO


-- ============================================
-- Movie: Rogue One: A Star Wars Story
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Rogue One: A Star Wars Story';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Adventure');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Alex Freed');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jonathan Davis';
SET @Character = 'Narrator';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

GO


-- ============================================
-- Movie: Solo: A Star Wars Story
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Solo: A Star Wars Story';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Ron Howard');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Jonathan Kasdan', 'Lawrence Kasdan', 'George Lucas');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Alden Ehrenreich';
SET @Character = 'Han Solo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joonas Suotamo';
SET @Character = 'Chewbacca';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Woody Harrelson';
SET @Character = 'Beckett';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Emilia Clarke';
SET @Character = 'Qi''ra';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Donald Glover';
SET @Character = 'Lando Calrissian';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Thandiwe Newton';
SET @Character = 'Val';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Phoebe Waller-Bridge';
SET @Character = 'L3-37';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Paul Bettany';
SET @Character = 'Dryden Vos';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jon Favreau';
SET @Character = 'Rio Durant';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Erin Kellyman';
SET @Character = 'Enfys Nest';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('spacecraft', 'smuggling (contraband)', 'prequel', 'spin off', 'space opera');

GO


-- ============================================
-- Movie: Despicable Me 4
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Despicable Me 4';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Adventure', 'Comedy', 'Crime', 'Family', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Chris Renaud', 'Patrick Delage');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Mike White', 'Ken Daurio');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Steve Carell';
SET @Character = 'Gru';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Pierre Coffin';
SET @Character = 'Minions';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Will Ferrell';
SET @Character = 'Maxime';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sof√≠a Vergara';
SET @Character = 'Valentina';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Renaud';
SET @Character = 'Principal √úbelschlecht';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dana Gaier';
SET @Character = 'Edith';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Madison Skyy Polan';
SET @Character = 'Agnes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Miranda Cosgrove';
SET @Character = 'Margo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kristen Wiig';
SET @Character = 'Lucy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steve Coogan';
SET @Character = 'Silas';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('superhero', 'villain', 'sequel', 'super villain', 'aftercreditsstinger', 'duringcreditsstinger', 'kids', 'calm', 'illumination');

GO


-- ============================================
-- Movie: Despicable Me 2
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Despicable Me 2';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Adventure', 'Comedy', 'Crime', 'Family', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Pierre Coffin', 'Chris Renaud');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Cinco Paul', 'Ken Daurio');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Steve Carell';
SET @Character = 'Gru';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kristen Wiig';
SET @Character = 'Lucy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Benjamin Bratt';
SET @Character = 'Eduardo P√©rez / El Macho';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Miranda Cosgrove';
SET @Character = 'Margo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Russell Brand';
SET @Character = 'Dr. Nefario';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ken Jeong';
SET @Character = 'Floyd Eagle-san';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steve Coogan';
SET @Character = 'Silas Ramsbottom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Elsie Fisher';
SET @Character = 'Agnes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dana Gaier';
SET @Character = 'Edith';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Moises Arias';
SET @Character = 'Antonio P√©rez';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('parent child relationship', 'villain', 'adoptive father', 'secret agent', 'bakery', 'sequel', 'falling in love', 'family', 'single father', 'audition', 'female agent', 'duringcreditsstinger', 'first date', 'supervillain', 'masked supervillain', 'illumination', 'absurd', 'hilarious', 'amused', 'brisk');

GO


-- ============================================
-- Movie: Minions
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Minions';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Adventure', 'Comedy', 'Crime', 'Family', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Kyle Balda', 'Pierre Coffin');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Brian Lynch');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Sandra Bullock';
SET @Character = 'Scarlet Overkill';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jon Hamm';
SET @Character = 'Herb Overkill';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Keaton';
SET @Character = 'Walter Nelson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Allison Janney';
SET @Character = 'Madge Nelson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steve Coogan';
SET @Character = 'Professor Flux';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jennifer Saunders';
SET @Character = 'The Queen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Geoffrey Rush';
SET @Character = 'Narrator';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steve Carell';
SET @Character = 'Young Gru';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Pierre Coffin';
SET @Character = 'The Minions';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Katy Mixon Greer';
SET @Character = 'Tina';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('assistant', 'villain', 'prequel', 'aftercreditsstinger', 'duringcreditsstinger', 'evil mastermind', 'supervillain', 'illumination', 'amused', 'joyful');

GO


-- ============================================
-- Movie: Despicable Me 3
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Despicable Me 3';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Adventure', 'Comedy', 'Crime', 'Family', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Kyle Balda', 'Pierre Coffin', 'Eric Guillon');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Cinco Paul', 'Ken Daurio');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Steve Carell';
SET @Character = 'Gru / Dru';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kristen Wiig';
SET @Character = 'Lucy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Trey Parker';
SET @Character = 'Balthazar Bratt';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Miranda Cosgrove';
SET @Character = 'Margo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dana Gaier';
SET @Character = 'Edith';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nhev Scharrel';
SET @Character = 'Agnes';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Pierre Coffin';
SET @Character = 'Minions / Museum Director / Additional Voices';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Steve Coogan';
SET @Character = 'Fritz / Silas Ramsbottom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julie Andrews';
SET @Character = 'Gru''s Mom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jenny Slate';
SET @Character = 'Valerie Da Vinci';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('prison', 'villain', 'twin brother', 'sequel', 'jail', 'illumination');

GO


-- ============================================
-- Movie: Minions: The Rise of Gru
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Minions: The Rise of Gru';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Adventure', 'Comedy', 'Crime', 'Family', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Kyle Balda', 'Brad Ableson', 'Jonathan del Val');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Matthew Fogel', 'Brian Lynch');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Steve Carell';
SET @Character = 'Gru';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Pierre Coffin';
SET @Character = 'The Minions';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alan Arkin';
SET @Character = 'Wild Knuckles';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Taraji P. Henson';
SET @Character = 'Belle Bottom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michelle Yeoh';
SET @Character = 'Master Chow';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julie Andrews';
SET @Character = 'Gru''s Mom';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Russell Brand';
SET @Character = 'Nefario';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jean-Claude Van Damme';
SET @Character = 'Jean-Clawed';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dolph Lundgren';
SET @Character = 'Svengeance';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Danny Trejo';
SET @Character = 'Stronghold';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('1970s', 'villain', 'sequel', 'spin off', 'duringcreditsstinger', 'supervillain', 'illumination', 'gentleminions');

GO


-- ============================================
-- Movie: Shrek
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Shrek';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Adventure', 'Comedy', 'Family', 'Fantasy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Andrew Adamson', 'Vicky Jenson');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('William Steig', 'Ted Elliott', 'Terry Rossio', 'Joe Stillman', 'Roger S.H. Schulman', 'Cody Cameron', 'Chris Miller', 'Conrad Vernon');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Mike Myers';
SET @Character = 'Shrek / Blind Mouse / Opening Narration';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eddie Murphy';
SET @Character = 'Donkey';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cameron Diaz';
SET @Character = 'Princess Fiona';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Lithgow';
SET @Character = 'Lord Farquaad';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vincent Cassel';
SET @Character = 'Monsieur Hood';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Peter Dennis';
SET @Character = 'Ogre Hunter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Clive Pearse';
SET @Character = 'Ogre Hunter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jim Cummings';
SET @Character = 'Captain of Guards';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bobby Block';
SET @Character = 'Baby Bear';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Miller';
SET @Character = 'Geppetto / Magic Mirror';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('princess', 'based on novel or book', 'magic', 'fairy tale', 'donkey', 'liberation', 'lordship', 'prince', 'castle', 'villain', 'robin hood', 'enchantment', 'swamp', 'parody', 'anthropomorphism', 'dragon', 'woman director', 'ogre', 'cartoon donkey', 'hilarious');

GO


-- ============================================
-- Movie: Shrek 2
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Shrek 2';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Adventure', 'Comedy', 'Family', 'Fantasy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Andrew Adamson', 'Kelly Asbury', 'Conrad Vernon');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('William Steig', 'Andrew Adamson', 'Joe Stillman', 'J. David Stem', 'David N. Weiss', 'Cody Cameron', 'Walt Dohrn', 'Chris Miller', 'David P. Smith', 'Conrad Vernon');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Mike Myers';
SET @Character = 'Shrek';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eddie Murphy';
SET @Character = 'Donkey';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cameron Diaz';
SET @Character = 'Princess Fiona';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julie Andrews';
SET @Character = 'Queen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Antonio Banderas';
SET @Character = 'Puss In Boots';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Cleese';
SET @Character = 'King';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rupert Everett';
SET @Character = 'Prince Charming';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jennifer Saunders';
SET @Character = 'Fairy Godmother';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aron Warner';
SET @Character = 'Wolf';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kelly Asbury';
SET @Character = 'Page / Elf / Nobleman / Nobleman''s Son';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('prison', 'princess', 'magic', 'kingdom', 'fairy tale', 'liberation', 'transformation', 'honeymoon', 'prince', 'villain', 'parents-in-law', 'enchantment', 'sequel', 'anthropomorphism', 'dragon', 'ogre', 'fairy godmother', 'cartoon donkey');

GO


-- ============================================
-- Movie: Shrek Forever After
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Shrek Forever After';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Adventure', 'Comedy', 'Family', 'Fantasy', 'Romance');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Mike Mitchell');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Josh Klausner', 'Darren Lemke', 'William Steig', 'Andrew Adamson', 'Ted Elliott', 'Terry Rossio', 'Roger S.H. Schulman', 'Matthew Shire', 'Joe Stillman', 'Alejandro Bien-Willner');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Mike Myers';
SET @Character = 'Shrek';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eddie Murphy';
SET @Character = 'Donkey';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cameron Diaz';
SET @Character = 'Princess Fiona';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Antonio Banderas';
SET @Character = 'Puss in Boots';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Julie Andrews';
SET @Character = 'Queen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jon Hamm';
SET @Character = 'Brogan';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Cleese';
SET @Character = 'King';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Walt Dohrn';
SET @Character = 'Rumpelstiltskin / Priest / Krekraw Ogre';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jane Lynch';
SET @Character = 'Gretched';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Craig Robinson';
SET @Character = 'Cookie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('witch', 'sequel', 'ogre');

GO


-- ============================================
-- Movie: Puss in Boots: The Last Wish
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Puss in Boots: The Last Wish';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Animation', 'Action', 'Adventure', 'Comedy', 'Family', 'Fantasy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Joel Crawford', 'Januel Mercado');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Paul Fisher', 'Tommy Swerdlow', 'Tom Wheeler');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Antonio Banderas';
SET @Character = 'Puss in Boots';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Salma Hayek';
SET @Character = 'Kitty Softpaws';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harvey Guill√©n';
SET @Character = 'Perrito';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Florence Pugh';
SET @Character = 'Goldilocks';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Olivia Colman';
SET @Character = 'Mama Bear';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ray Winstone';
SET @Character = 'Papa Bear';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samson Kayo';
SET @Character = 'Baby Bear';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Mulaney';
SET @Character = 'Jack Horner';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Wagner Moura';
SET @Character = 'Wolf';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Da''Vine Joy Randolph';
SET @Character = 'Mama Luna';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('fairy tale', 'sequel', 'talking dog', 'spin off', 'aftercreditsstinger', 'talking cat', 'fear of death', 'amused');

GO


-- ============================================
-- Movie: Casino Royale
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Casino Royale';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Martin Campbell');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Neal Purvis', 'Robert Wade', 'Paul Haggis', 'Ian Fleming');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Daniel Craig';
SET @Character = 'James Bond';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eva Green';
SET @Character = 'Vesper Lynd';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mads Mikkelsen';
SET @Character = 'Le Chiffre';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Judi Dench';
SET @Character = 'M';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeffrey Wright';
SET @Character = 'Felix Leiter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Giancarlo Giannini';
SET @Character = 'Rene Mathis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Caterina Murino';
SET @Character = 'Solange';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Simon Abkarian';
SET @Character = 'Alex Dimitrios';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Isaach De Bankol√©';
SET @Character = 'Steven Obanno';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jesper Christensen';
SET @Character = 'Mr. White';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('banker', 'casino', 'based on novel or book', 'poker', 'italy', 'spy', 'money', 'torture', 'terrorism', 'mi6', 'british secret service', 'montenegro', 'serious', 'dramatic', 'thriller', 'intense', 'action', 'adventure', 'bold', 'tragic');

GO


-- ============================================
-- Movie: Quantum of Solace
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Quantum of Solace';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Mystery', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Marc Forster');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Paul Haggis', 'Neal Purvis', 'Robert Wade');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Daniel Craig';
SET @Character = 'James Bond';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Olga Kurylenko';
SET @Character = 'Camille';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mathieu Amalric';
SET @Character = 'Dominic Greene';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Judi Dench';
SET @Character = 'M';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Giancarlo Giannini';
SET @Character = 'Rene Mathis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gemma Arterton';
SET @Character = 'Strawberry Fields';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeffrey Wright';
SET @Character = 'Felix Leiter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Harbour';
SET @Character = 'Gregg Beam';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jesper Christensen';
SET @Character = 'Mr. White';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anatole Taubman';
SET @Character = 'Elvis';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('undercover', 'killing', 'secret agent', 'mi6', 'british secret service', 'intense', 'powerful', 'vibrant');

GO


-- ============================================
-- Movie: Skyfall
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Skyfall';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Sam Mendes');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Neal Purvis', 'Robert Wade', 'John Logan', 'Ian Fleming');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Daniel Craig';
SET @Character = 'James Bond';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Judi Dench';
SET @Character = 'M';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Javier Bardem';
SET @Character = 'Silva';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ralph Fiennes';
SET @Character = 'Gareth Mallory';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Naomie Harris';
SET @Character = 'Eve';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'B√©r√©nice Marlohe';
SET @Character = 'S√©v√©rine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Albert Finney';
SET @Character = 'Kincade';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ben Whishaw';
SET @Character = 'Q';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rory Kinnear';
SET @Character = 'Tanner';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ola Rapace';
SET @Character = 'Patrice';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('spy', 'secret agent', 'sociopath', 'police impersonator', 'mi6', 'killer', 'art gallery', 'british secret service', 'uzi', 'booby trap', 'macao', 'komodo dragon', 'intense', 'vibrant');

GO


-- ============================================
-- Movie: Spectre
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Spectre';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Sam Mendes');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('John Logan', 'Neal Purvis', 'Robert Wade', 'Jez Butterworth', 'Ian Fleming');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Daniel Craig';
SET @Character = 'James Bond';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christoph Waltz';
SET @Character = 'Blofeld';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'L√©a Seydoux';
SET @Character = 'Madeleine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ralph Fiennes';
SET @Character = 'M';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Monica Bellucci';
SET @Character = 'Lucia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ben Whishaw';
SET @Character = 'Q';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Naomie Harris';
SET @Character = 'Moneypenny';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dave Bautista';
SET @Character = 'Hinx';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Andrew Scott';
SET @Character = 'C';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rory Kinnear';
SET @Character = 'Tanner';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('based on novel or book', 'spy', 'secret agent', 'sequel', 'mi6', 'british secret service', 'united kingdom');

GO


-- ============================================
-- Movie: No Time to Die
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'No Time to Die';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('Cary Joji Fukunaga');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Neal Purvis', 'Robert Wade', 'Cary Joji Fukunaga', 'Phoebe Waller-Bridge');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Daniel Craig';
SET @Character = 'James Bond';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'L√©a Seydoux';
SET @Character = 'Madeleine';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rami Malek';
SET @Character = 'Lyutsifer Safin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lashana Lynch';
SET @Character = 'Nomi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ralph Fiennes';
SET @Character = 'M';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ben Whishaw';
SET @Character = 'Q';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Naomie Harris';
SET @Character = 'Moneypenny';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rory Kinnear';
SET @Character = 'Tanner';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jeffrey Wright';
SET @Character = 'Felix Leiter';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Billy Magnussen';
SET @Character = 'Logan Ash';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

-- ========== Keywords ==========
INSERT INTO MovieKeywords (MovieID, KeywordID)
SELECT @MovieID, KeywordID FROM Keywords
WHERE KeywordName IN ('based on novel or book', 'forgiveness', 'poison', 'spy', 'mi6', 'family', 'british secret service', 'parents', 'global threat', 'nanobots');

GO


-- ============================================
-- Movie: The Bear
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Bear';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Christopher Storer');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jeremy Allen White';
SET @Character = 'Carmen ''Carmy'' Berzatto';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ayo Edebiri';
SET @Character = 'Sydney Adamu';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Liza Col√≥n-Zayas';
SET @Character = 'Tina Marrero';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ebon Moss-Bachrach';
SET @Character = 'Richard ''Richie'' Jerimovich';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lionel Boyce';
SET @Character = 'Marcus';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Abby Elliott';
SET @Character = 'Natalie ''Sugar'' Berzatto';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Matty Matheson';
SET @Character = 'Neil Fak';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Edwin Lee Gibson';
SET @Character = 'Ebraheim';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Corey Hendrix';
SET @Character = 'Gary ''Sweeps'' Woods';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Richard Esteras';
SET @Character = 'Manny';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

GO


-- ============================================
-- Movie: Severance
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Severance';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Mystery', 'Sci-Fi', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Dan Erickson', 'Anna Ouyang Moench');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Adam Scott';
SET @Character = 'Mark Scout';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Britt Lower';
SET @Character = 'Helly R';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zach Cherry';
SET @Character = 'Dylan George';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tramell Tillman';
SET @Character = 'Seth Milchick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jen Tullock';
SET @Character = 'Devon Scout-Hale';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dichen Lachman';
SET @Character = 'Gemma Scout / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Patricia Arquette';
SET @Character = 'Harmony Cobel';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Chernus';
SET @Character = 'Ricken Hale';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'John Turturro';
SET @Character = 'Irving Baliff';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christopher Walken';
SET @Character = 'Burt Goodman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

GO


-- ============================================
-- Movie: Ripley
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Ripley';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Crime', 'Drama', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Patricia Highsmith', 'Steven Zaillian');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Andrew Scott';
SET @Character = 'Tom Ripley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dakota Fanning';
SET @Character = 'Marge Sherwood';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Johnny Flynn';
SET @Character = 'Dickie Greenleaf';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Margherita Buy';
SET @Character = 'Signora Buffi';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Vittorio Viviani';
SET @Character = 'Matteo';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Francesca Romana Bergamo';
SET @Character = 'Ermelinda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eliot Sumner';
SET @Character = 'Frederick ''Freddie'' Miles';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Maurizio Lombardi';
SET @Character = 'Inspector Pietro Ravini';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kenneth Lonergan';
SET @Character = 'Herbert Greenleaf';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Gennaro Arena';
SET @Character = 'Naples Kid';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

GO


-- ============================================
-- Movie: Baby Reindeer
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Baby Reindeer';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Biography', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Richard Gadd');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Richard Gadd';
SET @Character = 'Donny Dunn';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jessica Gunning';
SET @Character = 'Martha Scott';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nava Mau';
SET @Character = 'Teri';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Wildman';
SET @Character = 'Greggsy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Danny Kirrane';
SET @Character = 'Gino';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nina Sosanya';
SET @Character = 'Liz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shalom Brune-Franklin';
SET @Character = 'Keeley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Thomas Coombes';
SET @Character = 'Daniels';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mark Lewis Jones';
SET @Character = 'Gerry';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amanda Root';
SET @Character = 'Elle';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

GO


-- ============================================
-- Movie: Sh≈çgun
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Sh≈çgun';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Drama', 'History', 'War');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('James Clavell', 'Maegan Houang');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Cosmo Jarvis';
SET @Character = 'John Blackthorne';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Anna Sawai';
SET @Character = 'Toda Mariko';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tadanobu Asano';
SET @Character = 'Kashigi Yabushige';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Hiroyuki Sanada';
SET @Character = 'Yoshii Toranaga';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Y√ªki Ked√¥in';
SET @Character = 'Takemaru';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Akiko Kobayashi';
SET @Character = 'Setsu / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eushin Lee';
SET @Character = 'Yabushige''s Green Kosho #2';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Takehiro Hira';
SET @Character = 'Ishido Kazunari';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Yuki Kura';
SET @Character = 'Yoshii Nagakado';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Saeko Kimura';
SET @Character = 'Mariko''s Lady in Waiting #2';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

GO


-- ============================================
-- Movie: The Night Agent
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Night Agent';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Drama', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Imogen Browder');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Gabriel Basso';
SET @Character = 'Peter Sutherland';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Luciane Buchanan';
SET @Character = 'Rose Larkin';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Fola Evans-Akingbola';
SET @Character = 'Chelsea Arrington';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Louis Herthum';
SET @Character = 'Jacob Monroe';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Arienne Mandi';
SET @Character = 'Noor Taheri';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sarah Desjardins';
SET @Character = 'Maddie Redfield';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Eve Harlow';
SET @Character = 'Ellen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Berto Colon';
SET @Character = 'Solomon';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Phoenix Raei';
SET @Character = 'Dale';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Keon Alexander';
SET @Character = 'Javad';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

GO


-- ============================================
-- Movie: Silo
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Silo';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Mystery', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Hugh Howey', 'Jeffery Wang');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Rebecca Ferguson';
SET @Character = 'Juliette Nichols';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Common';
SET @Character = 'Robert Sims';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tim Robbins';
SET @Character = 'Bernard Holland';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harriet Walter';
SET @Character = 'Martha Walker';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chinaza Uche';
SET @Character = 'Paul Billings';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Avi Nash';
SET @Character = 'Lukas Kyle';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Remmie Milner';
SET @Character = 'Shirley Campbell';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Billy Postlethwaite';
SET @Character = 'Hank';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Shane McRae';
SET @Character = 'Knox';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rick Gomez';
SET @Character = 'Patrick Kennedy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

GO


-- ============================================
-- Movie: The Fall of the House of Usher
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'The Fall of the House of Usher';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Horror', 'Mystery');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Mike Flanagan', 'Justina Ireland');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Carla Gugino';
SET @Character = 'Verna';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bruce Greenwood';
SET @Character = 'Roderick Usher';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mary McDonnell';
SET @Character = 'Madeline Usher';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Henry Thomas';
SET @Character = 'Frederick Usher';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kate Siegel';
SET @Character = 'Camille L''Espanaye';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rahul Kohli';
SET @Character = 'Leo Usher';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Samantha Sloyan';
SET @Character = 'Tamerlane Usher';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'T''Nia Miller';
SET @Character = 'Victorine LaFourcade';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zach Gilford';
SET @Character = 'Young Roderick';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Willa Fitzgerald';
SET @Character = 'Young Madeline';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

GO


-- ============================================
-- Movie: Dark Matter
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Dark Matter';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Drama', 'Sci-Fi', 'Thriller');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Blake Crouch');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Joel Edgerton';
SET @Character = 'Jason Dessen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jennifer Connelly';
SET @Character = 'Daniela Vargas Dessen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alice Braga';
SET @Character = 'Amanda Lucas';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jimmi Simpson';
SET @Character = 'Ryan Holder';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dayo Okeniyi';
SET @Character = 'Leighton Vance';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Oakes Fegley';
SET @Character = 'Charlie Dessen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Marquita Brooks';
SET @Character = 'Dawn Lawrence';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Amanda Brugel';
SET @Character = 'Blair Caplan / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'William Smillie';
SET @Character = 'Matt / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Bassam Abdelfattah';
SET @Character = 'Anthony / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

GO


-- ============================================
-- Movie: Abbott Elementary
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Abbott Elementary';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Quinta Brunson', 'Joya McCrory');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Quinta Brunson';
SET @Character = 'Janine Teagues';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Tyler James Williams';
SET @Character = 'Gregory Eddie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Janelle James';
SET @Character = 'Ava Coleman';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lisa Ann Walter';
SET @Character = 'Melissa Schemmenti';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Chris Perfetti';
SET @Character = 'Jacob Hill';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Sheryl Lee Ralph';
SET @Character = 'Barbara Howard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'William Stanford Davis';
SET @Character = 'Mr. Johnson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zack Fox';
SET @Character = 'Tariq';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Josh Segarra';
SET @Character = 'Manny';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jerry Minor';
SET @Character = 'Mr. Morton';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

GO


-- ============================================
-- Movie: Jury Duty
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Jury Duty';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Lee Eisenberg', 'Marcos Gonzalez');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'James Marsden';
SET @Character = 'James Marsden';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Alan Barinholtz';
SET @Character = 'Judge Alan Rosen';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Susan Berger';
SET @Character = 'Barbara Goldstein';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Cassandra Blair';
SET @Character = 'Vanessa Jenkins';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'David Brown';
SET @Character = 'Todd Gregory';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Kirk Fox';
SET @Character = 'Pat McCurdy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ross Kimball';
SET @Character = 'Ross Kubiak';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Pramode Kumar';
SET @Character = 'Ravi Chattapodhyay';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Trisha LaFache';
SET @Character = 'Debra LaSeur';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Mekki Leeper';
SET @Character = 'Noah Price';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

GO


-- ============================================
-- Movie: Loot
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Loot';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Matt Hubbard', 'Nick Lehmann');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Maya Rudolph';
SET @Character = 'Molly Novak';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michaela Ja√©  Rodriguez';
SET @Character = 'Sofia';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Joel Kim Booster';
SET @Character = 'Nicholas';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ron Funches';
SET @Character = 'Howard';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Nat Faxon';
SET @Character = 'Arthur';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Meagen Fay';
SET @Character = 'Rhonda';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Stephanie Styles';
SET @Character = 'Ainsley';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Adam Scott';
SET @Character = 'John Novak';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ana Rey';
SET @Character = 'Marisol';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Olivier Martinez';
SET @Character = 'Jean-Pierre Voland';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

GO


-- ============================================
-- Movie: Shrinking
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Shrinking';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Comedy', 'Drama');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Brett Goldstein', 'Bill Lawrence');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Jason Segel';
SET @Character = 'Jimmy';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Jessica Williams';
SET @Character = 'Gaby';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Luke Tennie';
SET @Character = 'Sean';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Michael Urie';
SET @Character = 'Brian';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Lukita Maxwell';
SET @Character = 'Alice';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Christa Miller';
SET @Character = 'Liz';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Harrison Ford';
SET @Character = 'Paul';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Ted McGinley';
SET @Character = 'Derek';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rachel Stubington';
SET @Character = 'Summer';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Devin Kawaoka';
SET @Character = 'Charlie';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

GO


-- ============================================
-- Movie: Fallout
-- ============================================
DECLARE @MovieTitle VARCHAR(255) = 'Fallout';
DECLARE @MovieID INT;
SELECT @MovieID = MovieID FROM Movies WHERE Title = @MovieTitle;

-- ========== Genres ==========
INSERT INTO MovieGenres (MovieID, GenreID)
SELECT @MovieID, GenreID FROM Genres
WHERE GenreName IN ('Action', 'Adventure', 'Drama', 'Sci-Fi');

-- ========== Directors ==========
INSERT INTO MovieDirectors (MovieID, DirectorID)
SELECT @MovieID, DirectorID FROM Directors
WHERE DirectorName IN ('');

-- ========== Writers ==========
INSERT INTO MovieWriters (MovieID, WriterID)
SELECT @MovieID, WriterID FROM Writers
WHERE WriterName IN ('Chaz Hawkins', 'Geneva Robertson-Dworet');

-- ========== Actors ==========
DECLARE @ActorName VARCHAR(100), @Character VARCHAR(100), @ActorID INT;

SET @ActorName = 'Ella Purnell';
SET @Character = 'Lucy MacLean';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Aaron Moten';
SET @Character = 'Maximus';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Walton Goggins';
SET @Character = 'Cooper Howard / ...';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Moises Arias';
SET @Character = 'Norm MacLean';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Leer Leary';
SET @Character = 'Davey';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Leslie Uggams';
SET @Character = 'Betty Pearson';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Zach Cherry';
SET @Character = 'Woody Thomas';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Dave Register';
SET @Character = 'Chet';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Annabel O''Hagan';
SET @Character = 'Stephanie Harper';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

SET @ActorName = 'Rodrigo Luzzi';
SET @Character = 'Reg McPhee';
SELECT @ActorID = ActorID FROM Actors WHERE ActorName = @ActorName;
INSERT INTO MovieActors (MovieID, ActorID, CharacterName) VALUES (@MovieID, @ActorID, @Character);

GO


-------------------------------------------------------------------------------------------------------------------------------------------------------




-- Dummy Data  
-- Users:
INSERT INTO Users (FullName, Username, PasswordHash, Email, Gender, DateOfBirth, Bio, UserType, Privacy)
VALUES
('Muhammad Ibrahim Alam', 'ibrahim_admin', 'hashed_ibrahim_pw', 'ibrahim@example.com', 'Male', '2004-09-12', 'FMDb database manager.', 'Admin', 'Public'),

('Tayyab Khalid', 'tayyab_admin', 'hashed_tayyab_pw', 'tayyab@example.com', 'Male', '2004-06-25', 'FMDb backend enthusiast.', 'Admin', 'Public'),

('Muhammad Wahaj', 'wahaj_admin', 'hashed_wahaj_pw', 'wahaj@example.com', 'Male', '2005-06-18', 'FMDb frontend wizard.', 'Admin', 'Public'),

('Areeba Khan', 'areeba.k', 'areebapass123', 'areeba.khan@example.com', 'Female', '2004-07-15', 'Movie lover and part-time critic.', 'Critic', 'Public'),

('Hamza Sheikh', 'hamzas',  'hamzapass456', 'hamza.sheikh@example.com', 'Male', '2003-11-02', 'I enjoy thrillers and deep sci-fi plots.', 'Critic', 'Public'),

('Alice Johnson', 'alicej', 'hashed_pw1', 'alice@example.com', 'Female', '1995-06-15', 'Movie lover & critic.', 'User', 'Public'),

('Bob Smith', 'bobsmith', 'hashed_pw2', 'bob@example.com', 'Male', '1990-03-22', 'Fan of thrillers and mysteries.', 'User', 'Public'),

('Charlie Brown', 'charlieb', 'hashed_pw3', 'charlie@example.com', 'Male', '1988-12-05', 'Sci-fi addict and popcorn fan.', 'User', 'Public'),

('Diana Prince', 'dianap', 'hashed_pw4', 'diana@example.com', 'Female', '1992-11-08', 'Action movie junkie.', 'User', 'Private'),

('Ethan Hunt', 'ethanh', 'hashed_pw5', 'ethan@example.com', 'Male', '1987-07-30', 'Adventure is my middle name.', 'User', 'Public');

GO 


-- Friends

-- Insert unique symmetric friendships (UserID1 < UserID2)
INSERT INTO Friends (User1ID, User2ID)
VALUES
(1, 2),  -- Ibrahim & Tayyab
(1, 3),  -- Ibrahim & Wahaj
(2, 3),  -- Tayyab & Wahaj
(4, 5),
(4, 6),
(5, 7),
(4, 7),
(6, 8),
(5, 9),
(6, 9),
(7, 10),
(4, 8),
(8, 10),
(5, 10),
(7, 9),
(6, 10);

GO

-- UserFavourites

-- Ibrahim (UserID 1)
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (1, 2, 1);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (1, 4, 2);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (1, 6, 3);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (1, 8, 4);

-- Tayyab (UserID 2)
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (2, 1, 1);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (2, 3, 2);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (2, 5, 3);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (2, 7, 4);

-- Wahaj (UserID 3)
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (3, 4, 1);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (3, 6, 2);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (3, 9, 3);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (3, 2, 4);

-- Areeba (UserID 4)
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (4, 1, 1);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (4, 5, 2);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (4, 8, 3);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (4, 10, 4);

-- Hamza (UserID 5)
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (5, 3, 1);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (5, 6, 2);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (5, 7, 3);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (5, 9, 4);

-- User6 (UserID 6)
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (6, 2, 1);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (6, 4, 2);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (6, 6, 3);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (6, 8, 4);

-- User7 (UserID 7)
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (7, 1, 1);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (7, 3, 2);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (7, 7, 3);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (7, 10, 4);

-- User8 (UserID 8)
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (8, 4, 1);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (8, 5, 2);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (8, 8, 3);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (8, 10, 4);

-- User9 (UserID 9)
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (9, 1, 1);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (9, 6, 2);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (9, 7, 3);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (9, 9, 4);

-- User10 (UserID 10)
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (10, 2, 1);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (10, 3, 2);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (10, 5, 3);
INSERT INTO UserFavorites (UserID, MovieID, Rank) VALUES (10, 9, 4);


GO

-- UserLikesMovies 
-- Ibrahim (UserID 1)
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (1, 1);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (1, 3);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (1, 5);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (1, 7);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (1, 9);

-- Tayyab (UserID 2)
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (2, 2);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (2, 4);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (2, 6);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (2, 8);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (2, 10);

-- Wahaj (UserID 3)
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (3, 1);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (3, 4);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (3, 7);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (3, 10);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (3, 11);

-- Areeba (UserID 4)
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (4, 3);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (4, 6);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (4, 9);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (4, 12);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (4, 14);

-- Hamza (UserID 5)
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (5, 2);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (5, 5);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (5, 8);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (5, 11);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (5, 13);

-- User6
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (6, 1);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (6, 4);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (6, 7);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (6, 10);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (6, 13);

-- User7
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (7, 3);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (7, 5);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (7, 9);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (7, 11);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (7, 15);

-- User8
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (8, 2);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (8, 6);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (8, 8);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (8, 12);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (8, 14);

-- User9
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (9, 1);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (9, 5);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (9, 10);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (9, 13);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (9, 15);

-- User10
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (10, 4);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (10, 6);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (10, 8);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (10, 12);
INSERT INTO UserLikedMovies (UserID, MovieID) VALUES (10, 14);


-- UserWatchlist

-- User 1 Watchlist
INSERT INTO UserWatchlist (UserID, MovieID) VALUES (1, 101);
INSERT INTO UserWatchlist (UserID, MovieID) VALUES (1, 102);
INSERT INTO UserWatchlist (UserID, MovieID) VALUES (1, 103);

-- User 2 Watchlist
INSERT INTO UserWatchlist (UserID, MovieID) VALUES (2, 104);
INSERT INTO UserWatchlist (UserID, MovieID) VALUES (2, 101);

-- User 3 Watchlist
INSERT INTO UserWatchlist (UserID, MovieID) VALUES (3, 105);
INSERT INTO UserWatchlist (UserID, MovieID) VALUES (3, 106);
INSERT INTO UserWatchlist (UserID, MovieID) VALUES (3, 107);

-- User 4 Watchlist
INSERT INTO UserWatchlist (UserID, MovieID) VALUES (4, 102);
INSERT INTO UserWatchlist (UserID, MovieID) VALUES (4, 104);

-- User 5 Watchlist
INSERT INTO UserWatchlist (UserID, MovieID) VALUES (5, 108);
INSERT INTO UserWatchlist (UserID, MovieID) VALUES (5, 109);

-- User 6 Watchlist
INSERT INTO UserWatchlist (UserID, MovieID) VALUES (6, 103);
INSERT INTO UserWatchlist (UserID, MovieID) VALUES (6, 106);

-- User 7 Watchlist
INSERT INTO UserWatchlist (UserID, MovieID) VALUES (7, 110);
INSERT INTO UserWatchlist (UserID, MovieID) VALUES (7, 105);

-- User 8 Watchlist
INSERT INTO UserWatchlist (UserID, MovieID) VALUES (8, 101);
INSERT INTO UserWatchlist (UserID, MovieID) VALUES (8, 109);

-- User 9 ( Does not have any watchlist ) 
-- User 10( Does not have any watchlist )



-- Activity 
-- User 1 Activity
INSERT INTO Activity (IsLogged, UserID, MovieID, Ratings, Review, IsReply)
VALUES (1, 1, 101, 8, 'Great movie with an engaging storyline.', 0);

-- User 2 Activity
INSERT INTO Activity (IsLogged, UserID, MovieID, Ratings, Review, IsReply)
VALUES (1, 2, 104, 7, 'Good movie, but a bit slow at times.', 0);

-- User 3 Activity
INSERT INTO Activity (IsLogged, UserID, MovieID, Ratings, Review, IsReply)
VALUES (1, 3, 105, 9, 'Loved the visuals and soundtrack!', 0);

-- User 4 Activity
INSERT INTO Activity (IsLogged, UserID, MovieID, Ratings, Review, IsReply)
VALUES (1, 4, 102, 6, 'Interesting concept but poor execution.', 0);

-- User 5 Activity
INSERT INTO Activity (IsLogged, UserID, MovieID, Ratings, Review, IsReply)
VALUES (1, 5, 108, 10, 'Masterpiece! A must-watch.', 0);

-- User 6 Activity
INSERT INTO Activity (IsLogged, UserID, MovieID, Ratings, Review, IsReply)
VALUES (1, 6, 106, 5, 'Average movie. Could be better.', 0);

-- User 7 Activity (Reply to someone‚Äôs review)
INSERT INTO Activity (IsLogged, UserID, MovieID, Ratings, Review, IsReply)
VALUES (1, 7, 105, 8, 'I totally agree with your review!', 1);

-- User 8 Activity
INSERT INTO Activity (IsLogged, UserID, MovieID, Ratings, Review, IsReply)
VALUES (0, 3, 105, 1, 'Fuck OFF.', 1);

GO 
-- User 1
INSERT INTO Activity (IsLogged, UserID, MovieID, Ratings, Review, IsReply)
VALUES 
(0, 1, 110, 7, NULL, 0),
(0, 1, 111, NULL, 'Looks interesting, might watch later.', 0),
(0, 1, 112, 6, 'Not really my type of film.', 0);

-- User 2
INSERT INTO Activity (IsLogged, UserID, MovieID, Ratings, Review, IsReply)
VALUES 
(0, 2, 113, 8, NULL, 0),
(0, 2, 114, NULL, 'Saw the trailer, seems cool.', 0),
(0, 2, 115, 5, 'Too predictable.', 0);

-- User 3
INSERT INTO Activity (IsLogged, UserID, MovieID, Ratings, Review, IsReply)
VALUES 
(0, 3, 116, 9, NULL, 0),
(0, 3, 117, NULL, 'Nice visuals, might check it out.', 0),
(0, 3, 118, 4, 'Didn‚Äôt like the pacing.', 0);

-- User 4
INSERT INTO Activity (IsLogged, UserID, MovieID, Ratings, Review, IsReply)
VALUES 
(0, 4, 119, 6, NULL, 0),
(0, 4, 120, NULL, 'Acting seems weak from the trailer.', 0),
(0, 4, 121, 3, 'Probably not going to finish it.', 0);

-- User 5
INSERT INTO Activity (IsLogged, UserID, MovieID, Ratings, Review, IsReply)
VALUES 
(0, 5, 122, 8, NULL, 0),
(0, 5, 123, NULL, 'Story looks fresh!', 0),
(0, 5, 124, 7, 'Not bad, solid performance.', 0);

-- User 6
INSERT INTO Activity (IsLogged, UserID, MovieID, Ratings, Review, IsReply)
VALUES 
(0, 6, 125, 5, NULL, 0),
(0, 6, 126, NULL, 'Feels clich√©.', 0),
(0, 6, 127, 6, 'Mid-tier thriller.', 0);

-- User 7
INSERT INTO Activity (IsLogged, UserID, MovieID, Ratings, Review, IsReply)
VALUES 
(0, 7, 128, 9, NULL, 0),
(0, 7, 129, NULL, 'Saw someone recommend it.', 0),
(0, 7, 130, 8, 'Definitely going on my watchlist.', 0);

-- User 8
INSERT INTO Activity (IsLogged, UserID, MovieID, Ratings, Review, IsReply)
VALUES 
(0, 8, 131, 6, NULL, 0),
(0, 8, 132, NULL, 'Loved the soundtrack.', 0),
(0, 8, 133, 7, 'Solid weekend watch.', 0);


GO 

-- Reply 

INSERT INTO Reply (ActivityID, ReplyID)
VALUES (3, 7);  -- 3 = original activity id by User 1, 7 = reply id  (reply by User 7 to user 1 on activity id 3 )



INSERT INTO Reply (ActivityID, ReplyID)
VALUES (7, 8);  -- 7 = original activity id by User 7, 8 = reply id (reply by User 3 to user 1 on activity id 3) 

-- ActivityLikes 


-- User 1 likes ActivityID 3
INSERT INTO ActivityLikes (ActivityID, UserID)
VALUES (3, 1);

-- User 2 likes ActivityID 5
INSERT INTO ActivityLikes (ActivityID, UserID)
VALUES (5, 2);

-- User 3 likes ActivityID 6
INSERT INTO ActivityLikes (ActivityID, UserID)
VALUES (6, 3);

-- User 4 likes ActivityID 9
INSERT INTO ActivityLikes (ActivityID, UserID)
VALUES (9, 4);

-- User 5 likes ActivityID 12
INSERT INTO ActivityLikes (ActivityID, UserID)
VALUES (12, 5);

-- User 6 likes ActivityID 14
INSERT INTO ActivityLikes (ActivityID, UserID)
VALUES (14, 6);

-- User 7 likes ActivityID 17
INSERT INTO ActivityLikes (ActivityID, UserID)
VALUES (17, 7);

-- User 8 likes ActivityID 19
INSERT INTO ActivityLikes (ActivityID, UserID)
VALUES (19, 8);

Go 

-- Notifications 

INSERT INTO Notifications (SenderID, ReceiverID, Message, NotificationType)
VALUES 
(1, 4, 'You have a new friend request from User1.', 'FriendReq'),
(2, 5, 'Your review on Movie1 has been approved by the admin.', 'AdminReq'),
(3, 6, 'CriticReview: Movie2 is a must-watch!', 'CriticReq'),
(4, 5, 'You have a new general notification regarding your activity.', 'General'),
(5, 6, 'You have a new comment on your review of Movie3.', 'General'),
(6, 7, 'Your request to follow User5 has been accepted.', 'FriendReq'),
(7, 8, 'Your review has been liked by User7.', 'General'),
(3, 4, 'Will you Marry me.', 'General'),
(4, 3, 'NO', 'General'),
(4, 2, 'Remove User 3, He is bullying me', 'General');



